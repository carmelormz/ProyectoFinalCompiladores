Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> MODULE CTE_STR creaDirFunc PUNTCOM ajustes var_func tipo_main MAIN actualiza_id crea_func bloque_func
Rule 2     tipo_main -> <empty>
Rule 3     creaDirFunc -> <empty>
Rule 4     ajustes -> CANVAS BRAIZQ WIDTH CTE_I PUNTCOM HEIGHT CTE_I PUNTCOM BACKGROUND CTE_I COMA CTE_I COMA CTE_I PUNTCOM BRADER
Rule 5     ajustes -> IMPORT CTE_STR PUNTCOM
Rule 6     var_func -> tipo ID actualiza_id var_o_func
Rule 7     var_func -> <empty>
Rule 8     actualiza_id -> <empty>
Rule 9     var_o_func -> PARIZQ crea_func pars PARDER bloque_func funcs
Rule 10    var_o_func -> crea_var lista_dec vars_lista PUNTCOM var_func
Rule 11    crea_var -> <empty>
Rule 12    lista_dec -> CORIZQ CTE_I CORDER matriz_dec
Rule 13    lista_dec -> <empty>
Rule 14    matriz_dec -> CORIZQ CTE_I CORDER
Rule 15    matriz_dec -> <empty>
Rule 16    bloque_func -> BRAIZQ vars_estatutos RETURN returns BRADER end_sub
Rule 17    end_sub -> <empty>
Rule 18    vars_estatutos -> vars estatutos
Rule 19    vars_estatutos -> estatutos
Rule 20    estatutos -> estatuto estatutos
Rule 21    estatutos -> <empty>
Rule 22    vars -> tipo ID actualiza_id crea_var lista_dec vars_lista PUNTCOM mas_vars
Rule 23    vars_lista -> COMA ID actualiza_id crea_var lista_dec vars_lista
Rule 24    vars_lista -> <empty>
Rule 25    mas_vars -> vars
Rule 26    mas_vars -> <empty>
Rule 27    funcs -> func funcs
Rule 28    funcs -> <empty>
Rule 29    func -> tipo ID actualiza_id crea_func PARIZQ pars PARDER bloque_func
Rule 30    func -> VOID tipo_void ID actualiza_id crea_func PARIZQ pars PARDER bloque_func
Rule 31    var_func -> VOID tipo_void ID actualiza_id crea_func PARIZQ pars PARDER bloque_func funcs
Rule 32    returns -> expresion PUNTCOM
Rule 33    returns -> PUNTCOM
Rule 34    pars -> tipo ID actualiza_id crea_var gen_dir par
Rule 35    pars -> <empty>
Rule 36    par -> COMA tipo ID actualiza_id crea_var gen_dir par
Rule 37    par -> <empty>
Rule 38    gen_dir -> <empty>
Rule 39    tipo_void -> <empty>
Rule 40    crea_func -> <empty>
Rule 41    push_oper -> <empty>
Rule 42    pop_or -> <empty>
Rule 43    pop_and -> <empty>
Rule 44    pop_rel_e -> <empty>
Rule 45    pop_suma_resta -> <empty>
Rule 46    pop_mult_div -> <empty>
Rule 47    expresion -> expr or_expr
Rule 48    or_expr -> OR push_oper expresion pop_or
Rule 49    or_expr -> <empty>
Rule 50    expr -> exp and_exp
Rule 51    and_exp -> AND push_oper expr pop_and
Rule 52    and_exp -> <empty>
Rule 53    exp -> e rel_e
Rule 54    rel_e -> DIF push_oper exp pop_rel_e
Rule 55    rel_e -> MENOR push_oper exp pop_rel_e
Rule 56    rel_e -> MAYOR push_oper exp pop_rel_e
Rule 57    rel_e -> MENIGUAL push_oper exp pop_rel_e
Rule 58    rel_e -> MAYIGUAL push_oper exp pop_rel_e
Rule 59    rel_e -> IGUAL push_oper exp pop_rel_e
Rule 60    rel_e -> <empty>
Rule 61    e -> termino suma_resta
Rule 62    suma_resta -> SUMA push_oper e pop_suma_resta
Rule 63    suma_resta -> RESTA push_oper e pop_suma_resta
Rule 64    suma_resta -> <empty>
Rule 65    termino -> factor mult_div
Rule 66    mult_div -> MULT push_oper termino pop_mult_div
Rule 67    mult_div -> DIV push_oper termino pop_mult_div
Rule 68    mult_div -> MOD push_oper termino pop_mult_div
Rule 69    mult_div -> <empty>
Rule 70    factor -> PARIZQ push_paren e PARDER pop_paren
Rule 71    factor -> var
Rule 72    factor -> RESTA neg_push var neg_pop
Rule 73    neg_push -> <empty>
Rule 74    neg_pop -> <empty>
Rule 75    var -> ID actualiza_id var_func_call
Rule 76    var -> CTE_I
Rule 77    var -> CTE_F
Rule 78    var -> error
Rule 79    push_dim -> <empty>
Rule 80    pop_dim -> <empty>
Rule 81    lista -> CORIZQ push_dim expresion CORDER matriz
Rule 82    lista -> <empty>
Rule 83    matriz -> CORIZQ expresion CORDER pop_dim
Rule 84    matriz -> pop_dim
Rule 85    var_func_call -> lista
Rule 86    push_paren -> <empty>
Rule 87    pop_paren -> <empty>
Rule 88    estatuto -> asignacion
Rule 89    estatuto -> condicion
Rule 90    estatuto -> escritura
Rule 91    estatuto -> ciclo
Rule 92    estatuto -> instruccion
Rule 93    estatuto -> func_call PUNTCOM
Rule 94    bloque -> BRAIZQ estatutos BRADER
Rule 95    func_call -> ID actualiza_id actualiza_func PARIZQ args gen_era PARDER gen_gosub
Rule 96    var_func_call -> PARIZQ actualiza_func args gen_era PARDER gen_gosub
Rule 97    actualiza_func -> <empty>
Rule 98    gen_era -> <empty>
Rule 99    gen_gosub -> <empty>
Rule 100   args -> expresion asig_par arg
Rule 101   args -> <empty>
Rule 102   arg -> COMA args
Rule 103   arg -> <empty>
Rule 104   asig_par -> <empty>
Rule 105   asignacion -> ID actualiza_id lista ASIG exp_input PUNTCOM
Rule 106   exp_input -> expresion
Rule 107   exp_input -> INPUT PARIZQ PARDER
Rule 108   condicion -> IF PARIZQ expresion fin_exp PARDER bloque else_bloque fin_cond
Rule 109   else_bloque -> ELSE inicio_else bloque
Rule 110   else_bloque -> <empty>
Rule 111   fin_cond -> <empty>
Rule 112   inicio_else -> <empty>
Rule 113   fin_exp -> <empty>
Rule 114   ciclo -> REPEAT push_cont PARIZQ expresion fin_exp PARDER bloque fin_repeat
Rule 115   push_cont -> <empty>
Rule 116   fin_repeat -> <empty>
Rule 117   escritura -> PRINT PARIZQ arg_escritura PARDER PUNTCOM
Rule 118   arg_escritura -> expresion fin_arg args_escritura
Rule 119   arg_escritura -> CTE_STR print_string args_escritura
Rule 120   args_escritura -> COMA arg_escritura
Rule 121   args_escritura -> <empty>
Rule 122   fin_arg -> <empty>
Rule 123   print_string -> <empty>
Rule 124   tipo -> INT actualiza_tipo
Rule 125   tipo -> FLOAT actualiza_tipo
Rule 126   actualiza_tipo -> <empty>
Rule 127   instruccion -> FORWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM
Rule 128   instruccion -> BACKWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM
Rule 129   instruccion -> LEFT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM
Rule 130   instruccion -> RIGHT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM
Rule 131   instruccion -> TURN actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM
Rule 132   instruccion -> SIZE actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM
Rule 133   instruccion -> CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM
Rule 134   instruccion -> TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM
Rule 135   instruccion -> SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM
Rule 136   instruccion -> NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM
Rule 137   instruccion -> ARC actualiza_instr PARIZQ expresion PARDER fin_instr1 trans PUNTCOM
Rule 138   instruccion -> UP actualiza_instr PARIZQ PARDER fin_instr PUNTCOM
Rule 139   instruccion -> DOWN actualiza_instr PARIZQ PARDER fin_instr PUNTCOM
Rule 140   instruccion -> COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM
Rule 141   instruccion -> FILLED_CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM
Rule 142   instruccion -> FILLED_SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM
Rule 143   instruccion -> FILLED_TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM
Rule 144   instruccion -> FILLED_NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM
Rule 145   instruccion -> FILLER_COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM
Rule 146   fill -> PUNTO FILL actualiza_instr PARIZQ PARDER fin_instr
Rule 147   trans -> PUNTO altera trans
Rule 148   trans -> <empty>
Rule 149   altera -> ROTATE actualiza_instr PARIZQ expresion PARDER fin_instr1
Rule 150   altera -> STRETCH actualiza_instr PARIZQ expresion PARDER fin_instr1
Rule 151   transform -> fill trans
Rule 152   transform -> <empty>
Rule 153   actualiza_instr -> <empty>
Rule 154   fin_instr -> <empty>
Rule 155   fin_instr1 -> <empty>
Rule 156   fin_instr2 -> <empty>
Rule 157   fin_color -> <empty>

Terminals, with rules where they appear

AND                  : 51
ARC                  : 137
ASIG                 : 105
BACKGROUND           : 4
BACKWARD             : 128
BRADER               : 4 16 94
BRAIZQ               : 4 16 94
CANVAS               : 4
CIRCLE               : 133
COLOR                : 140
COMA                 : 4 4 23 36 102 120 140 140 145 145
CORDER               : 12 14 81 83
CORIZQ               : 12 14 81 83
CTE_F                : 77
CTE_I                : 4 4 4 4 4 12 14 76
CTE_STR              : 1 5 119
DIF                  : 54
DIV                  : 67
DOWN                 : 139
ELSE                 : 109
FILL                 : 146
FILLED_CIRCLE        : 141
FILLED_NGON          : 144
FILLED_SQUARE        : 142
FILLED_TRIANGLE      : 143
FILLER_COLOR         : 145
FLOAT                : 125
FORWARD              : 127
HEIGHT               : 4
ID                   : 6 22 23 29 30 31 34 36 75 95 105
IF                   : 108
IGUAL                : 59
IMPORT               : 5
INPUT                : 107
INT                  : 124
LEFT                 : 129
MAIN                 : 1
MAYIGUAL             : 58
MAYOR                : 56
MENIGUAL             : 57
MENOR                : 55
MOD                  : 68
MODULE               : 1
MULT                 : 66
NGON                 : 136
OR                   : 48
PARDER               : 9 29 30 31 70 95 96 107 108 114 117 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 149 150
PARIZQ               : 9 29 30 31 70 95 96 107 108 114 117 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 149 150
PRINT                : 117
PUNTCOM              : 1 4 4 4 5 10 22 32 33 93 105 117 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145
PUNTO                : 146 147
REPEAT               : 114
RESTA                : 63 72
RETURN               : 16
RIGHT                : 130
ROTATE               : 149
SIZE                 : 132
SQUARE               : 135
STRETCH              : 150
SUMA                 : 62
TRIANGLE             : 134
TURN                 : 131
UP                   : 138
VOID                 : 30 31
WIDTH                : 4
error                : 78

Nonterminals, with rules where they appear

actualiza_func       : 95 96
actualiza_id         : 1 6 22 23 29 30 31 34 36 75 95 105
actualiza_instr      : 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 149 150
actualiza_tipo       : 124 125
ajustes              : 1
altera               : 147
and_exp              : 50
arg                  : 100
arg_escritura        : 117 120
args                 : 95 96 102
args_escritura       : 118 119
asig_par             : 100
asignacion           : 88
bloque               : 108 109 114
bloque_func          : 1 9 29 30 31
ciclo                : 91
condicion            : 89
creaDirFunc          : 1
crea_func            : 1 9 29 30 31
crea_var             : 10 22 23 34 36
e                    : 53 62 63 70
else_bloque          : 108
end_sub              : 16
escritura            : 90
estatuto             : 20
estatutos            : 18 19 20 94
exp                  : 50 54 55 56 57 58 59
exp_input            : 105
expr                 : 47 51
expresion            : 32 48 81 83 100 106 108 114 118 127 128 129 130 131 132 133 134 135 136 137 140 140 140 141 142 143 144 145 145 145 149 150
factor               : 65
fill                 : 151
fin_arg              : 118
fin_color            : 140 145
fin_cond             : 108
fin_exp              : 108 114
fin_instr            : 138 139 146
fin_instr1           : 127 128 129 130 131 132 133 134 135 136 137 141 142 143 144 149 150
fin_instr2           : 
fin_repeat           : 114
func                 : 27
func_call            : 93
funcs                : 9 27 31
gen_dir              : 34 36
gen_era              : 95 96
gen_gosub            : 95 96
inicio_else          : 109
instruccion          : 92
lista                : 85 105
lista_dec            : 10 22 23
mas_vars             : 22
matriz               : 81
matriz_dec           : 12
mult_div             : 65
neg_pop              : 72
neg_push             : 72
or_expr              : 47
par                  : 34 36
pars                 : 9 29 30 31
pop_and              : 51
pop_dim              : 83 84
pop_mult_div         : 66 67 68
pop_or               : 48
pop_paren            : 70
pop_rel_e            : 54 55 56 57 58 59
pop_suma_resta       : 62 63
print_string         : 119
programa             : 0
push_cont            : 114
push_dim             : 81
push_oper            : 48 51 54 55 56 57 58 59 62 63 66 67 68
push_paren           : 70
rel_e                : 53
returns              : 16
suma_resta           : 61
termino              : 61 66 67 68
tipo                 : 6 22 29 34 36
tipo_main            : 1
tipo_void            : 30 31
trans                : 137 147 151
transform            : 133 134 135 136 141 142 143 144
var                  : 71 72
var_func             : 1 10
var_func_call        : 75
var_o_func           : 6
vars                 : 18 25
vars_estatutos       : 16
vars_lista           : 10 22 23

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . MODULE CTE_STR creaDirFunc PUNTCOM ajustes var_func tipo_main MAIN actualiza_id crea_func bloque_func

    MODULE          shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> MODULE . CTE_STR creaDirFunc PUNTCOM ajustes var_func tipo_main MAIN actualiza_id crea_func bloque_func

    CTE_STR         shift and go to state 3


state 3

    (1) programa -> MODULE CTE_STR . creaDirFunc PUNTCOM ajustes var_func tipo_main MAIN actualiza_id crea_func bloque_func
    (3) creaDirFunc -> .

    PUNTCOM         reduce using rule 3 (creaDirFunc -> .)

    creaDirFunc                    shift and go to state 4

state 4

    (1) programa -> MODULE CTE_STR creaDirFunc . PUNTCOM ajustes var_func tipo_main MAIN actualiza_id crea_func bloque_func

    PUNTCOM         shift and go to state 5


state 5

    (1) programa -> MODULE CTE_STR creaDirFunc PUNTCOM . ajustes var_func tipo_main MAIN actualiza_id crea_func bloque_func
    (4) ajustes -> . CANVAS BRAIZQ WIDTH CTE_I PUNTCOM HEIGHT CTE_I PUNTCOM BACKGROUND CTE_I COMA CTE_I COMA CTE_I PUNTCOM BRADER
    (5) ajustes -> . IMPORT CTE_STR PUNTCOM

    CANVAS          shift and go to state 7
    IMPORT          shift and go to state 8

    ajustes                        shift and go to state 6

state 6

    (1) programa -> MODULE CTE_STR creaDirFunc PUNTCOM ajustes . var_func tipo_main MAIN actualiza_id crea_func bloque_func
    (6) var_func -> . tipo ID actualiza_id var_o_func
    (7) var_func -> .
    (31) var_func -> . VOID tipo_void ID actualiza_id crea_func PARIZQ pars PARDER bloque_func funcs
    (124) tipo -> . INT actualiza_tipo
    (125) tipo -> . FLOAT actualiza_tipo

    MAIN            reduce using rule 7 (var_func -> .)
    VOID            shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13

    var_func                       shift and go to state 9
    tipo                           shift and go to state 10

state 7

    (4) ajustes -> CANVAS . BRAIZQ WIDTH CTE_I PUNTCOM HEIGHT CTE_I PUNTCOM BACKGROUND CTE_I COMA CTE_I COMA CTE_I PUNTCOM BRADER

    BRAIZQ          shift and go to state 14


state 8

    (5) ajustes -> IMPORT . CTE_STR PUNTCOM

    CTE_STR         shift and go to state 15


state 9

    (1) programa -> MODULE CTE_STR creaDirFunc PUNTCOM ajustes var_func . tipo_main MAIN actualiza_id crea_func bloque_func
    (2) tipo_main -> .

    MAIN            reduce using rule 2 (tipo_main -> .)

    tipo_main                      shift and go to state 16

state 10

    (6) var_func -> tipo . ID actualiza_id var_o_func

    ID              shift and go to state 17


state 11

    (31) var_func -> VOID . tipo_void ID actualiza_id crea_func PARIZQ pars PARDER bloque_func funcs
    (39) tipo_void -> .

    ID              reduce using rule 39 (tipo_void -> .)

    tipo_void                      shift and go to state 18

state 12

    (124) tipo -> INT . actualiza_tipo
    (126) actualiza_tipo -> .

    ID              reduce using rule 126 (actualiza_tipo -> .)

    actualiza_tipo                 shift and go to state 19

state 13

    (125) tipo -> FLOAT . actualiza_tipo
    (126) actualiza_tipo -> .

    ID              reduce using rule 126 (actualiza_tipo -> .)

    actualiza_tipo                 shift and go to state 20

state 14

    (4) ajustes -> CANVAS BRAIZQ . WIDTH CTE_I PUNTCOM HEIGHT CTE_I PUNTCOM BACKGROUND CTE_I COMA CTE_I COMA CTE_I PUNTCOM BRADER

    WIDTH           shift and go to state 21


state 15

    (5) ajustes -> IMPORT CTE_STR . PUNTCOM

    PUNTCOM         shift and go to state 22


state 16

    (1) programa -> MODULE CTE_STR creaDirFunc PUNTCOM ajustes var_func tipo_main . MAIN actualiza_id crea_func bloque_func

    MAIN            shift and go to state 23


state 17

    (6) var_func -> tipo ID . actualiza_id var_o_func
    (8) actualiza_id -> .

    PARIZQ          reduce using rule 8 (actualiza_id -> .)
    CORIZQ          reduce using rule 8 (actualiza_id -> .)
    COMA            reduce using rule 8 (actualiza_id -> .)
    PUNTCOM         reduce using rule 8 (actualiza_id -> .)

    actualiza_id                   shift and go to state 24

state 18

    (31) var_func -> VOID tipo_void . ID actualiza_id crea_func PARIZQ pars PARDER bloque_func funcs

    ID              shift and go to state 25


state 19

    (124) tipo -> INT actualiza_tipo .

    ID              reduce using rule 124 (tipo -> INT actualiza_tipo .)


state 20

    (125) tipo -> FLOAT actualiza_tipo .

    ID              reduce using rule 125 (tipo -> FLOAT actualiza_tipo .)


state 21

    (4) ajustes -> CANVAS BRAIZQ WIDTH . CTE_I PUNTCOM HEIGHT CTE_I PUNTCOM BACKGROUND CTE_I COMA CTE_I COMA CTE_I PUNTCOM BRADER

    CTE_I           shift and go to state 26


state 22

    (5) ajustes -> IMPORT CTE_STR PUNTCOM .

    VOID            reduce using rule 5 (ajustes -> IMPORT CTE_STR PUNTCOM .)
    INT             reduce using rule 5 (ajustes -> IMPORT CTE_STR PUNTCOM .)
    FLOAT           reduce using rule 5 (ajustes -> IMPORT CTE_STR PUNTCOM .)
    MAIN            reduce using rule 5 (ajustes -> IMPORT CTE_STR PUNTCOM .)


state 23

    (1) programa -> MODULE CTE_STR creaDirFunc PUNTCOM ajustes var_func tipo_main MAIN . actualiza_id crea_func bloque_func
    (8) actualiza_id -> .

    BRAIZQ          reduce using rule 8 (actualiza_id -> .)

    actualiza_id                   shift and go to state 27

state 24

    (6) var_func -> tipo ID actualiza_id . var_o_func
    (9) var_o_func -> . PARIZQ crea_func pars PARDER bloque_func funcs
    (10) var_o_func -> . crea_var lista_dec vars_lista PUNTCOM var_func
    (11) crea_var -> .

    PARIZQ          shift and go to state 29
    CORIZQ          reduce using rule 11 (crea_var -> .)
    COMA            reduce using rule 11 (crea_var -> .)
    PUNTCOM         reduce using rule 11 (crea_var -> .)

    var_o_func                     shift and go to state 28
    crea_var                       shift and go to state 30

state 25

    (31) var_func -> VOID tipo_void ID . actualiza_id crea_func PARIZQ pars PARDER bloque_func funcs
    (8) actualiza_id -> .

    PARIZQ          reduce using rule 8 (actualiza_id -> .)

    actualiza_id                   shift and go to state 31

state 26

    (4) ajustes -> CANVAS BRAIZQ WIDTH CTE_I . PUNTCOM HEIGHT CTE_I PUNTCOM BACKGROUND CTE_I COMA CTE_I COMA CTE_I PUNTCOM BRADER

    PUNTCOM         shift and go to state 32


state 27

    (1) programa -> MODULE CTE_STR creaDirFunc PUNTCOM ajustes var_func tipo_main MAIN actualiza_id . crea_func bloque_func
    (40) crea_func -> .

    BRAIZQ          reduce using rule 40 (crea_func -> .)

    crea_func                      shift and go to state 33

state 28

    (6) var_func -> tipo ID actualiza_id var_o_func .

    MAIN            reduce using rule 6 (var_func -> tipo ID actualiza_id var_o_func .)


state 29

    (9) var_o_func -> PARIZQ . crea_func pars PARDER bloque_func funcs
    (40) crea_func -> .

    INT             reduce using rule 40 (crea_func -> .)
    FLOAT           reduce using rule 40 (crea_func -> .)
    PARDER          reduce using rule 40 (crea_func -> .)

    crea_func                      shift and go to state 34

state 30

    (10) var_o_func -> crea_var . lista_dec vars_lista PUNTCOM var_func
    (12) lista_dec -> . CORIZQ CTE_I CORDER matriz_dec
    (13) lista_dec -> .

    CORIZQ          shift and go to state 36
    COMA            reduce using rule 13 (lista_dec -> .)
    PUNTCOM         reduce using rule 13 (lista_dec -> .)

    lista_dec                      shift and go to state 35

state 31

    (31) var_func -> VOID tipo_void ID actualiza_id . crea_func PARIZQ pars PARDER bloque_func funcs
    (40) crea_func -> .

    PARIZQ          reduce using rule 40 (crea_func -> .)

    crea_func                      shift and go to state 37

state 32

    (4) ajustes -> CANVAS BRAIZQ WIDTH CTE_I PUNTCOM . HEIGHT CTE_I PUNTCOM BACKGROUND CTE_I COMA CTE_I COMA CTE_I PUNTCOM BRADER

    HEIGHT          shift and go to state 38


state 33

    (1) programa -> MODULE CTE_STR creaDirFunc PUNTCOM ajustes var_func tipo_main MAIN actualiza_id crea_func . bloque_func
    (16) bloque_func -> . BRAIZQ vars_estatutos RETURN returns BRADER end_sub

    BRAIZQ          shift and go to state 40

    bloque_func                    shift and go to state 39

state 34

    (9) var_o_func -> PARIZQ crea_func . pars PARDER bloque_func funcs
    (34) pars -> . tipo ID actualiza_id crea_var gen_dir par
    (35) pars -> .
    (124) tipo -> . INT actualiza_tipo
    (125) tipo -> . FLOAT actualiza_tipo

    PARDER          reduce using rule 35 (pars -> .)
    INT             shift and go to state 12
    FLOAT           shift and go to state 13

    pars                           shift and go to state 41
    tipo                           shift and go to state 42

state 35

    (10) var_o_func -> crea_var lista_dec . vars_lista PUNTCOM var_func
    (23) vars_lista -> . COMA ID actualiza_id crea_var lista_dec vars_lista
    (24) vars_lista -> .

    COMA            shift and go to state 44
    PUNTCOM         reduce using rule 24 (vars_lista -> .)

    vars_lista                     shift and go to state 43

state 36

    (12) lista_dec -> CORIZQ . CTE_I CORDER matriz_dec

    CTE_I           shift and go to state 45


state 37

    (31) var_func -> VOID tipo_void ID actualiza_id crea_func . PARIZQ pars PARDER bloque_func funcs

    PARIZQ          shift and go to state 46


state 38

    (4) ajustes -> CANVAS BRAIZQ WIDTH CTE_I PUNTCOM HEIGHT . CTE_I PUNTCOM BACKGROUND CTE_I COMA CTE_I COMA CTE_I PUNTCOM BRADER

    CTE_I           shift and go to state 47


state 39

    (1) programa -> MODULE CTE_STR creaDirFunc PUNTCOM ajustes var_func tipo_main MAIN actualiza_id crea_func bloque_func .

    $end            reduce using rule 1 (programa -> MODULE CTE_STR creaDirFunc PUNTCOM ajustes var_func tipo_main MAIN actualiza_id crea_func bloque_func .)


state 40

    (16) bloque_func -> BRAIZQ . vars_estatutos RETURN returns BRADER end_sub
    (18) vars_estatutos -> . vars estatutos
    (19) vars_estatutos -> . estatutos
    (22) vars -> . tipo ID actualiza_id crea_var lista_dec vars_lista PUNTCOM mas_vars
    (20) estatutos -> . estatuto estatutos
    (21) estatutos -> .
    (124) tipo -> . INT actualiza_tipo
    (125) tipo -> . FLOAT actualiza_tipo
    (88) estatuto -> . asignacion
    (89) estatuto -> . condicion
    (90) estatuto -> . escritura
    (91) estatuto -> . ciclo
    (92) estatuto -> . instruccion
    (93) estatuto -> . func_call PUNTCOM
    (105) asignacion -> . ID actualiza_id lista ASIG exp_input PUNTCOM
    (108) condicion -> . IF PARIZQ expresion fin_exp PARDER bloque else_bloque fin_cond
    (117) escritura -> . PRINT PARIZQ arg_escritura PARDER PUNTCOM
    (114) ciclo -> . REPEAT push_cont PARIZQ expresion fin_exp PARDER bloque fin_repeat
    (127) instruccion -> . FORWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM
    (128) instruccion -> . BACKWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM
    (129) instruccion -> . LEFT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM
    (130) instruccion -> . RIGHT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM
    (131) instruccion -> . TURN actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM
    (132) instruccion -> . SIZE actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM
    (133) instruccion -> . CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM
    (134) instruccion -> . TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM
    (135) instruccion -> . SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM
    (136) instruccion -> . NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM
    (137) instruccion -> . ARC actualiza_instr PARIZQ expresion PARDER fin_instr1 trans PUNTCOM
    (138) instruccion -> . UP actualiza_instr PARIZQ PARDER fin_instr PUNTCOM
    (139) instruccion -> . DOWN actualiza_instr PARIZQ PARDER fin_instr PUNTCOM
    (140) instruccion -> . COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM
    (141) instruccion -> . FILLED_CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM
    (142) instruccion -> . FILLED_SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM
    (143) instruccion -> . FILLED_TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM
    (144) instruccion -> . FILLED_NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM
    (145) instruccion -> . FILLER_COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM
    (95) func_call -> . ID actualiza_id actualiza_func PARIZQ args gen_era PARDER gen_gosub

    RETURN          reduce using rule 21 (estatutos -> .)
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    ID              shift and go to state 52
    IF              shift and go to state 60
    PRINT           shift and go to state 61
    REPEAT          shift and go to state 62
    FORWARD         shift and go to state 63
    BACKWARD        shift and go to state 64
    LEFT            shift and go to state 65
    RIGHT           shift and go to state 66
    TURN            shift and go to state 67
    SIZE            shift and go to state 68
    CIRCLE          shift and go to state 69
    TRIANGLE        shift and go to state 70
    SQUARE          shift and go to state 71
    NGON            shift and go to state 72
    ARC             shift and go to state 73
    UP              shift and go to state 74
    DOWN            shift and go to state 75
    COLOR           shift and go to state 76
    FILLED_CIRCLE   shift and go to state 77
    FILLED_SQUARE   shift and go to state 78
    FILLED_TRIANGLE shift and go to state 79
    FILLED_NGON     shift and go to state 80
    FILLER_COLOR    shift and go to state 81

    vars_estatutos                 shift and go to state 48
    vars                           shift and go to state 49
    estatutos                      shift and go to state 50
    tipo                           shift and go to state 51
    estatuto                       shift and go to state 53
    asignacion                     shift and go to state 54
    condicion                      shift and go to state 55
    escritura                      shift and go to state 56
    ciclo                          shift and go to state 57
    instruccion                    shift and go to state 58
    func_call                      shift and go to state 59

state 41

    (9) var_o_func -> PARIZQ crea_func pars . PARDER bloque_func funcs

    PARDER          shift and go to state 82


state 42

    (34) pars -> tipo . ID actualiza_id crea_var gen_dir par

    ID              shift and go to state 83


state 43

    (10) var_o_func -> crea_var lista_dec vars_lista . PUNTCOM var_func

    PUNTCOM         shift and go to state 84


state 44

    (23) vars_lista -> COMA . ID actualiza_id crea_var lista_dec vars_lista

    ID              shift and go to state 85


state 45

    (12) lista_dec -> CORIZQ CTE_I . CORDER matriz_dec

    CORDER          shift and go to state 86


state 46

    (31) var_func -> VOID tipo_void ID actualiza_id crea_func PARIZQ . pars PARDER bloque_func funcs
    (34) pars -> . tipo ID actualiza_id crea_var gen_dir par
    (35) pars -> .
    (124) tipo -> . INT actualiza_tipo
    (125) tipo -> . FLOAT actualiza_tipo

    PARDER          reduce using rule 35 (pars -> .)
    INT             shift and go to state 12
    FLOAT           shift and go to state 13

    pars                           shift and go to state 87
    tipo                           shift and go to state 42

state 47

    (4) ajustes -> CANVAS BRAIZQ WIDTH CTE_I PUNTCOM HEIGHT CTE_I . PUNTCOM BACKGROUND CTE_I COMA CTE_I COMA CTE_I PUNTCOM BRADER

    PUNTCOM         shift and go to state 88


state 48

    (16) bloque_func -> BRAIZQ vars_estatutos . RETURN returns BRADER end_sub

    RETURN          shift and go to state 89


state 49

    (18) vars_estatutos -> vars . estatutos
    (20) estatutos -> . estatuto estatutos
    (21) estatutos -> .
    (88) estatuto -> . asignacion
    (89) estatuto -> . condicion
    (90) estatuto -> . escritura
    (91) estatuto -> . ciclo
    (92) estatuto -> . instruccion
    (93) estatuto -> . func_call PUNTCOM
    (105) asignacion -> . ID actualiza_id lista ASIG exp_input PUNTCOM
    (108) condicion -> . IF PARIZQ expresion fin_exp PARDER bloque else_bloque fin_cond
    (117) escritura -> . PRINT PARIZQ arg_escritura PARDER PUNTCOM
    (114) ciclo -> . REPEAT push_cont PARIZQ expresion fin_exp PARDER bloque fin_repeat
    (127) instruccion -> . FORWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM
    (128) instruccion -> . BACKWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM
    (129) instruccion -> . LEFT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM
    (130) instruccion -> . RIGHT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM
    (131) instruccion -> . TURN actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM
    (132) instruccion -> . SIZE actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM
    (133) instruccion -> . CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM
    (134) instruccion -> . TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM
    (135) instruccion -> . SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM
    (136) instruccion -> . NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM
    (137) instruccion -> . ARC actualiza_instr PARIZQ expresion PARDER fin_instr1 trans PUNTCOM
    (138) instruccion -> . UP actualiza_instr PARIZQ PARDER fin_instr PUNTCOM
    (139) instruccion -> . DOWN actualiza_instr PARIZQ PARDER fin_instr PUNTCOM
    (140) instruccion -> . COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM
    (141) instruccion -> . FILLED_CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM
    (142) instruccion -> . FILLED_SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM
    (143) instruccion -> . FILLED_TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM
    (144) instruccion -> . FILLED_NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM
    (145) instruccion -> . FILLER_COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM
    (95) func_call -> . ID actualiza_id actualiza_func PARIZQ args gen_era PARDER gen_gosub

    RETURN          reduce using rule 21 (estatutos -> .)
    ID              shift and go to state 52
    IF              shift and go to state 60
    PRINT           shift and go to state 61
    REPEAT          shift and go to state 62
    FORWARD         shift and go to state 63
    BACKWARD        shift and go to state 64
    LEFT            shift and go to state 65
    RIGHT           shift and go to state 66
    TURN            shift and go to state 67
    SIZE            shift and go to state 68
    CIRCLE          shift and go to state 69
    TRIANGLE        shift and go to state 70
    SQUARE          shift and go to state 71
    NGON            shift and go to state 72
    ARC             shift and go to state 73
    UP              shift and go to state 74
    DOWN            shift and go to state 75
    COLOR           shift and go to state 76
    FILLED_CIRCLE   shift and go to state 77
    FILLED_SQUARE   shift and go to state 78
    FILLED_TRIANGLE shift and go to state 79
    FILLED_NGON     shift and go to state 80
    FILLER_COLOR    shift and go to state 81

    estatutos                      shift and go to state 90
    estatuto                       shift and go to state 53
    asignacion                     shift and go to state 54
    condicion                      shift and go to state 55
    escritura                      shift and go to state 56
    ciclo                          shift and go to state 57
    instruccion                    shift and go to state 58
    func_call                      shift and go to state 59

state 50

    (19) vars_estatutos -> estatutos .

    RETURN          reduce using rule 19 (vars_estatutos -> estatutos .)


state 51

    (22) vars -> tipo . ID actualiza_id crea_var lista_dec vars_lista PUNTCOM mas_vars

    ID              shift and go to state 91


state 52

    (105) asignacion -> ID . actualiza_id lista ASIG exp_input PUNTCOM
    (95) func_call -> ID . actualiza_id actualiza_func PARIZQ args gen_era PARDER gen_gosub
    (8) actualiza_id -> .

    CORIZQ          reduce using rule 8 (actualiza_id -> .)
    ASIG            reduce using rule 8 (actualiza_id -> .)
    PARIZQ          reduce using rule 8 (actualiza_id -> .)

    actualiza_id                   shift and go to state 92

state 53

    (20) estatutos -> estatuto . estatutos
    (20) estatutos -> . estatuto estatutos
    (21) estatutos -> .
    (88) estatuto -> . asignacion
    (89) estatuto -> . condicion
    (90) estatuto -> . escritura
    (91) estatuto -> . ciclo
    (92) estatuto -> . instruccion
    (93) estatuto -> . func_call PUNTCOM
    (105) asignacion -> . ID actualiza_id lista ASIG exp_input PUNTCOM
    (108) condicion -> . IF PARIZQ expresion fin_exp PARDER bloque else_bloque fin_cond
    (117) escritura -> . PRINT PARIZQ arg_escritura PARDER PUNTCOM
    (114) ciclo -> . REPEAT push_cont PARIZQ expresion fin_exp PARDER bloque fin_repeat
    (127) instruccion -> . FORWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM
    (128) instruccion -> . BACKWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM
    (129) instruccion -> . LEFT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM
    (130) instruccion -> . RIGHT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM
    (131) instruccion -> . TURN actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM
    (132) instruccion -> . SIZE actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM
    (133) instruccion -> . CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM
    (134) instruccion -> . TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM
    (135) instruccion -> . SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM
    (136) instruccion -> . NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM
    (137) instruccion -> . ARC actualiza_instr PARIZQ expresion PARDER fin_instr1 trans PUNTCOM
    (138) instruccion -> . UP actualiza_instr PARIZQ PARDER fin_instr PUNTCOM
    (139) instruccion -> . DOWN actualiza_instr PARIZQ PARDER fin_instr PUNTCOM
    (140) instruccion -> . COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM
    (141) instruccion -> . FILLED_CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM
    (142) instruccion -> . FILLED_SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM
    (143) instruccion -> . FILLED_TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM
    (144) instruccion -> . FILLED_NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM
    (145) instruccion -> . FILLER_COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM
    (95) func_call -> . ID actualiza_id actualiza_func PARIZQ args gen_era PARDER gen_gosub

    RETURN          reduce using rule 21 (estatutos -> .)
    BRADER          reduce using rule 21 (estatutos -> .)
    ID              shift and go to state 52
    IF              shift and go to state 60
    PRINT           shift and go to state 61
    REPEAT          shift and go to state 62
    FORWARD         shift and go to state 63
    BACKWARD        shift and go to state 64
    LEFT            shift and go to state 65
    RIGHT           shift and go to state 66
    TURN            shift and go to state 67
    SIZE            shift and go to state 68
    CIRCLE          shift and go to state 69
    TRIANGLE        shift and go to state 70
    SQUARE          shift and go to state 71
    NGON            shift and go to state 72
    ARC             shift and go to state 73
    UP              shift and go to state 74
    DOWN            shift and go to state 75
    COLOR           shift and go to state 76
    FILLED_CIRCLE   shift and go to state 77
    FILLED_SQUARE   shift and go to state 78
    FILLED_TRIANGLE shift and go to state 79
    FILLED_NGON     shift and go to state 80
    FILLER_COLOR    shift and go to state 81

    estatuto                       shift and go to state 53
    estatutos                      shift and go to state 93
    asignacion                     shift and go to state 54
    condicion                      shift and go to state 55
    escritura                      shift and go to state 56
    ciclo                          shift and go to state 57
    instruccion                    shift and go to state 58
    func_call                      shift and go to state 59

state 54

    (88) estatuto -> asignacion .

    ID              reduce using rule 88 (estatuto -> asignacion .)
    IF              reduce using rule 88 (estatuto -> asignacion .)
    PRINT           reduce using rule 88 (estatuto -> asignacion .)
    REPEAT          reduce using rule 88 (estatuto -> asignacion .)
    FORWARD         reduce using rule 88 (estatuto -> asignacion .)
    BACKWARD        reduce using rule 88 (estatuto -> asignacion .)
    LEFT            reduce using rule 88 (estatuto -> asignacion .)
    RIGHT           reduce using rule 88 (estatuto -> asignacion .)
    TURN            reduce using rule 88 (estatuto -> asignacion .)
    SIZE            reduce using rule 88 (estatuto -> asignacion .)
    CIRCLE          reduce using rule 88 (estatuto -> asignacion .)
    TRIANGLE        reduce using rule 88 (estatuto -> asignacion .)
    SQUARE          reduce using rule 88 (estatuto -> asignacion .)
    NGON            reduce using rule 88 (estatuto -> asignacion .)
    ARC             reduce using rule 88 (estatuto -> asignacion .)
    UP              reduce using rule 88 (estatuto -> asignacion .)
    DOWN            reduce using rule 88 (estatuto -> asignacion .)
    COLOR           reduce using rule 88 (estatuto -> asignacion .)
    FILLED_CIRCLE   reduce using rule 88 (estatuto -> asignacion .)
    FILLED_SQUARE   reduce using rule 88 (estatuto -> asignacion .)
    FILLED_TRIANGLE reduce using rule 88 (estatuto -> asignacion .)
    FILLED_NGON     reduce using rule 88 (estatuto -> asignacion .)
    FILLER_COLOR    reduce using rule 88 (estatuto -> asignacion .)
    RETURN          reduce using rule 88 (estatuto -> asignacion .)
    BRADER          reduce using rule 88 (estatuto -> asignacion .)


state 55

    (89) estatuto -> condicion .

    ID              reduce using rule 89 (estatuto -> condicion .)
    IF              reduce using rule 89 (estatuto -> condicion .)
    PRINT           reduce using rule 89 (estatuto -> condicion .)
    REPEAT          reduce using rule 89 (estatuto -> condicion .)
    FORWARD         reduce using rule 89 (estatuto -> condicion .)
    BACKWARD        reduce using rule 89 (estatuto -> condicion .)
    LEFT            reduce using rule 89 (estatuto -> condicion .)
    RIGHT           reduce using rule 89 (estatuto -> condicion .)
    TURN            reduce using rule 89 (estatuto -> condicion .)
    SIZE            reduce using rule 89 (estatuto -> condicion .)
    CIRCLE          reduce using rule 89 (estatuto -> condicion .)
    TRIANGLE        reduce using rule 89 (estatuto -> condicion .)
    SQUARE          reduce using rule 89 (estatuto -> condicion .)
    NGON            reduce using rule 89 (estatuto -> condicion .)
    ARC             reduce using rule 89 (estatuto -> condicion .)
    UP              reduce using rule 89 (estatuto -> condicion .)
    DOWN            reduce using rule 89 (estatuto -> condicion .)
    COLOR           reduce using rule 89 (estatuto -> condicion .)
    FILLED_CIRCLE   reduce using rule 89 (estatuto -> condicion .)
    FILLED_SQUARE   reduce using rule 89 (estatuto -> condicion .)
    FILLED_TRIANGLE reduce using rule 89 (estatuto -> condicion .)
    FILLED_NGON     reduce using rule 89 (estatuto -> condicion .)
    FILLER_COLOR    reduce using rule 89 (estatuto -> condicion .)
    RETURN          reduce using rule 89 (estatuto -> condicion .)
    BRADER          reduce using rule 89 (estatuto -> condicion .)


state 56

    (90) estatuto -> escritura .

    ID              reduce using rule 90 (estatuto -> escritura .)
    IF              reduce using rule 90 (estatuto -> escritura .)
    PRINT           reduce using rule 90 (estatuto -> escritura .)
    REPEAT          reduce using rule 90 (estatuto -> escritura .)
    FORWARD         reduce using rule 90 (estatuto -> escritura .)
    BACKWARD        reduce using rule 90 (estatuto -> escritura .)
    LEFT            reduce using rule 90 (estatuto -> escritura .)
    RIGHT           reduce using rule 90 (estatuto -> escritura .)
    TURN            reduce using rule 90 (estatuto -> escritura .)
    SIZE            reduce using rule 90 (estatuto -> escritura .)
    CIRCLE          reduce using rule 90 (estatuto -> escritura .)
    TRIANGLE        reduce using rule 90 (estatuto -> escritura .)
    SQUARE          reduce using rule 90 (estatuto -> escritura .)
    NGON            reduce using rule 90 (estatuto -> escritura .)
    ARC             reduce using rule 90 (estatuto -> escritura .)
    UP              reduce using rule 90 (estatuto -> escritura .)
    DOWN            reduce using rule 90 (estatuto -> escritura .)
    COLOR           reduce using rule 90 (estatuto -> escritura .)
    FILLED_CIRCLE   reduce using rule 90 (estatuto -> escritura .)
    FILLED_SQUARE   reduce using rule 90 (estatuto -> escritura .)
    FILLED_TRIANGLE reduce using rule 90 (estatuto -> escritura .)
    FILLED_NGON     reduce using rule 90 (estatuto -> escritura .)
    FILLER_COLOR    reduce using rule 90 (estatuto -> escritura .)
    RETURN          reduce using rule 90 (estatuto -> escritura .)
    BRADER          reduce using rule 90 (estatuto -> escritura .)


state 57

    (91) estatuto -> ciclo .

    ID              reduce using rule 91 (estatuto -> ciclo .)
    IF              reduce using rule 91 (estatuto -> ciclo .)
    PRINT           reduce using rule 91 (estatuto -> ciclo .)
    REPEAT          reduce using rule 91 (estatuto -> ciclo .)
    FORWARD         reduce using rule 91 (estatuto -> ciclo .)
    BACKWARD        reduce using rule 91 (estatuto -> ciclo .)
    LEFT            reduce using rule 91 (estatuto -> ciclo .)
    RIGHT           reduce using rule 91 (estatuto -> ciclo .)
    TURN            reduce using rule 91 (estatuto -> ciclo .)
    SIZE            reduce using rule 91 (estatuto -> ciclo .)
    CIRCLE          reduce using rule 91 (estatuto -> ciclo .)
    TRIANGLE        reduce using rule 91 (estatuto -> ciclo .)
    SQUARE          reduce using rule 91 (estatuto -> ciclo .)
    NGON            reduce using rule 91 (estatuto -> ciclo .)
    ARC             reduce using rule 91 (estatuto -> ciclo .)
    UP              reduce using rule 91 (estatuto -> ciclo .)
    DOWN            reduce using rule 91 (estatuto -> ciclo .)
    COLOR           reduce using rule 91 (estatuto -> ciclo .)
    FILLED_CIRCLE   reduce using rule 91 (estatuto -> ciclo .)
    FILLED_SQUARE   reduce using rule 91 (estatuto -> ciclo .)
    FILLED_TRIANGLE reduce using rule 91 (estatuto -> ciclo .)
    FILLED_NGON     reduce using rule 91 (estatuto -> ciclo .)
    FILLER_COLOR    reduce using rule 91 (estatuto -> ciclo .)
    RETURN          reduce using rule 91 (estatuto -> ciclo .)
    BRADER          reduce using rule 91 (estatuto -> ciclo .)


state 58

    (92) estatuto -> instruccion .

    ID              reduce using rule 92 (estatuto -> instruccion .)
    IF              reduce using rule 92 (estatuto -> instruccion .)
    PRINT           reduce using rule 92 (estatuto -> instruccion .)
    REPEAT          reduce using rule 92 (estatuto -> instruccion .)
    FORWARD         reduce using rule 92 (estatuto -> instruccion .)
    BACKWARD        reduce using rule 92 (estatuto -> instruccion .)
    LEFT            reduce using rule 92 (estatuto -> instruccion .)
    RIGHT           reduce using rule 92 (estatuto -> instruccion .)
    TURN            reduce using rule 92 (estatuto -> instruccion .)
    SIZE            reduce using rule 92 (estatuto -> instruccion .)
    CIRCLE          reduce using rule 92 (estatuto -> instruccion .)
    TRIANGLE        reduce using rule 92 (estatuto -> instruccion .)
    SQUARE          reduce using rule 92 (estatuto -> instruccion .)
    NGON            reduce using rule 92 (estatuto -> instruccion .)
    ARC             reduce using rule 92 (estatuto -> instruccion .)
    UP              reduce using rule 92 (estatuto -> instruccion .)
    DOWN            reduce using rule 92 (estatuto -> instruccion .)
    COLOR           reduce using rule 92 (estatuto -> instruccion .)
    FILLED_CIRCLE   reduce using rule 92 (estatuto -> instruccion .)
    FILLED_SQUARE   reduce using rule 92 (estatuto -> instruccion .)
    FILLED_TRIANGLE reduce using rule 92 (estatuto -> instruccion .)
    FILLED_NGON     reduce using rule 92 (estatuto -> instruccion .)
    FILLER_COLOR    reduce using rule 92 (estatuto -> instruccion .)
    RETURN          reduce using rule 92 (estatuto -> instruccion .)
    BRADER          reduce using rule 92 (estatuto -> instruccion .)


state 59

    (93) estatuto -> func_call . PUNTCOM

    PUNTCOM         shift and go to state 94


state 60

    (108) condicion -> IF . PARIZQ expresion fin_exp PARDER bloque else_bloque fin_cond

    PARIZQ          shift and go to state 95


state 61

    (117) escritura -> PRINT . PARIZQ arg_escritura PARDER PUNTCOM

    PARIZQ          shift and go to state 96


state 62

    (114) ciclo -> REPEAT . push_cont PARIZQ expresion fin_exp PARDER bloque fin_repeat
    (115) push_cont -> .

    PARIZQ          reduce using rule 115 (push_cont -> .)

    push_cont                      shift and go to state 97

state 63

    (127) instruccion -> FORWARD . actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM
    (153) actualiza_instr -> .

    PARIZQ          reduce using rule 153 (actualiza_instr -> .)

    actualiza_instr                shift and go to state 98

state 64

    (128) instruccion -> BACKWARD . actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM
    (153) actualiza_instr -> .

    PARIZQ          reduce using rule 153 (actualiza_instr -> .)

    actualiza_instr                shift and go to state 99

state 65

    (129) instruccion -> LEFT . actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM
    (153) actualiza_instr -> .

    PARIZQ          reduce using rule 153 (actualiza_instr -> .)

    actualiza_instr                shift and go to state 100

state 66

    (130) instruccion -> RIGHT . actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM
    (153) actualiza_instr -> .

    PARIZQ          reduce using rule 153 (actualiza_instr -> .)

    actualiza_instr                shift and go to state 101

state 67

    (131) instruccion -> TURN . actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM
    (153) actualiza_instr -> .

    PARIZQ          reduce using rule 153 (actualiza_instr -> .)

    actualiza_instr                shift and go to state 102

state 68

    (132) instruccion -> SIZE . actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM
    (153) actualiza_instr -> .

    PARIZQ          reduce using rule 153 (actualiza_instr -> .)

    actualiza_instr                shift and go to state 103

state 69

    (133) instruccion -> CIRCLE . actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM
    (153) actualiza_instr -> .

    PARIZQ          reduce using rule 153 (actualiza_instr -> .)

    actualiza_instr                shift and go to state 104

state 70

    (134) instruccion -> TRIANGLE . actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM
    (153) actualiza_instr -> .

    PARIZQ          reduce using rule 153 (actualiza_instr -> .)

    actualiza_instr                shift and go to state 105

state 71

    (135) instruccion -> SQUARE . actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM
    (153) actualiza_instr -> .

    PARIZQ          reduce using rule 153 (actualiza_instr -> .)

    actualiza_instr                shift and go to state 106

state 72

    (136) instruccion -> NGON . actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM
    (153) actualiza_instr -> .

    PARIZQ          reduce using rule 153 (actualiza_instr -> .)

    actualiza_instr                shift and go to state 107

state 73

    (137) instruccion -> ARC . actualiza_instr PARIZQ expresion PARDER fin_instr1 trans PUNTCOM
    (153) actualiza_instr -> .

    PARIZQ          reduce using rule 153 (actualiza_instr -> .)

    actualiza_instr                shift and go to state 108

state 74

    (138) instruccion -> UP . actualiza_instr PARIZQ PARDER fin_instr PUNTCOM
    (153) actualiza_instr -> .

    PARIZQ          reduce using rule 153 (actualiza_instr -> .)

    actualiza_instr                shift and go to state 109

state 75

    (139) instruccion -> DOWN . actualiza_instr PARIZQ PARDER fin_instr PUNTCOM
    (153) actualiza_instr -> .

    PARIZQ          reduce using rule 153 (actualiza_instr -> .)

    actualiza_instr                shift and go to state 110

state 76

    (140) instruccion -> COLOR . actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM
    (153) actualiza_instr -> .

    PARIZQ          reduce using rule 153 (actualiza_instr -> .)

    actualiza_instr                shift and go to state 111

state 77

    (141) instruccion -> FILLED_CIRCLE . actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM
    (153) actualiza_instr -> .

    PARIZQ          reduce using rule 153 (actualiza_instr -> .)

    actualiza_instr                shift and go to state 112

state 78

    (142) instruccion -> FILLED_SQUARE . actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM
    (153) actualiza_instr -> .

    PARIZQ          reduce using rule 153 (actualiza_instr -> .)

    actualiza_instr                shift and go to state 113

state 79

    (143) instruccion -> FILLED_TRIANGLE . actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM
    (153) actualiza_instr -> .

    PARIZQ          reduce using rule 153 (actualiza_instr -> .)

    actualiza_instr                shift and go to state 114

state 80

    (144) instruccion -> FILLED_NGON . actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM
    (153) actualiza_instr -> .

    PARIZQ          reduce using rule 153 (actualiza_instr -> .)

    actualiza_instr                shift and go to state 115

state 81

    (145) instruccion -> FILLER_COLOR . actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM
    (153) actualiza_instr -> .

    PARIZQ          reduce using rule 153 (actualiza_instr -> .)

    actualiza_instr                shift and go to state 116

state 82

    (9) var_o_func -> PARIZQ crea_func pars PARDER . bloque_func funcs
    (16) bloque_func -> . BRAIZQ vars_estatutos RETURN returns BRADER end_sub

    BRAIZQ          shift and go to state 40

    bloque_func                    shift and go to state 117

state 83

    (34) pars -> tipo ID . actualiza_id crea_var gen_dir par
    (8) actualiza_id -> .

    COMA            reduce using rule 8 (actualiza_id -> .)
    PARDER          reduce using rule 8 (actualiza_id -> .)

    actualiza_id                   shift and go to state 118

state 84

    (10) var_o_func -> crea_var lista_dec vars_lista PUNTCOM . var_func
    (6) var_func -> . tipo ID actualiza_id var_o_func
    (7) var_func -> .
    (31) var_func -> . VOID tipo_void ID actualiza_id crea_func PARIZQ pars PARDER bloque_func funcs
    (124) tipo -> . INT actualiza_tipo
    (125) tipo -> . FLOAT actualiza_tipo

    MAIN            reduce using rule 7 (var_func -> .)
    VOID            shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13

    var_func                       shift and go to state 119
    tipo                           shift and go to state 10

state 85

    (23) vars_lista -> COMA ID . actualiza_id crea_var lista_dec vars_lista
    (8) actualiza_id -> .

    CORIZQ          reduce using rule 8 (actualiza_id -> .)
    COMA            reduce using rule 8 (actualiza_id -> .)
    PUNTCOM         reduce using rule 8 (actualiza_id -> .)

    actualiza_id                   shift and go to state 120

state 86

    (12) lista_dec -> CORIZQ CTE_I CORDER . matriz_dec
    (14) matriz_dec -> . CORIZQ CTE_I CORDER
    (15) matriz_dec -> .

    CORIZQ          shift and go to state 121
    COMA            reduce using rule 15 (matriz_dec -> .)
    PUNTCOM         reduce using rule 15 (matriz_dec -> .)

    matriz_dec                     shift and go to state 122

state 87

    (31) var_func -> VOID tipo_void ID actualiza_id crea_func PARIZQ pars . PARDER bloque_func funcs

    PARDER          shift and go to state 123


state 88

    (4) ajustes -> CANVAS BRAIZQ WIDTH CTE_I PUNTCOM HEIGHT CTE_I PUNTCOM . BACKGROUND CTE_I COMA CTE_I COMA CTE_I PUNTCOM BRADER

    BACKGROUND      shift and go to state 124


state 89

    (16) bloque_func -> BRAIZQ vars_estatutos RETURN . returns BRADER end_sub
    (32) returns -> . expresion PUNTCOM
    (33) returns -> . PUNTCOM
    (47) expresion -> . expr or_expr
    (50) expr -> . exp and_exp
    (53) exp -> . e rel_e
    (61) e -> . termino suma_resta
    (65) termino -> . factor mult_div
    (70) factor -> . PARIZQ push_paren e PARDER pop_paren
    (71) factor -> . var
    (72) factor -> . RESTA neg_push var neg_pop
    (75) var -> . ID actualiza_id var_func_call
    (76) var -> . CTE_I
    (77) var -> . CTE_F
    (78) var -> . error

    PUNTCOM         shift and go to state 127
    PARIZQ          shift and go to state 133
    RESTA           shift and go to state 135
    ID              shift and go to state 136
    CTE_I           shift and go to state 137
    CTE_F           shift and go to state 138
    error           shift and go to state 139

    returns                        shift and go to state 125
    expresion                      shift and go to state 126
    expr                           shift and go to state 128
    exp                            shift and go to state 129
    e                              shift and go to state 130
    termino                        shift and go to state 131
    factor                         shift and go to state 132
    var                            shift and go to state 134

state 90

    (18) vars_estatutos -> vars estatutos .

    RETURN          reduce using rule 18 (vars_estatutos -> vars estatutos .)


state 91

    (22) vars -> tipo ID . actualiza_id crea_var lista_dec vars_lista PUNTCOM mas_vars
    (8) actualiza_id -> .

    CORIZQ          reduce using rule 8 (actualiza_id -> .)
    COMA            reduce using rule 8 (actualiza_id -> .)
    PUNTCOM         reduce using rule 8 (actualiza_id -> .)

    actualiza_id                   shift and go to state 140

state 92

    (105) asignacion -> ID actualiza_id . lista ASIG exp_input PUNTCOM
    (95) func_call -> ID actualiza_id . actualiza_func PARIZQ args gen_era PARDER gen_gosub
    (81) lista -> . CORIZQ push_dim expresion CORDER matriz
    (82) lista -> .
    (97) actualiza_func -> .

    CORIZQ          shift and go to state 143
    ASIG            reduce using rule 82 (lista -> .)
    PARIZQ          reduce using rule 97 (actualiza_func -> .)

    lista                          shift and go to state 141
    actualiza_func                 shift and go to state 142

state 93

    (20) estatutos -> estatuto estatutos .

    RETURN          reduce using rule 20 (estatutos -> estatuto estatutos .)
    BRADER          reduce using rule 20 (estatutos -> estatuto estatutos .)


state 94

    (93) estatuto -> func_call PUNTCOM .

    ID              reduce using rule 93 (estatuto -> func_call PUNTCOM .)
    IF              reduce using rule 93 (estatuto -> func_call PUNTCOM .)
    PRINT           reduce using rule 93 (estatuto -> func_call PUNTCOM .)
    REPEAT          reduce using rule 93 (estatuto -> func_call PUNTCOM .)
    FORWARD         reduce using rule 93 (estatuto -> func_call PUNTCOM .)
    BACKWARD        reduce using rule 93 (estatuto -> func_call PUNTCOM .)
    LEFT            reduce using rule 93 (estatuto -> func_call PUNTCOM .)
    RIGHT           reduce using rule 93 (estatuto -> func_call PUNTCOM .)
    TURN            reduce using rule 93 (estatuto -> func_call PUNTCOM .)
    SIZE            reduce using rule 93 (estatuto -> func_call PUNTCOM .)
    CIRCLE          reduce using rule 93 (estatuto -> func_call PUNTCOM .)
    TRIANGLE        reduce using rule 93 (estatuto -> func_call PUNTCOM .)
    SQUARE          reduce using rule 93 (estatuto -> func_call PUNTCOM .)
    NGON            reduce using rule 93 (estatuto -> func_call PUNTCOM .)
    ARC             reduce using rule 93 (estatuto -> func_call PUNTCOM .)
    UP              reduce using rule 93 (estatuto -> func_call PUNTCOM .)
    DOWN            reduce using rule 93 (estatuto -> func_call PUNTCOM .)
    COLOR           reduce using rule 93 (estatuto -> func_call PUNTCOM .)
    FILLED_CIRCLE   reduce using rule 93 (estatuto -> func_call PUNTCOM .)
    FILLED_SQUARE   reduce using rule 93 (estatuto -> func_call PUNTCOM .)
    FILLED_TRIANGLE reduce using rule 93 (estatuto -> func_call PUNTCOM .)
    FILLED_NGON     reduce using rule 93 (estatuto -> func_call PUNTCOM .)
    FILLER_COLOR    reduce using rule 93 (estatuto -> func_call PUNTCOM .)
    RETURN          reduce using rule 93 (estatuto -> func_call PUNTCOM .)
    BRADER          reduce using rule 93 (estatuto -> func_call PUNTCOM .)


state 95

    (108) condicion -> IF PARIZQ . expresion fin_exp PARDER bloque else_bloque fin_cond
    (47) expresion -> . expr or_expr
    (50) expr -> . exp and_exp
    (53) exp -> . e rel_e
    (61) e -> . termino suma_resta
    (65) termino -> . factor mult_div
    (70) factor -> . PARIZQ push_paren e PARDER pop_paren
    (71) factor -> . var
    (72) factor -> . RESTA neg_push var neg_pop
    (75) var -> . ID actualiza_id var_func_call
    (76) var -> . CTE_I
    (77) var -> . CTE_F
    (78) var -> . error

    PARIZQ          shift and go to state 133
    RESTA           shift and go to state 135
    ID              shift and go to state 136
    CTE_I           shift and go to state 137
    CTE_F           shift and go to state 138
    error           shift and go to state 139

    expresion                      shift and go to state 144
    expr                           shift and go to state 128
    exp                            shift and go to state 129
    e                              shift and go to state 130
    termino                        shift and go to state 131
    factor                         shift and go to state 132
    var                            shift and go to state 134

state 96

    (117) escritura -> PRINT PARIZQ . arg_escritura PARDER PUNTCOM
    (118) arg_escritura -> . expresion fin_arg args_escritura
    (119) arg_escritura -> . CTE_STR print_string args_escritura
    (47) expresion -> . expr or_expr
    (50) expr -> . exp and_exp
    (53) exp -> . e rel_e
    (61) e -> . termino suma_resta
    (65) termino -> . factor mult_div
    (70) factor -> . PARIZQ push_paren e PARDER pop_paren
    (71) factor -> . var
    (72) factor -> . RESTA neg_push var neg_pop
    (75) var -> . ID actualiza_id var_func_call
    (76) var -> . CTE_I
    (77) var -> . CTE_F
    (78) var -> . error

    CTE_STR         shift and go to state 147
    PARIZQ          shift and go to state 133
    RESTA           shift and go to state 135
    ID              shift and go to state 136
    CTE_I           shift and go to state 137
    CTE_F           shift and go to state 138
    error           shift and go to state 139

    arg_escritura                  shift and go to state 145
    expresion                      shift and go to state 146
    expr                           shift and go to state 128
    exp                            shift and go to state 129
    e                              shift and go to state 130
    termino                        shift and go to state 131
    factor                         shift and go to state 132
    var                            shift and go to state 134

state 97

    (114) ciclo -> REPEAT push_cont . PARIZQ expresion fin_exp PARDER bloque fin_repeat

    PARIZQ          shift and go to state 148


state 98

    (127) instruccion -> FORWARD actualiza_instr . PARIZQ expresion PARDER fin_instr1 PUNTCOM

    PARIZQ          shift and go to state 149


state 99

    (128) instruccion -> BACKWARD actualiza_instr . PARIZQ expresion PARDER fin_instr1 PUNTCOM

    PARIZQ          shift and go to state 150


state 100

    (129) instruccion -> LEFT actualiza_instr . PARIZQ expresion PARDER fin_instr1 PUNTCOM

    PARIZQ          shift and go to state 151


state 101

    (130) instruccion -> RIGHT actualiza_instr . PARIZQ expresion PARDER fin_instr1 PUNTCOM

    PARIZQ          shift and go to state 152


state 102

    (131) instruccion -> TURN actualiza_instr . PARIZQ expresion PARDER fin_instr1 PUNTCOM

    PARIZQ          shift and go to state 153


state 103

    (132) instruccion -> SIZE actualiza_instr . PARIZQ expresion PARDER fin_instr1 PUNTCOM

    PARIZQ          shift and go to state 154


state 104

    (133) instruccion -> CIRCLE actualiza_instr . PARIZQ expresion PARDER fin_instr1 transform PUNTCOM

    PARIZQ          shift and go to state 155


state 105

    (134) instruccion -> TRIANGLE actualiza_instr . PARIZQ expresion PARDER fin_instr1 transform PUNTCOM

    PARIZQ          shift and go to state 156


state 106

    (135) instruccion -> SQUARE actualiza_instr . PARIZQ expresion PARDER fin_instr1 transform PUNTCOM

    PARIZQ          shift and go to state 157


state 107

    (136) instruccion -> NGON actualiza_instr . PARIZQ expresion PARDER fin_instr1 transform PUNTCOM

    PARIZQ          shift and go to state 158


state 108

    (137) instruccion -> ARC actualiza_instr . PARIZQ expresion PARDER fin_instr1 trans PUNTCOM

    PARIZQ          shift and go to state 159


state 109

    (138) instruccion -> UP actualiza_instr . PARIZQ PARDER fin_instr PUNTCOM

    PARIZQ          shift and go to state 160


state 110

    (139) instruccion -> DOWN actualiza_instr . PARIZQ PARDER fin_instr PUNTCOM

    PARIZQ          shift and go to state 161


state 111

    (140) instruccion -> COLOR actualiza_instr . PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM

    PARIZQ          shift and go to state 162


state 112

    (141) instruccion -> FILLED_CIRCLE actualiza_instr . PARIZQ expresion PARDER fin_instr1 transform PUNTCOM

    PARIZQ          shift and go to state 163


state 113

    (142) instruccion -> FILLED_SQUARE actualiza_instr . PARIZQ expresion PARDER fin_instr1 transform PUNTCOM

    PARIZQ          shift and go to state 164


state 114

    (143) instruccion -> FILLED_TRIANGLE actualiza_instr . PARIZQ expresion PARDER fin_instr1 transform PUNTCOM

    PARIZQ          shift and go to state 165


state 115

    (144) instruccion -> FILLED_NGON actualiza_instr . PARIZQ expresion PARDER fin_instr1 transform PUNTCOM

    PARIZQ          shift and go to state 166


state 116

    (145) instruccion -> FILLER_COLOR actualiza_instr . PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM

    PARIZQ          shift and go to state 167


state 117

    (9) var_o_func -> PARIZQ crea_func pars PARDER bloque_func . funcs
    (27) funcs -> . func funcs
    (28) funcs -> .
    (29) func -> . tipo ID actualiza_id crea_func PARIZQ pars PARDER bloque_func
    (30) func -> . VOID tipo_void ID actualiza_id crea_func PARIZQ pars PARDER bloque_func
    (124) tipo -> . INT actualiza_tipo
    (125) tipo -> . FLOAT actualiza_tipo

    MAIN            reduce using rule 28 (funcs -> .)
    VOID            shift and go to state 171
    INT             shift and go to state 12
    FLOAT           shift and go to state 13

    funcs                          shift and go to state 168
    func                           shift and go to state 169
    tipo                           shift and go to state 170

state 118

    (34) pars -> tipo ID actualiza_id . crea_var gen_dir par
    (11) crea_var -> .

    COMA            reduce using rule 11 (crea_var -> .)
    PARDER          reduce using rule 11 (crea_var -> .)

    crea_var                       shift and go to state 172

state 119

    (10) var_o_func -> crea_var lista_dec vars_lista PUNTCOM var_func .

    MAIN            reduce using rule 10 (var_o_func -> crea_var lista_dec vars_lista PUNTCOM var_func .)


state 120

    (23) vars_lista -> COMA ID actualiza_id . crea_var lista_dec vars_lista
    (11) crea_var -> .

    CORIZQ          reduce using rule 11 (crea_var -> .)
    COMA            reduce using rule 11 (crea_var -> .)
    PUNTCOM         reduce using rule 11 (crea_var -> .)

    crea_var                       shift and go to state 173

state 121

    (14) matriz_dec -> CORIZQ . CTE_I CORDER

    CTE_I           shift and go to state 174


state 122

    (12) lista_dec -> CORIZQ CTE_I CORDER matriz_dec .

    COMA            reduce using rule 12 (lista_dec -> CORIZQ CTE_I CORDER matriz_dec .)
    PUNTCOM         reduce using rule 12 (lista_dec -> CORIZQ CTE_I CORDER matriz_dec .)


state 123

    (31) var_func -> VOID tipo_void ID actualiza_id crea_func PARIZQ pars PARDER . bloque_func funcs
    (16) bloque_func -> . BRAIZQ vars_estatutos RETURN returns BRADER end_sub

    BRAIZQ          shift and go to state 40

    bloque_func                    shift and go to state 175

state 124

    (4) ajustes -> CANVAS BRAIZQ WIDTH CTE_I PUNTCOM HEIGHT CTE_I PUNTCOM BACKGROUND . CTE_I COMA CTE_I COMA CTE_I PUNTCOM BRADER

    CTE_I           shift and go to state 176


state 125

    (16) bloque_func -> BRAIZQ vars_estatutos RETURN returns . BRADER end_sub

    BRADER          shift and go to state 177


state 126

    (32) returns -> expresion . PUNTCOM

    PUNTCOM         shift and go to state 178


state 127

    (33) returns -> PUNTCOM .

    BRADER          reduce using rule 33 (returns -> PUNTCOM .)


state 128

    (47) expresion -> expr . or_expr
    (48) or_expr -> . OR push_oper expresion pop_or
    (49) or_expr -> .

    OR              shift and go to state 180
    PUNTCOM         reduce using rule 49 (or_expr -> .)
    PARDER          reduce using rule 49 (or_expr -> .)
    COMA            reduce using rule 49 (or_expr -> .)
    CORDER          reduce using rule 49 (or_expr -> .)

    or_expr                        shift and go to state 179

state 129

    (50) expr -> exp . and_exp
    (51) and_exp -> . AND push_oper expr pop_and
    (52) and_exp -> .

    AND             shift and go to state 182
    OR              reduce using rule 52 (and_exp -> .)
    PUNTCOM         reduce using rule 52 (and_exp -> .)
    PARDER          reduce using rule 52 (and_exp -> .)
    COMA            reduce using rule 52 (and_exp -> .)
    CORDER          reduce using rule 52 (and_exp -> .)

    and_exp                        shift and go to state 181

state 130

    (53) exp -> e . rel_e
    (54) rel_e -> . DIF push_oper exp pop_rel_e
    (55) rel_e -> . MENOR push_oper exp pop_rel_e
    (56) rel_e -> . MAYOR push_oper exp pop_rel_e
    (57) rel_e -> . MENIGUAL push_oper exp pop_rel_e
    (58) rel_e -> . MAYIGUAL push_oper exp pop_rel_e
    (59) rel_e -> . IGUAL push_oper exp pop_rel_e
    (60) rel_e -> .

    DIF             shift and go to state 184
    MENOR           shift and go to state 185
    MAYOR           shift and go to state 186
    MENIGUAL        shift and go to state 187
    MAYIGUAL        shift and go to state 188
    IGUAL           shift and go to state 189
    AND             reduce using rule 60 (rel_e -> .)
    OR              reduce using rule 60 (rel_e -> .)
    PUNTCOM         reduce using rule 60 (rel_e -> .)
    PARDER          reduce using rule 60 (rel_e -> .)
    COMA            reduce using rule 60 (rel_e -> .)
    CORDER          reduce using rule 60 (rel_e -> .)

    rel_e                          shift and go to state 183

state 131

    (61) e -> termino . suma_resta
    (62) suma_resta -> . SUMA push_oper e pop_suma_resta
    (63) suma_resta -> . RESTA push_oper e pop_suma_resta
    (64) suma_resta -> .

    SUMA            shift and go to state 191
    RESTA           shift and go to state 192
    DIF             reduce using rule 64 (suma_resta -> .)
    MENOR           reduce using rule 64 (suma_resta -> .)
    MAYOR           reduce using rule 64 (suma_resta -> .)
    MENIGUAL        reduce using rule 64 (suma_resta -> .)
    MAYIGUAL        reduce using rule 64 (suma_resta -> .)
    IGUAL           reduce using rule 64 (suma_resta -> .)
    AND             reduce using rule 64 (suma_resta -> .)
    OR              reduce using rule 64 (suma_resta -> .)
    PUNTCOM         reduce using rule 64 (suma_resta -> .)
    PARDER          reduce using rule 64 (suma_resta -> .)
    COMA            reduce using rule 64 (suma_resta -> .)
    CORDER          reduce using rule 64 (suma_resta -> .)

    suma_resta                     shift and go to state 190

state 132

    (65) termino -> factor . mult_div
    (66) mult_div -> . MULT push_oper termino pop_mult_div
    (67) mult_div -> . DIV push_oper termino pop_mult_div
    (68) mult_div -> . MOD push_oper termino pop_mult_div
    (69) mult_div -> .

    MULT            shift and go to state 194
    DIV             shift and go to state 195
    MOD             shift and go to state 196
    SUMA            reduce using rule 69 (mult_div -> .)
    RESTA           reduce using rule 69 (mult_div -> .)
    DIF             reduce using rule 69 (mult_div -> .)
    MENOR           reduce using rule 69 (mult_div -> .)
    MAYOR           reduce using rule 69 (mult_div -> .)
    MENIGUAL        reduce using rule 69 (mult_div -> .)
    MAYIGUAL        reduce using rule 69 (mult_div -> .)
    IGUAL           reduce using rule 69 (mult_div -> .)
    AND             reduce using rule 69 (mult_div -> .)
    OR              reduce using rule 69 (mult_div -> .)
    PUNTCOM         reduce using rule 69 (mult_div -> .)
    PARDER          reduce using rule 69 (mult_div -> .)
    COMA            reduce using rule 69 (mult_div -> .)
    CORDER          reduce using rule 69 (mult_div -> .)

    mult_div                       shift and go to state 193

state 133

    (70) factor -> PARIZQ . push_paren e PARDER pop_paren
    (86) push_paren -> .

    PARIZQ          reduce using rule 86 (push_paren -> .)
    RESTA           reduce using rule 86 (push_paren -> .)
    ID              reduce using rule 86 (push_paren -> .)
    CTE_I           reduce using rule 86 (push_paren -> .)
    CTE_F           reduce using rule 86 (push_paren -> .)
    error           reduce using rule 86 (push_paren -> .)

    push_paren                     shift and go to state 197

state 134

    (71) factor -> var .

    MULT            reduce using rule 71 (factor -> var .)
    DIV             reduce using rule 71 (factor -> var .)
    MOD             reduce using rule 71 (factor -> var .)
    SUMA            reduce using rule 71 (factor -> var .)
    RESTA           reduce using rule 71 (factor -> var .)
    DIF             reduce using rule 71 (factor -> var .)
    MENOR           reduce using rule 71 (factor -> var .)
    MAYOR           reduce using rule 71 (factor -> var .)
    MENIGUAL        reduce using rule 71 (factor -> var .)
    MAYIGUAL        reduce using rule 71 (factor -> var .)
    IGUAL           reduce using rule 71 (factor -> var .)
    AND             reduce using rule 71 (factor -> var .)
    OR              reduce using rule 71 (factor -> var .)
    PUNTCOM         reduce using rule 71 (factor -> var .)
    PARDER          reduce using rule 71 (factor -> var .)
    COMA            reduce using rule 71 (factor -> var .)
    CORDER          reduce using rule 71 (factor -> var .)


state 135

    (72) factor -> RESTA . neg_push var neg_pop
    (73) neg_push -> .

    ID              reduce using rule 73 (neg_push -> .)
    CTE_I           reduce using rule 73 (neg_push -> .)
    CTE_F           reduce using rule 73 (neg_push -> .)
    error           reduce using rule 73 (neg_push -> .)

    neg_push                       shift and go to state 198

state 136

    (75) var -> ID . actualiza_id var_func_call
    (8) actualiza_id -> .

    PARIZQ          reduce using rule 8 (actualiza_id -> .)
    CORIZQ          reduce using rule 8 (actualiza_id -> .)
    MULT            reduce using rule 8 (actualiza_id -> .)
    DIV             reduce using rule 8 (actualiza_id -> .)
    MOD             reduce using rule 8 (actualiza_id -> .)
    SUMA            reduce using rule 8 (actualiza_id -> .)
    RESTA           reduce using rule 8 (actualiza_id -> .)
    DIF             reduce using rule 8 (actualiza_id -> .)
    MENOR           reduce using rule 8 (actualiza_id -> .)
    MAYOR           reduce using rule 8 (actualiza_id -> .)
    MENIGUAL        reduce using rule 8 (actualiza_id -> .)
    MAYIGUAL        reduce using rule 8 (actualiza_id -> .)
    IGUAL           reduce using rule 8 (actualiza_id -> .)
    AND             reduce using rule 8 (actualiza_id -> .)
    OR              reduce using rule 8 (actualiza_id -> .)
    PUNTCOM         reduce using rule 8 (actualiza_id -> .)
    PARDER          reduce using rule 8 (actualiza_id -> .)
    COMA            reduce using rule 8 (actualiza_id -> .)
    CORDER          reduce using rule 8 (actualiza_id -> .)

    actualiza_id                   shift and go to state 199

state 137

    (76) var -> CTE_I .

    MULT            reduce using rule 76 (var -> CTE_I .)
    DIV             reduce using rule 76 (var -> CTE_I .)
    MOD             reduce using rule 76 (var -> CTE_I .)
    SUMA            reduce using rule 76 (var -> CTE_I .)
    RESTA           reduce using rule 76 (var -> CTE_I .)
    DIF             reduce using rule 76 (var -> CTE_I .)
    MENOR           reduce using rule 76 (var -> CTE_I .)
    MAYOR           reduce using rule 76 (var -> CTE_I .)
    MENIGUAL        reduce using rule 76 (var -> CTE_I .)
    MAYIGUAL        reduce using rule 76 (var -> CTE_I .)
    IGUAL           reduce using rule 76 (var -> CTE_I .)
    AND             reduce using rule 76 (var -> CTE_I .)
    OR              reduce using rule 76 (var -> CTE_I .)
    PUNTCOM         reduce using rule 76 (var -> CTE_I .)
    PARDER          reduce using rule 76 (var -> CTE_I .)
    COMA            reduce using rule 76 (var -> CTE_I .)
    CORDER          reduce using rule 76 (var -> CTE_I .)


state 138

    (77) var -> CTE_F .

    MULT            reduce using rule 77 (var -> CTE_F .)
    DIV             reduce using rule 77 (var -> CTE_F .)
    MOD             reduce using rule 77 (var -> CTE_F .)
    SUMA            reduce using rule 77 (var -> CTE_F .)
    RESTA           reduce using rule 77 (var -> CTE_F .)
    DIF             reduce using rule 77 (var -> CTE_F .)
    MENOR           reduce using rule 77 (var -> CTE_F .)
    MAYOR           reduce using rule 77 (var -> CTE_F .)
    MENIGUAL        reduce using rule 77 (var -> CTE_F .)
    MAYIGUAL        reduce using rule 77 (var -> CTE_F .)
    IGUAL           reduce using rule 77 (var -> CTE_F .)
    AND             reduce using rule 77 (var -> CTE_F .)
    OR              reduce using rule 77 (var -> CTE_F .)
    PUNTCOM         reduce using rule 77 (var -> CTE_F .)
    PARDER          reduce using rule 77 (var -> CTE_F .)
    COMA            reduce using rule 77 (var -> CTE_F .)
    CORDER          reduce using rule 77 (var -> CTE_F .)


state 139

    (78) var -> error .

    MULT            reduce using rule 78 (var -> error .)
    DIV             reduce using rule 78 (var -> error .)
    MOD             reduce using rule 78 (var -> error .)
    SUMA            reduce using rule 78 (var -> error .)
    RESTA           reduce using rule 78 (var -> error .)
    DIF             reduce using rule 78 (var -> error .)
    MENOR           reduce using rule 78 (var -> error .)
    MAYOR           reduce using rule 78 (var -> error .)
    MENIGUAL        reduce using rule 78 (var -> error .)
    MAYIGUAL        reduce using rule 78 (var -> error .)
    IGUAL           reduce using rule 78 (var -> error .)
    AND             reduce using rule 78 (var -> error .)
    OR              reduce using rule 78 (var -> error .)
    PUNTCOM         reduce using rule 78 (var -> error .)
    PARDER          reduce using rule 78 (var -> error .)
    COMA            reduce using rule 78 (var -> error .)
    CORDER          reduce using rule 78 (var -> error .)


state 140

    (22) vars -> tipo ID actualiza_id . crea_var lista_dec vars_lista PUNTCOM mas_vars
    (11) crea_var -> .

    CORIZQ          reduce using rule 11 (crea_var -> .)
    COMA            reduce using rule 11 (crea_var -> .)
    PUNTCOM         reduce using rule 11 (crea_var -> .)

    crea_var                       shift and go to state 200

state 141

    (105) asignacion -> ID actualiza_id lista . ASIG exp_input PUNTCOM

    ASIG            shift and go to state 201


state 142

    (95) func_call -> ID actualiza_id actualiza_func . PARIZQ args gen_era PARDER gen_gosub

    PARIZQ          shift and go to state 202


state 143

    (81) lista -> CORIZQ . push_dim expresion CORDER matriz
    (79) push_dim -> .

    PARIZQ          reduce using rule 79 (push_dim -> .)
    RESTA           reduce using rule 79 (push_dim -> .)
    ID              reduce using rule 79 (push_dim -> .)
    CTE_I           reduce using rule 79 (push_dim -> .)
    CTE_F           reduce using rule 79 (push_dim -> .)
    error           reduce using rule 79 (push_dim -> .)

    push_dim                       shift and go to state 203

state 144

    (108) condicion -> IF PARIZQ expresion . fin_exp PARDER bloque else_bloque fin_cond
    (113) fin_exp -> .

    PARDER          reduce using rule 113 (fin_exp -> .)

    fin_exp                        shift and go to state 204

state 145

    (117) escritura -> PRINT PARIZQ arg_escritura . PARDER PUNTCOM

    PARDER          shift and go to state 205


state 146

    (118) arg_escritura -> expresion . fin_arg args_escritura
    (122) fin_arg -> .

    COMA            reduce using rule 122 (fin_arg -> .)
    PARDER          reduce using rule 122 (fin_arg -> .)

    fin_arg                        shift and go to state 206

state 147

    (119) arg_escritura -> CTE_STR . print_string args_escritura
    (123) print_string -> .

    COMA            reduce using rule 123 (print_string -> .)
    PARDER          reduce using rule 123 (print_string -> .)

    print_string                   shift and go to state 207

state 148

    (114) ciclo -> REPEAT push_cont PARIZQ . expresion fin_exp PARDER bloque fin_repeat
    (47) expresion -> . expr or_expr
    (50) expr -> . exp and_exp
    (53) exp -> . e rel_e
    (61) e -> . termino suma_resta
    (65) termino -> . factor mult_div
    (70) factor -> . PARIZQ push_paren e PARDER pop_paren
    (71) factor -> . var
    (72) factor -> . RESTA neg_push var neg_pop
    (75) var -> . ID actualiza_id var_func_call
    (76) var -> . CTE_I
    (77) var -> . CTE_F
    (78) var -> . error

    PARIZQ          shift and go to state 133
    RESTA           shift and go to state 135
    ID              shift and go to state 136
    CTE_I           shift and go to state 137
    CTE_F           shift and go to state 138
    error           shift and go to state 139

    expresion                      shift and go to state 208
    expr                           shift and go to state 128
    exp                            shift and go to state 129
    e                              shift and go to state 130
    termino                        shift and go to state 131
    factor                         shift and go to state 132
    var                            shift and go to state 134

state 149

    (127) instruccion -> FORWARD actualiza_instr PARIZQ . expresion PARDER fin_instr1 PUNTCOM
    (47) expresion -> . expr or_expr
    (50) expr -> . exp and_exp
    (53) exp -> . e rel_e
    (61) e -> . termino suma_resta
    (65) termino -> . factor mult_div
    (70) factor -> . PARIZQ push_paren e PARDER pop_paren
    (71) factor -> . var
    (72) factor -> . RESTA neg_push var neg_pop
    (75) var -> . ID actualiza_id var_func_call
    (76) var -> . CTE_I
    (77) var -> . CTE_F
    (78) var -> . error

    PARIZQ          shift and go to state 133
    RESTA           shift and go to state 135
    ID              shift and go to state 136
    CTE_I           shift and go to state 137
    CTE_F           shift and go to state 138
    error           shift and go to state 139

    expresion                      shift and go to state 209
    expr                           shift and go to state 128
    exp                            shift and go to state 129
    e                              shift and go to state 130
    termino                        shift and go to state 131
    factor                         shift and go to state 132
    var                            shift and go to state 134

state 150

    (128) instruccion -> BACKWARD actualiza_instr PARIZQ . expresion PARDER fin_instr1 PUNTCOM
    (47) expresion -> . expr or_expr
    (50) expr -> . exp and_exp
    (53) exp -> . e rel_e
    (61) e -> . termino suma_resta
    (65) termino -> . factor mult_div
    (70) factor -> . PARIZQ push_paren e PARDER pop_paren
    (71) factor -> . var
    (72) factor -> . RESTA neg_push var neg_pop
    (75) var -> . ID actualiza_id var_func_call
    (76) var -> . CTE_I
    (77) var -> . CTE_F
    (78) var -> . error

    PARIZQ          shift and go to state 133
    RESTA           shift and go to state 135
    ID              shift and go to state 136
    CTE_I           shift and go to state 137
    CTE_F           shift and go to state 138
    error           shift and go to state 139

    expresion                      shift and go to state 210
    expr                           shift and go to state 128
    exp                            shift and go to state 129
    e                              shift and go to state 130
    termino                        shift and go to state 131
    factor                         shift and go to state 132
    var                            shift and go to state 134

state 151

    (129) instruccion -> LEFT actualiza_instr PARIZQ . expresion PARDER fin_instr1 PUNTCOM
    (47) expresion -> . expr or_expr
    (50) expr -> . exp and_exp
    (53) exp -> . e rel_e
    (61) e -> . termino suma_resta
    (65) termino -> . factor mult_div
    (70) factor -> . PARIZQ push_paren e PARDER pop_paren
    (71) factor -> . var
    (72) factor -> . RESTA neg_push var neg_pop
    (75) var -> . ID actualiza_id var_func_call
    (76) var -> . CTE_I
    (77) var -> . CTE_F
    (78) var -> . error

    PARIZQ          shift and go to state 133
    RESTA           shift and go to state 135
    ID              shift and go to state 136
    CTE_I           shift and go to state 137
    CTE_F           shift and go to state 138
    error           shift and go to state 139

    expresion                      shift and go to state 211
    expr                           shift and go to state 128
    exp                            shift and go to state 129
    e                              shift and go to state 130
    termino                        shift and go to state 131
    factor                         shift and go to state 132
    var                            shift and go to state 134

state 152

    (130) instruccion -> RIGHT actualiza_instr PARIZQ . expresion PARDER fin_instr1 PUNTCOM
    (47) expresion -> . expr or_expr
    (50) expr -> . exp and_exp
    (53) exp -> . e rel_e
    (61) e -> . termino suma_resta
    (65) termino -> . factor mult_div
    (70) factor -> . PARIZQ push_paren e PARDER pop_paren
    (71) factor -> . var
    (72) factor -> . RESTA neg_push var neg_pop
    (75) var -> . ID actualiza_id var_func_call
    (76) var -> . CTE_I
    (77) var -> . CTE_F
    (78) var -> . error

    PARIZQ          shift and go to state 133
    RESTA           shift and go to state 135
    ID              shift and go to state 136
    CTE_I           shift and go to state 137
    CTE_F           shift and go to state 138
    error           shift and go to state 139

    expresion                      shift and go to state 212
    expr                           shift and go to state 128
    exp                            shift and go to state 129
    e                              shift and go to state 130
    termino                        shift and go to state 131
    factor                         shift and go to state 132
    var                            shift and go to state 134

state 153

    (131) instruccion -> TURN actualiza_instr PARIZQ . expresion PARDER fin_instr1 PUNTCOM
    (47) expresion -> . expr or_expr
    (50) expr -> . exp and_exp
    (53) exp -> . e rel_e
    (61) e -> . termino suma_resta
    (65) termino -> . factor mult_div
    (70) factor -> . PARIZQ push_paren e PARDER pop_paren
    (71) factor -> . var
    (72) factor -> . RESTA neg_push var neg_pop
    (75) var -> . ID actualiza_id var_func_call
    (76) var -> . CTE_I
    (77) var -> . CTE_F
    (78) var -> . error

    PARIZQ          shift and go to state 133
    RESTA           shift and go to state 135
    ID              shift and go to state 136
    CTE_I           shift and go to state 137
    CTE_F           shift and go to state 138
    error           shift and go to state 139

    expresion                      shift and go to state 213
    expr                           shift and go to state 128
    exp                            shift and go to state 129
    e                              shift and go to state 130
    termino                        shift and go to state 131
    factor                         shift and go to state 132
    var                            shift and go to state 134

state 154

    (132) instruccion -> SIZE actualiza_instr PARIZQ . expresion PARDER fin_instr1 PUNTCOM
    (47) expresion -> . expr or_expr
    (50) expr -> . exp and_exp
    (53) exp -> . e rel_e
    (61) e -> . termino suma_resta
    (65) termino -> . factor mult_div
    (70) factor -> . PARIZQ push_paren e PARDER pop_paren
    (71) factor -> . var
    (72) factor -> . RESTA neg_push var neg_pop
    (75) var -> . ID actualiza_id var_func_call
    (76) var -> . CTE_I
    (77) var -> . CTE_F
    (78) var -> . error

    PARIZQ          shift and go to state 133
    RESTA           shift and go to state 135
    ID              shift and go to state 136
    CTE_I           shift and go to state 137
    CTE_F           shift and go to state 138
    error           shift and go to state 139

    expresion                      shift and go to state 214
    expr                           shift and go to state 128
    exp                            shift and go to state 129
    e                              shift and go to state 130
    termino                        shift and go to state 131
    factor                         shift and go to state 132
    var                            shift and go to state 134

state 155

    (133) instruccion -> CIRCLE actualiza_instr PARIZQ . expresion PARDER fin_instr1 transform PUNTCOM
    (47) expresion -> . expr or_expr
    (50) expr -> . exp and_exp
    (53) exp -> . e rel_e
    (61) e -> . termino suma_resta
    (65) termino -> . factor mult_div
    (70) factor -> . PARIZQ push_paren e PARDER pop_paren
    (71) factor -> . var
    (72) factor -> . RESTA neg_push var neg_pop
    (75) var -> . ID actualiza_id var_func_call
    (76) var -> . CTE_I
    (77) var -> . CTE_F
    (78) var -> . error

    PARIZQ          shift and go to state 133
    RESTA           shift and go to state 135
    ID              shift and go to state 136
    CTE_I           shift and go to state 137
    CTE_F           shift and go to state 138
    error           shift and go to state 139

    expresion                      shift and go to state 215
    expr                           shift and go to state 128
    exp                            shift and go to state 129
    e                              shift and go to state 130
    termino                        shift and go to state 131
    factor                         shift and go to state 132
    var                            shift and go to state 134

state 156

    (134) instruccion -> TRIANGLE actualiza_instr PARIZQ . expresion PARDER fin_instr1 transform PUNTCOM
    (47) expresion -> . expr or_expr
    (50) expr -> . exp and_exp
    (53) exp -> . e rel_e
    (61) e -> . termino suma_resta
    (65) termino -> . factor mult_div
    (70) factor -> . PARIZQ push_paren e PARDER pop_paren
    (71) factor -> . var
    (72) factor -> . RESTA neg_push var neg_pop
    (75) var -> . ID actualiza_id var_func_call
    (76) var -> . CTE_I
    (77) var -> . CTE_F
    (78) var -> . error

    PARIZQ          shift and go to state 133
    RESTA           shift and go to state 135
    ID              shift and go to state 136
    CTE_I           shift and go to state 137
    CTE_F           shift and go to state 138
    error           shift and go to state 139

    expresion                      shift and go to state 216
    expr                           shift and go to state 128
    exp                            shift and go to state 129
    e                              shift and go to state 130
    termino                        shift and go to state 131
    factor                         shift and go to state 132
    var                            shift and go to state 134

state 157

    (135) instruccion -> SQUARE actualiza_instr PARIZQ . expresion PARDER fin_instr1 transform PUNTCOM
    (47) expresion -> . expr or_expr
    (50) expr -> . exp and_exp
    (53) exp -> . e rel_e
    (61) e -> . termino suma_resta
    (65) termino -> . factor mult_div
    (70) factor -> . PARIZQ push_paren e PARDER pop_paren
    (71) factor -> . var
    (72) factor -> . RESTA neg_push var neg_pop
    (75) var -> . ID actualiza_id var_func_call
    (76) var -> . CTE_I
    (77) var -> . CTE_F
    (78) var -> . error

    PARIZQ          shift and go to state 133
    RESTA           shift and go to state 135
    ID              shift and go to state 136
    CTE_I           shift and go to state 137
    CTE_F           shift and go to state 138
    error           shift and go to state 139

    expresion                      shift and go to state 217
    expr                           shift and go to state 128
    exp                            shift and go to state 129
    e                              shift and go to state 130
    termino                        shift and go to state 131
    factor                         shift and go to state 132
    var                            shift and go to state 134

state 158

    (136) instruccion -> NGON actualiza_instr PARIZQ . expresion PARDER fin_instr1 transform PUNTCOM
    (47) expresion -> . expr or_expr
    (50) expr -> . exp and_exp
    (53) exp -> . e rel_e
    (61) e -> . termino suma_resta
    (65) termino -> . factor mult_div
    (70) factor -> . PARIZQ push_paren e PARDER pop_paren
    (71) factor -> . var
    (72) factor -> . RESTA neg_push var neg_pop
    (75) var -> . ID actualiza_id var_func_call
    (76) var -> . CTE_I
    (77) var -> . CTE_F
    (78) var -> . error

    PARIZQ          shift and go to state 133
    RESTA           shift and go to state 135
    ID              shift and go to state 136
    CTE_I           shift and go to state 137
    CTE_F           shift and go to state 138
    error           shift and go to state 139

    expresion                      shift and go to state 218
    expr                           shift and go to state 128
    exp                            shift and go to state 129
    e                              shift and go to state 130
    termino                        shift and go to state 131
    factor                         shift and go to state 132
    var                            shift and go to state 134

state 159

    (137) instruccion -> ARC actualiza_instr PARIZQ . expresion PARDER fin_instr1 trans PUNTCOM
    (47) expresion -> . expr or_expr
    (50) expr -> . exp and_exp
    (53) exp -> . e rel_e
    (61) e -> . termino suma_resta
    (65) termino -> . factor mult_div
    (70) factor -> . PARIZQ push_paren e PARDER pop_paren
    (71) factor -> . var
    (72) factor -> . RESTA neg_push var neg_pop
    (75) var -> . ID actualiza_id var_func_call
    (76) var -> . CTE_I
    (77) var -> . CTE_F
    (78) var -> . error

    PARIZQ          shift and go to state 133
    RESTA           shift and go to state 135
    ID              shift and go to state 136
    CTE_I           shift and go to state 137
    CTE_F           shift and go to state 138
    error           shift and go to state 139

    expresion                      shift and go to state 219
    expr                           shift and go to state 128
    exp                            shift and go to state 129
    e                              shift and go to state 130
    termino                        shift and go to state 131
    factor                         shift and go to state 132
    var                            shift and go to state 134

state 160

    (138) instruccion -> UP actualiza_instr PARIZQ . PARDER fin_instr PUNTCOM

    PARDER          shift and go to state 220


state 161

    (139) instruccion -> DOWN actualiza_instr PARIZQ . PARDER fin_instr PUNTCOM

    PARDER          shift and go to state 221


state 162

    (140) instruccion -> COLOR actualiza_instr PARIZQ . expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM
    (47) expresion -> . expr or_expr
    (50) expr -> . exp and_exp
    (53) exp -> . e rel_e
    (61) e -> . termino suma_resta
    (65) termino -> . factor mult_div
    (70) factor -> . PARIZQ push_paren e PARDER pop_paren
    (71) factor -> . var
    (72) factor -> . RESTA neg_push var neg_pop
    (75) var -> . ID actualiza_id var_func_call
    (76) var -> . CTE_I
    (77) var -> . CTE_F
    (78) var -> . error

    PARIZQ          shift and go to state 133
    RESTA           shift and go to state 135
    ID              shift and go to state 136
    CTE_I           shift and go to state 137
    CTE_F           shift and go to state 138
    error           shift and go to state 139

    expresion                      shift and go to state 222
    expr                           shift and go to state 128
    exp                            shift and go to state 129
    e                              shift and go to state 130
    termino                        shift and go to state 131
    factor                         shift and go to state 132
    var                            shift and go to state 134

state 163

    (141) instruccion -> FILLED_CIRCLE actualiza_instr PARIZQ . expresion PARDER fin_instr1 transform PUNTCOM
    (47) expresion -> . expr or_expr
    (50) expr -> . exp and_exp
    (53) exp -> . e rel_e
    (61) e -> . termino suma_resta
    (65) termino -> . factor mult_div
    (70) factor -> . PARIZQ push_paren e PARDER pop_paren
    (71) factor -> . var
    (72) factor -> . RESTA neg_push var neg_pop
    (75) var -> . ID actualiza_id var_func_call
    (76) var -> . CTE_I
    (77) var -> . CTE_F
    (78) var -> . error

    PARIZQ          shift and go to state 133
    RESTA           shift and go to state 135
    ID              shift and go to state 136
    CTE_I           shift and go to state 137
    CTE_F           shift and go to state 138
    error           shift and go to state 139

    expresion                      shift and go to state 223
    expr                           shift and go to state 128
    exp                            shift and go to state 129
    e                              shift and go to state 130
    termino                        shift and go to state 131
    factor                         shift and go to state 132
    var                            shift and go to state 134

state 164

    (142) instruccion -> FILLED_SQUARE actualiza_instr PARIZQ . expresion PARDER fin_instr1 transform PUNTCOM
    (47) expresion -> . expr or_expr
    (50) expr -> . exp and_exp
    (53) exp -> . e rel_e
    (61) e -> . termino suma_resta
    (65) termino -> . factor mult_div
    (70) factor -> . PARIZQ push_paren e PARDER pop_paren
    (71) factor -> . var
    (72) factor -> . RESTA neg_push var neg_pop
    (75) var -> . ID actualiza_id var_func_call
    (76) var -> . CTE_I
    (77) var -> . CTE_F
    (78) var -> . error

    PARIZQ          shift and go to state 133
    RESTA           shift and go to state 135
    ID              shift and go to state 136
    CTE_I           shift and go to state 137
    CTE_F           shift and go to state 138
    error           shift and go to state 139

    expresion                      shift and go to state 224
    expr                           shift and go to state 128
    exp                            shift and go to state 129
    e                              shift and go to state 130
    termino                        shift and go to state 131
    factor                         shift and go to state 132
    var                            shift and go to state 134

state 165

    (143) instruccion -> FILLED_TRIANGLE actualiza_instr PARIZQ . expresion PARDER fin_instr1 transform PUNTCOM
    (47) expresion -> . expr or_expr
    (50) expr -> . exp and_exp
    (53) exp -> . e rel_e
    (61) e -> . termino suma_resta
    (65) termino -> . factor mult_div
    (70) factor -> . PARIZQ push_paren e PARDER pop_paren
    (71) factor -> . var
    (72) factor -> . RESTA neg_push var neg_pop
    (75) var -> . ID actualiza_id var_func_call
    (76) var -> . CTE_I
    (77) var -> . CTE_F
    (78) var -> . error

    PARIZQ          shift and go to state 133
    RESTA           shift and go to state 135
    ID              shift and go to state 136
    CTE_I           shift and go to state 137
    CTE_F           shift and go to state 138
    error           shift and go to state 139

    expresion                      shift and go to state 225
    expr                           shift and go to state 128
    exp                            shift and go to state 129
    e                              shift and go to state 130
    termino                        shift and go to state 131
    factor                         shift and go to state 132
    var                            shift and go to state 134

state 166

    (144) instruccion -> FILLED_NGON actualiza_instr PARIZQ . expresion PARDER fin_instr1 transform PUNTCOM
    (47) expresion -> . expr or_expr
    (50) expr -> . exp and_exp
    (53) exp -> . e rel_e
    (61) e -> . termino suma_resta
    (65) termino -> . factor mult_div
    (70) factor -> . PARIZQ push_paren e PARDER pop_paren
    (71) factor -> . var
    (72) factor -> . RESTA neg_push var neg_pop
    (75) var -> . ID actualiza_id var_func_call
    (76) var -> . CTE_I
    (77) var -> . CTE_F
    (78) var -> . error

    PARIZQ          shift and go to state 133
    RESTA           shift and go to state 135
    ID              shift and go to state 136
    CTE_I           shift and go to state 137
    CTE_F           shift and go to state 138
    error           shift and go to state 139

    expresion                      shift and go to state 226
    expr                           shift and go to state 128
    exp                            shift and go to state 129
    e                              shift and go to state 130
    termino                        shift and go to state 131
    factor                         shift and go to state 132
    var                            shift and go to state 134

state 167

    (145) instruccion -> FILLER_COLOR actualiza_instr PARIZQ . expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM
    (47) expresion -> . expr or_expr
    (50) expr -> . exp and_exp
    (53) exp -> . e rel_e
    (61) e -> . termino suma_resta
    (65) termino -> . factor mult_div
    (70) factor -> . PARIZQ push_paren e PARDER pop_paren
    (71) factor -> . var
    (72) factor -> . RESTA neg_push var neg_pop
    (75) var -> . ID actualiza_id var_func_call
    (76) var -> . CTE_I
    (77) var -> . CTE_F
    (78) var -> . error

    PARIZQ          shift and go to state 133
    RESTA           shift and go to state 135
    ID              shift and go to state 136
    CTE_I           shift and go to state 137
    CTE_F           shift and go to state 138
    error           shift and go to state 139

    expresion                      shift and go to state 227
    expr                           shift and go to state 128
    exp                            shift and go to state 129
    e                              shift and go to state 130
    termino                        shift and go to state 131
    factor                         shift and go to state 132
    var                            shift and go to state 134

state 168

    (9) var_o_func -> PARIZQ crea_func pars PARDER bloque_func funcs .

    MAIN            reduce using rule 9 (var_o_func -> PARIZQ crea_func pars PARDER bloque_func funcs .)


state 169

    (27) funcs -> func . funcs
    (27) funcs -> . func funcs
    (28) funcs -> .
    (29) func -> . tipo ID actualiza_id crea_func PARIZQ pars PARDER bloque_func
    (30) func -> . VOID tipo_void ID actualiza_id crea_func PARIZQ pars PARDER bloque_func
    (124) tipo -> . INT actualiza_tipo
    (125) tipo -> . FLOAT actualiza_tipo

    MAIN            reduce using rule 28 (funcs -> .)
    VOID            shift and go to state 171
    INT             shift and go to state 12
    FLOAT           shift and go to state 13

    func                           shift and go to state 169
    funcs                          shift and go to state 228
    tipo                           shift and go to state 170

state 170

    (29) func -> tipo . ID actualiza_id crea_func PARIZQ pars PARDER bloque_func

    ID              shift and go to state 229


state 171

    (30) func -> VOID . tipo_void ID actualiza_id crea_func PARIZQ pars PARDER bloque_func
    (39) tipo_void -> .

    ID              reduce using rule 39 (tipo_void -> .)

    tipo_void                      shift and go to state 230

state 172

    (34) pars -> tipo ID actualiza_id crea_var . gen_dir par
    (38) gen_dir -> .

    COMA            reduce using rule 38 (gen_dir -> .)
    PARDER          reduce using rule 38 (gen_dir -> .)

    gen_dir                        shift and go to state 231

state 173

    (23) vars_lista -> COMA ID actualiza_id crea_var . lista_dec vars_lista
    (12) lista_dec -> . CORIZQ CTE_I CORDER matriz_dec
    (13) lista_dec -> .

    CORIZQ          shift and go to state 36
    COMA            reduce using rule 13 (lista_dec -> .)
    PUNTCOM         reduce using rule 13 (lista_dec -> .)

    lista_dec                      shift and go to state 232

state 174

    (14) matriz_dec -> CORIZQ CTE_I . CORDER

    CORDER          shift and go to state 233


state 175

    (31) var_func -> VOID tipo_void ID actualiza_id crea_func PARIZQ pars PARDER bloque_func . funcs
    (27) funcs -> . func funcs
    (28) funcs -> .
    (29) func -> . tipo ID actualiza_id crea_func PARIZQ pars PARDER bloque_func
    (30) func -> . VOID tipo_void ID actualiza_id crea_func PARIZQ pars PARDER bloque_func
    (124) tipo -> . INT actualiza_tipo
    (125) tipo -> . FLOAT actualiza_tipo

    MAIN            reduce using rule 28 (funcs -> .)
    VOID            shift and go to state 171
    INT             shift and go to state 12
    FLOAT           shift and go to state 13

    funcs                          shift and go to state 234
    func                           shift and go to state 169
    tipo                           shift and go to state 170

state 176

    (4) ajustes -> CANVAS BRAIZQ WIDTH CTE_I PUNTCOM HEIGHT CTE_I PUNTCOM BACKGROUND CTE_I . COMA CTE_I COMA CTE_I PUNTCOM BRADER

    COMA            shift and go to state 235


state 177

    (16) bloque_func -> BRAIZQ vars_estatutos RETURN returns BRADER . end_sub
    (17) end_sub -> .

    $end            reduce using rule 17 (end_sub -> .)
    VOID            reduce using rule 17 (end_sub -> .)
    INT             reduce using rule 17 (end_sub -> .)
    FLOAT           reduce using rule 17 (end_sub -> .)
    MAIN            reduce using rule 17 (end_sub -> .)

    end_sub                        shift and go to state 236

state 178

    (32) returns -> expresion PUNTCOM .

    BRADER          reduce using rule 32 (returns -> expresion PUNTCOM .)


state 179

    (47) expresion -> expr or_expr .

    PUNTCOM         reduce using rule 47 (expresion -> expr or_expr .)
    PARDER          reduce using rule 47 (expresion -> expr or_expr .)
    COMA            reduce using rule 47 (expresion -> expr or_expr .)
    CORDER          reduce using rule 47 (expresion -> expr or_expr .)


state 180

    (48) or_expr -> OR . push_oper expresion pop_or
    (41) push_oper -> .

    PARIZQ          reduce using rule 41 (push_oper -> .)
    RESTA           reduce using rule 41 (push_oper -> .)
    ID              reduce using rule 41 (push_oper -> .)
    CTE_I           reduce using rule 41 (push_oper -> .)
    CTE_F           reduce using rule 41 (push_oper -> .)
    error           reduce using rule 41 (push_oper -> .)

    push_oper                      shift and go to state 237

state 181

    (50) expr -> exp and_exp .

    OR              reduce using rule 50 (expr -> exp and_exp .)
    PUNTCOM         reduce using rule 50 (expr -> exp and_exp .)
    PARDER          reduce using rule 50 (expr -> exp and_exp .)
    COMA            reduce using rule 50 (expr -> exp and_exp .)
    CORDER          reduce using rule 50 (expr -> exp and_exp .)


state 182

    (51) and_exp -> AND . push_oper expr pop_and
    (41) push_oper -> .

    PARIZQ          reduce using rule 41 (push_oper -> .)
    RESTA           reduce using rule 41 (push_oper -> .)
    ID              reduce using rule 41 (push_oper -> .)
    CTE_I           reduce using rule 41 (push_oper -> .)
    CTE_F           reduce using rule 41 (push_oper -> .)
    error           reduce using rule 41 (push_oper -> .)

    push_oper                      shift and go to state 238

state 183

    (53) exp -> e rel_e .

    AND             reduce using rule 53 (exp -> e rel_e .)
    OR              reduce using rule 53 (exp -> e rel_e .)
    PUNTCOM         reduce using rule 53 (exp -> e rel_e .)
    PARDER          reduce using rule 53 (exp -> e rel_e .)
    COMA            reduce using rule 53 (exp -> e rel_e .)
    CORDER          reduce using rule 53 (exp -> e rel_e .)


state 184

    (54) rel_e -> DIF . push_oper exp pop_rel_e
    (41) push_oper -> .

    PARIZQ          reduce using rule 41 (push_oper -> .)
    RESTA           reduce using rule 41 (push_oper -> .)
    ID              reduce using rule 41 (push_oper -> .)
    CTE_I           reduce using rule 41 (push_oper -> .)
    CTE_F           reduce using rule 41 (push_oper -> .)
    error           reduce using rule 41 (push_oper -> .)

    push_oper                      shift and go to state 239

state 185

    (55) rel_e -> MENOR . push_oper exp pop_rel_e
    (41) push_oper -> .

    PARIZQ          reduce using rule 41 (push_oper -> .)
    RESTA           reduce using rule 41 (push_oper -> .)
    ID              reduce using rule 41 (push_oper -> .)
    CTE_I           reduce using rule 41 (push_oper -> .)
    CTE_F           reduce using rule 41 (push_oper -> .)
    error           reduce using rule 41 (push_oper -> .)

    push_oper                      shift and go to state 240

state 186

    (56) rel_e -> MAYOR . push_oper exp pop_rel_e
    (41) push_oper -> .

    PARIZQ          reduce using rule 41 (push_oper -> .)
    RESTA           reduce using rule 41 (push_oper -> .)
    ID              reduce using rule 41 (push_oper -> .)
    CTE_I           reduce using rule 41 (push_oper -> .)
    CTE_F           reduce using rule 41 (push_oper -> .)
    error           reduce using rule 41 (push_oper -> .)

    push_oper                      shift and go to state 241

state 187

    (57) rel_e -> MENIGUAL . push_oper exp pop_rel_e
    (41) push_oper -> .

    PARIZQ          reduce using rule 41 (push_oper -> .)
    RESTA           reduce using rule 41 (push_oper -> .)
    ID              reduce using rule 41 (push_oper -> .)
    CTE_I           reduce using rule 41 (push_oper -> .)
    CTE_F           reduce using rule 41 (push_oper -> .)
    error           reduce using rule 41 (push_oper -> .)

    push_oper                      shift and go to state 242

state 188

    (58) rel_e -> MAYIGUAL . push_oper exp pop_rel_e
    (41) push_oper -> .

    PARIZQ          reduce using rule 41 (push_oper -> .)
    RESTA           reduce using rule 41 (push_oper -> .)
    ID              reduce using rule 41 (push_oper -> .)
    CTE_I           reduce using rule 41 (push_oper -> .)
    CTE_F           reduce using rule 41 (push_oper -> .)
    error           reduce using rule 41 (push_oper -> .)

    push_oper                      shift and go to state 243

state 189

    (59) rel_e -> IGUAL . push_oper exp pop_rel_e
    (41) push_oper -> .

    PARIZQ          reduce using rule 41 (push_oper -> .)
    RESTA           reduce using rule 41 (push_oper -> .)
    ID              reduce using rule 41 (push_oper -> .)
    CTE_I           reduce using rule 41 (push_oper -> .)
    CTE_F           reduce using rule 41 (push_oper -> .)
    error           reduce using rule 41 (push_oper -> .)

    push_oper                      shift and go to state 244

state 190

    (61) e -> termino suma_resta .

    DIF             reduce using rule 61 (e -> termino suma_resta .)
    MENOR           reduce using rule 61 (e -> termino suma_resta .)
    MAYOR           reduce using rule 61 (e -> termino suma_resta .)
    MENIGUAL        reduce using rule 61 (e -> termino suma_resta .)
    MAYIGUAL        reduce using rule 61 (e -> termino suma_resta .)
    IGUAL           reduce using rule 61 (e -> termino suma_resta .)
    AND             reduce using rule 61 (e -> termino suma_resta .)
    OR              reduce using rule 61 (e -> termino suma_resta .)
    PUNTCOM         reduce using rule 61 (e -> termino suma_resta .)
    PARDER          reduce using rule 61 (e -> termino suma_resta .)
    COMA            reduce using rule 61 (e -> termino suma_resta .)
    CORDER          reduce using rule 61 (e -> termino suma_resta .)


state 191

    (62) suma_resta -> SUMA . push_oper e pop_suma_resta
    (41) push_oper -> .

    PARIZQ          reduce using rule 41 (push_oper -> .)
    RESTA           reduce using rule 41 (push_oper -> .)
    ID              reduce using rule 41 (push_oper -> .)
    CTE_I           reduce using rule 41 (push_oper -> .)
    CTE_F           reduce using rule 41 (push_oper -> .)
    error           reduce using rule 41 (push_oper -> .)

    push_oper                      shift and go to state 245

state 192

    (63) suma_resta -> RESTA . push_oper e pop_suma_resta
    (41) push_oper -> .

    PARIZQ          reduce using rule 41 (push_oper -> .)
    RESTA           reduce using rule 41 (push_oper -> .)
    ID              reduce using rule 41 (push_oper -> .)
    CTE_I           reduce using rule 41 (push_oper -> .)
    CTE_F           reduce using rule 41 (push_oper -> .)
    error           reduce using rule 41 (push_oper -> .)

    push_oper                      shift and go to state 246

state 193

    (65) termino -> factor mult_div .

    SUMA            reduce using rule 65 (termino -> factor mult_div .)
    RESTA           reduce using rule 65 (termino -> factor mult_div .)
    DIF             reduce using rule 65 (termino -> factor mult_div .)
    MENOR           reduce using rule 65 (termino -> factor mult_div .)
    MAYOR           reduce using rule 65 (termino -> factor mult_div .)
    MENIGUAL        reduce using rule 65 (termino -> factor mult_div .)
    MAYIGUAL        reduce using rule 65 (termino -> factor mult_div .)
    IGUAL           reduce using rule 65 (termino -> factor mult_div .)
    AND             reduce using rule 65 (termino -> factor mult_div .)
    OR              reduce using rule 65 (termino -> factor mult_div .)
    PUNTCOM         reduce using rule 65 (termino -> factor mult_div .)
    PARDER          reduce using rule 65 (termino -> factor mult_div .)
    COMA            reduce using rule 65 (termino -> factor mult_div .)
    CORDER          reduce using rule 65 (termino -> factor mult_div .)


state 194

    (66) mult_div -> MULT . push_oper termino pop_mult_div
    (41) push_oper -> .

    PARIZQ          reduce using rule 41 (push_oper -> .)
    RESTA           reduce using rule 41 (push_oper -> .)
    ID              reduce using rule 41 (push_oper -> .)
    CTE_I           reduce using rule 41 (push_oper -> .)
    CTE_F           reduce using rule 41 (push_oper -> .)
    error           reduce using rule 41 (push_oper -> .)

    push_oper                      shift and go to state 247

state 195

    (67) mult_div -> DIV . push_oper termino pop_mult_div
    (41) push_oper -> .

    PARIZQ          reduce using rule 41 (push_oper -> .)
    RESTA           reduce using rule 41 (push_oper -> .)
    ID              reduce using rule 41 (push_oper -> .)
    CTE_I           reduce using rule 41 (push_oper -> .)
    CTE_F           reduce using rule 41 (push_oper -> .)
    error           reduce using rule 41 (push_oper -> .)

    push_oper                      shift and go to state 248

state 196

    (68) mult_div -> MOD . push_oper termino pop_mult_div
    (41) push_oper -> .

    PARIZQ          reduce using rule 41 (push_oper -> .)
    RESTA           reduce using rule 41 (push_oper -> .)
    ID              reduce using rule 41 (push_oper -> .)
    CTE_I           reduce using rule 41 (push_oper -> .)
    CTE_F           reduce using rule 41 (push_oper -> .)
    error           reduce using rule 41 (push_oper -> .)

    push_oper                      shift and go to state 249

state 197

    (70) factor -> PARIZQ push_paren . e PARDER pop_paren
    (61) e -> . termino suma_resta
    (65) termino -> . factor mult_div
    (70) factor -> . PARIZQ push_paren e PARDER pop_paren
    (71) factor -> . var
    (72) factor -> . RESTA neg_push var neg_pop
    (75) var -> . ID actualiza_id var_func_call
    (76) var -> . CTE_I
    (77) var -> . CTE_F
    (78) var -> . error

    PARIZQ          shift and go to state 133
    RESTA           shift and go to state 135
    ID              shift and go to state 136
    CTE_I           shift and go to state 137
    CTE_F           shift and go to state 138
    error           shift and go to state 139

    e                              shift and go to state 250
    termino                        shift and go to state 131
    factor                         shift and go to state 132
    var                            shift and go to state 134

state 198

    (72) factor -> RESTA neg_push . var neg_pop
    (75) var -> . ID actualiza_id var_func_call
    (76) var -> . CTE_I
    (77) var -> . CTE_F
    (78) var -> . error

    ID              shift and go to state 136
    CTE_I           shift and go to state 137
    CTE_F           shift and go to state 138
    error           shift and go to state 139

    var                            shift and go to state 251

state 199

    (75) var -> ID actualiza_id . var_func_call
    (85) var_func_call -> . lista
    (96) var_func_call -> . PARIZQ actualiza_func args gen_era PARDER gen_gosub
    (81) lista -> . CORIZQ push_dim expresion CORDER matriz
    (82) lista -> .

    PARIZQ          shift and go to state 254
    CORIZQ          shift and go to state 143
    MULT            reduce using rule 82 (lista -> .)
    DIV             reduce using rule 82 (lista -> .)
    MOD             reduce using rule 82 (lista -> .)
    SUMA            reduce using rule 82 (lista -> .)
    RESTA           reduce using rule 82 (lista -> .)
    DIF             reduce using rule 82 (lista -> .)
    MENOR           reduce using rule 82 (lista -> .)
    MAYOR           reduce using rule 82 (lista -> .)
    MENIGUAL        reduce using rule 82 (lista -> .)
    MAYIGUAL        reduce using rule 82 (lista -> .)
    IGUAL           reduce using rule 82 (lista -> .)
    AND             reduce using rule 82 (lista -> .)
    OR              reduce using rule 82 (lista -> .)
    PUNTCOM         reduce using rule 82 (lista -> .)
    PARDER          reduce using rule 82 (lista -> .)
    COMA            reduce using rule 82 (lista -> .)
    CORDER          reduce using rule 82 (lista -> .)

    var_func_call                  shift and go to state 252
    lista                          shift and go to state 253

state 200

    (22) vars -> tipo ID actualiza_id crea_var . lista_dec vars_lista PUNTCOM mas_vars
    (12) lista_dec -> . CORIZQ CTE_I CORDER matriz_dec
    (13) lista_dec -> .

    CORIZQ          shift and go to state 36
    COMA            reduce using rule 13 (lista_dec -> .)
    PUNTCOM         reduce using rule 13 (lista_dec -> .)

    lista_dec                      shift and go to state 255

state 201

    (105) asignacion -> ID actualiza_id lista ASIG . exp_input PUNTCOM
    (106) exp_input -> . expresion
    (107) exp_input -> . INPUT PARIZQ PARDER
    (47) expresion -> . expr or_expr
    (50) expr -> . exp and_exp
    (53) exp -> . e rel_e
    (61) e -> . termino suma_resta
    (65) termino -> . factor mult_div
    (70) factor -> . PARIZQ push_paren e PARDER pop_paren
    (71) factor -> . var
    (72) factor -> . RESTA neg_push var neg_pop
    (75) var -> . ID actualiza_id var_func_call
    (76) var -> . CTE_I
    (77) var -> . CTE_F
    (78) var -> . error

    INPUT           shift and go to state 258
    PARIZQ          shift and go to state 133
    RESTA           shift and go to state 135
    ID              shift and go to state 136
    CTE_I           shift and go to state 137
    CTE_F           shift and go to state 138
    error           shift and go to state 139

    exp_input                      shift and go to state 256
    expresion                      shift and go to state 257
    expr                           shift and go to state 128
    exp                            shift and go to state 129
    e                              shift and go to state 130
    termino                        shift and go to state 131
    factor                         shift and go to state 132
    var                            shift and go to state 134

state 202

    (95) func_call -> ID actualiza_id actualiza_func PARIZQ . args gen_era PARDER gen_gosub
    (100) args -> . expresion asig_par arg
    (101) args -> .
    (47) expresion -> . expr or_expr
    (50) expr -> . exp and_exp
    (53) exp -> . e rel_e
    (61) e -> . termino suma_resta
    (65) termino -> . factor mult_div
    (70) factor -> . PARIZQ push_paren e PARDER pop_paren
    (71) factor -> . var
    (72) factor -> . RESTA neg_push var neg_pop
    (75) var -> . ID actualiza_id var_func_call
    (76) var -> . CTE_I
    (77) var -> . CTE_F
    (78) var -> . error

    PARDER          reduce using rule 101 (args -> .)
    PARIZQ          shift and go to state 133
    RESTA           shift and go to state 135
    ID              shift and go to state 136
    CTE_I           shift and go to state 137
    CTE_F           shift and go to state 138
    error           shift and go to state 139

    args                           shift and go to state 259
    expresion                      shift and go to state 260
    expr                           shift and go to state 128
    exp                            shift and go to state 129
    e                              shift and go to state 130
    termino                        shift and go to state 131
    factor                         shift and go to state 132
    var                            shift and go to state 134

state 203

    (81) lista -> CORIZQ push_dim . expresion CORDER matriz
    (47) expresion -> . expr or_expr
    (50) expr -> . exp and_exp
    (53) exp -> . e rel_e
    (61) e -> . termino suma_resta
    (65) termino -> . factor mult_div
    (70) factor -> . PARIZQ push_paren e PARDER pop_paren
    (71) factor -> . var
    (72) factor -> . RESTA neg_push var neg_pop
    (75) var -> . ID actualiza_id var_func_call
    (76) var -> . CTE_I
    (77) var -> . CTE_F
    (78) var -> . error

    PARIZQ          shift and go to state 133
    RESTA           shift and go to state 135
    ID              shift and go to state 136
    CTE_I           shift and go to state 137
    CTE_F           shift and go to state 138
    error           shift and go to state 139

    expresion                      shift and go to state 261
    expr                           shift and go to state 128
    exp                            shift and go to state 129
    e                              shift and go to state 130
    termino                        shift and go to state 131
    factor                         shift and go to state 132
    var                            shift and go to state 134

state 204

    (108) condicion -> IF PARIZQ expresion fin_exp . PARDER bloque else_bloque fin_cond

    PARDER          shift and go to state 262


state 205

    (117) escritura -> PRINT PARIZQ arg_escritura PARDER . PUNTCOM

    PUNTCOM         shift and go to state 263


state 206

    (118) arg_escritura -> expresion fin_arg . args_escritura
    (120) args_escritura -> . COMA arg_escritura
    (121) args_escritura -> .

    COMA            shift and go to state 265
    PARDER          reduce using rule 121 (args_escritura -> .)

    args_escritura                 shift and go to state 264

state 207

    (119) arg_escritura -> CTE_STR print_string . args_escritura
    (120) args_escritura -> . COMA arg_escritura
    (121) args_escritura -> .

    COMA            shift and go to state 265
    PARDER          reduce using rule 121 (args_escritura -> .)

    args_escritura                 shift and go to state 266

state 208

    (114) ciclo -> REPEAT push_cont PARIZQ expresion . fin_exp PARDER bloque fin_repeat
    (113) fin_exp -> .

    PARDER          reduce using rule 113 (fin_exp -> .)

    fin_exp                        shift and go to state 267

state 209

    (127) instruccion -> FORWARD actualiza_instr PARIZQ expresion . PARDER fin_instr1 PUNTCOM

    PARDER          shift and go to state 268


state 210

    (128) instruccion -> BACKWARD actualiza_instr PARIZQ expresion . PARDER fin_instr1 PUNTCOM

    PARDER          shift and go to state 269


state 211

    (129) instruccion -> LEFT actualiza_instr PARIZQ expresion . PARDER fin_instr1 PUNTCOM

    PARDER          shift and go to state 270


state 212

    (130) instruccion -> RIGHT actualiza_instr PARIZQ expresion . PARDER fin_instr1 PUNTCOM

    PARDER          shift and go to state 271


state 213

    (131) instruccion -> TURN actualiza_instr PARIZQ expresion . PARDER fin_instr1 PUNTCOM

    PARDER          shift and go to state 272


state 214

    (132) instruccion -> SIZE actualiza_instr PARIZQ expresion . PARDER fin_instr1 PUNTCOM

    PARDER          shift and go to state 273


state 215

    (133) instruccion -> CIRCLE actualiza_instr PARIZQ expresion . PARDER fin_instr1 transform PUNTCOM

    PARDER          shift and go to state 274


state 216

    (134) instruccion -> TRIANGLE actualiza_instr PARIZQ expresion . PARDER fin_instr1 transform PUNTCOM

    PARDER          shift and go to state 275


state 217

    (135) instruccion -> SQUARE actualiza_instr PARIZQ expresion . PARDER fin_instr1 transform PUNTCOM

    PARDER          shift and go to state 276


state 218

    (136) instruccion -> NGON actualiza_instr PARIZQ expresion . PARDER fin_instr1 transform PUNTCOM

    PARDER          shift and go to state 277


state 219

    (137) instruccion -> ARC actualiza_instr PARIZQ expresion . PARDER fin_instr1 trans PUNTCOM

    PARDER          shift and go to state 278


state 220

    (138) instruccion -> UP actualiza_instr PARIZQ PARDER . fin_instr PUNTCOM
    (154) fin_instr -> .

    PUNTCOM         reduce using rule 154 (fin_instr -> .)

    fin_instr                      shift and go to state 279

state 221

    (139) instruccion -> DOWN actualiza_instr PARIZQ PARDER . fin_instr PUNTCOM
    (154) fin_instr -> .

    PUNTCOM         reduce using rule 154 (fin_instr -> .)

    fin_instr                      shift and go to state 280

state 222

    (140) instruccion -> COLOR actualiza_instr PARIZQ expresion . COMA expresion COMA expresion PARDER fin_color PUNTCOM

    COMA            shift and go to state 281


state 223

    (141) instruccion -> FILLED_CIRCLE actualiza_instr PARIZQ expresion . PARDER fin_instr1 transform PUNTCOM

    PARDER          shift and go to state 282


state 224

    (142) instruccion -> FILLED_SQUARE actualiza_instr PARIZQ expresion . PARDER fin_instr1 transform PUNTCOM

    PARDER          shift and go to state 283


state 225

    (143) instruccion -> FILLED_TRIANGLE actualiza_instr PARIZQ expresion . PARDER fin_instr1 transform PUNTCOM

    PARDER          shift and go to state 284


state 226

    (144) instruccion -> FILLED_NGON actualiza_instr PARIZQ expresion . PARDER fin_instr1 transform PUNTCOM

    PARDER          shift and go to state 285


state 227

    (145) instruccion -> FILLER_COLOR actualiza_instr PARIZQ expresion . COMA expresion COMA expresion PARDER fin_color PUNTCOM

    COMA            shift and go to state 286


state 228

    (27) funcs -> func funcs .

    MAIN            reduce using rule 27 (funcs -> func funcs .)


state 229

    (29) func -> tipo ID . actualiza_id crea_func PARIZQ pars PARDER bloque_func
    (8) actualiza_id -> .

    PARIZQ          reduce using rule 8 (actualiza_id -> .)

    actualiza_id                   shift and go to state 287

state 230

    (30) func -> VOID tipo_void . ID actualiza_id crea_func PARIZQ pars PARDER bloque_func

    ID              shift and go to state 288


state 231

    (34) pars -> tipo ID actualiza_id crea_var gen_dir . par
    (36) par -> . COMA tipo ID actualiza_id crea_var gen_dir par
    (37) par -> .

    COMA            shift and go to state 290
    PARDER          reduce using rule 37 (par -> .)

    par                            shift and go to state 289

state 232

    (23) vars_lista -> COMA ID actualiza_id crea_var lista_dec . vars_lista
    (23) vars_lista -> . COMA ID actualiza_id crea_var lista_dec vars_lista
    (24) vars_lista -> .

    COMA            shift and go to state 44
    PUNTCOM         reduce using rule 24 (vars_lista -> .)

    vars_lista                     shift and go to state 291

state 233

    (14) matriz_dec -> CORIZQ CTE_I CORDER .

    COMA            reduce using rule 14 (matriz_dec -> CORIZQ CTE_I CORDER .)
    PUNTCOM         reduce using rule 14 (matriz_dec -> CORIZQ CTE_I CORDER .)


state 234

    (31) var_func -> VOID tipo_void ID actualiza_id crea_func PARIZQ pars PARDER bloque_func funcs .

    MAIN            reduce using rule 31 (var_func -> VOID tipo_void ID actualiza_id crea_func PARIZQ pars PARDER bloque_func funcs .)


state 235

    (4) ajustes -> CANVAS BRAIZQ WIDTH CTE_I PUNTCOM HEIGHT CTE_I PUNTCOM BACKGROUND CTE_I COMA . CTE_I COMA CTE_I PUNTCOM BRADER

    CTE_I           shift and go to state 292


state 236

    (16) bloque_func -> BRAIZQ vars_estatutos RETURN returns BRADER end_sub .

    $end            reduce using rule 16 (bloque_func -> BRAIZQ vars_estatutos RETURN returns BRADER end_sub .)
    VOID            reduce using rule 16 (bloque_func -> BRAIZQ vars_estatutos RETURN returns BRADER end_sub .)
    INT             reduce using rule 16 (bloque_func -> BRAIZQ vars_estatutos RETURN returns BRADER end_sub .)
    FLOAT           reduce using rule 16 (bloque_func -> BRAIZQ vars_estatutos RETURN returns BRADER end_sub .)
    MAIN            reduce using rule 16 (bloque_func -> BRAIZQ vars_estatutos RETURN returns BRADER end_sub .)


state 237

    (48) or_expr -> OR push_oper . expresion pop_or
    (47) expresion -> . expr or_expr
    (50) expr -> . exp and_exp
    (53) exp -> . e rel_e
    (61) e -> . termino suma_resta
    (65) termino -> . factor mult_div
    (70) factor -> . PARIZQ push_paren e PARDER pop_paren
    (71) factor -> . var
    (72) factor -> . RESTA neg_push var neg_pop
    (75) var -> . ID actualiza_id var_func_call
    (76) var -> . CTE_I
    (77) var -> . CTE_F
    (78) var -> . error

    PARIZQ          shift and go to state 133
    RESTA           shift and go to state 135
    ID              shift and go to state 136
    CTE_I           shift and go to state 137
    CTE_F           shift and go to state 138
    error           shift and go to state 139

    expresion                      shift and go to state 293
    expr                           shift and go to state 128
    exp                            shift and go to state 129
    e                              shift and go to state 130
    termino                        shift and go to state 131
    factor                         shift and go to state 132
    var                            shift and go to state 134

state 238

    (51) and_exp -> AND push_oper . expr pop_and
    (50) expr -> . exp and_exp
    (53) exp -> . e rel_e
    (61) e -> . termino suma_resta
    (65) termino -> . factor mult_div
    (70) factor -> . PARIZQ push_paren e PARDER pop_paren
    (71) factor -> . var
    (72) factor -> . RESTA neg_push var neg_pop
    (75) var -> . ID actualiza_id var_func_call
    (76) var -> . CTE_I
    (77) var -> . CTE_F
    (78) var -> . error

    PARIZQ          shift and go to state 133
    RESTA           shift and go to state 135
    ID              shift and go to state 136
    CTE_I           shift and go to state 137
    CTE_F           shift and go to state 138
    error           shift and go to state 139

    expr                           shift and go to state 294
    exp                            shift and go to state 129
    e                              shift and go to state 130
    termino                        shift and go to state 131
    factor                         shift and go to state 132
    var                            shift and go to state 134

state 239

    (54) rel_e -> DIF push_oper . exp pop_rel_e
    (53) exp -> . e rel_e
    (61) e -> . termino suma_resta
    (65) termino -> . factor mult_div
    (70) factor -> . PARIZQ push_paren e PARDER pop_paren
    (71) factor -> . var
    (72) factor -> . RESTA neg_push var neg_pop
    (75) var -> . ID actualiza_id var_func_call
    (76) var -> . CTE_I
    (77) var -> . CTE_F
    (78) var -> . error

    PARIZQ          shift and go to state 133
    RESTA           shift and go to state 135
    ID              shift and go to state 136
    CTE_I           shift and go to state 137
    CTE_F           shift and go to state 138
    error           shift and go to state 139

    exp                            shift and go to state 295
    e                              shift and go to state 130
    termino                        shift and go to state 131
    factor                         shift and go to state 132
    var                            shift and go to state 134

state 240

    (55) rel_e -> MENOR push_oper . exp pop_rel_e
    (53) exp -> . e rel_e
    (61) e -> . termino suma_resta
    (65) termino -> . factor mult_div
    (70) factor -> . PARIZQ push_paren e PARDER pop_paren
    (71) factor -> . var
    (72) factor -> . RESTA neg_push var neg_pop
    (75) var -> . ID actualiza_id var_func_call
    (76) var -> . CTE_I
    (77) var -> . CTE_F
    (78) var -> . error

    PARIZQ          shift and go to state 133
    RESTA           shift and go to state 135
    ID              shift and go to state 136
    CTE_I           shift and go to state 137
    CTE_F           shift and go to state 138
    error           shift and go to state 139

    exp                            shift and go to state 296
    e                              shift and go to state 130
    termino                        shift and go to state 131
    factor                         shift and go to state 132
    var                            shift and go to state 134

state 241

    (56) rel_e -> MAYOR push_oper . exp pop_rel_e
    (53) exp -> . e rel_e
    (61) e -> . termino suma_resta
    (65) termino -> . factor mult_div
    (70) factor -> . PARIZQ push_paren e PARDER pop_paren
    (71) factor -> . var
    (72) factor -> . RESTA neg_push var neg_pop
    (75) var -> . ID actualiza_id var_func_call
    (76) var -> . CTE_I
    (77) var -> . CTE_F
    (78) var -> . error

    PARIZQ          shift and go to state 133
    RESTA           shift and go to state 135
    ID              shift and go to state 136
    CTE_I           shift and go to state 137
    CTE_F           shift and go to state 138
    error           shift and go to state 139

    exp                            shift and go to state 297
    e                              shift and go to state 130
    termino                        shift and go to state 131
    factor                         shift and go to state 132
    var                            shift and go to state 134

state 242

    (57) rel_e -> MENIGUAL push_oper . exp pop_rel_e
    (53) exp -> . e rel_e
    (61) e -> . termino suma_resta
    (65) termino -> . factor mult_div
    (70) factor -> . PARIZQ push_paren e PARDER pop_paren
    (71) factor -> . var
    (72) factor -> . RESTA neg_push var neg_pop
    (75) var -> . ID actualiza_id var_func_call
    (76) var -> . CTE_I
    (77) var -> . CTE_F
    (78) var -> . error

    PARIZQ          shift and go to state 133
    RESTA           shift and go to state 135
    ID              shift and go to state 136
    CTE_I           shift and go to state 137
    CTE_F           shift and go to state 138
    error           shift and go to state 139

    exp                            shift and go to state 298
    e                              shift and go to state 130
    termino                        shift and go to state 131
    factor                         shift and go to state 132
    var                            shift and go to state 134

state 243

    (58) rel_e -> MAYIGUAL push_oper . exp pop_rel_e
    (53) exp -> . e rel_e
    (61) e -> . termino suma_resta
    (65) termino -> . factor mult_div
    (70) factor -> . PARIZQ push_paren e PARDER pop_paren
    (71) factor -> . var
    (72) factor -> . RESTA neg_push var neg_pop
    (75) var -> . ID actualiza_id var_func_call
    (76) var -> . CTE_I
    (77) var -> . CTE_F
    (78) var -> . error

    PARIZQ          shift and go to state 133
    RESTA           shift and go to state 135
    ID              shift and go to state 136
    CTE_I           shift and go to state 137
    CTE_F           shift and go to state 138
    error           shift and go to state 139

    exp                            shift and go to state 299
    e                              shift and go to state 130
    termino                        shift and go to state 131
    factor                         shift and go to state 132
    var                            shift and go to state 134

state 244

    (59) rel_e -> IGUAL push_oper . exp pop_rel_e
    (53) exp -> . e rel_e
    (61) e -> . termino suma_resta
    (65) termino -> . factor mult_div
    (70) factor -> . PARIZQ push_paren e PARDER pop_paren
    (71) factor -> . var
    (72) factor -> . RESTA neg_push var neg_pop
    (75) var -> . ID actualiza_id var_func_call
    (76) var -> . CTE_I
    (77) var -> . CTE_F
    (78) var -> . error

    PARIZQ          shift and go to state 133
    RESTA           shift and go to state 135
    ID              shift and go to state 136
    CTE_I           shift and go to state 137
    CTE_F           shift and go to state 138
    error           shift and go to state 139

    exp                            shift and go to state 300
    e                              shift and go to state 130
    termino                        shift and go to state 131
    factor                         shift and go to state 132
    var                            shift and go to state 134

state 245

    (62) suma_resta -> SUMA push_oper . e pop_suma_resta
    (61) e -> . termino suma_resta
    (65) termino -> . factor mult_div
    (70) factor -> . PARIZQ push_paren e PARDER pop_paren
    (71) factor -> . var
    (72) factor -> . RESTA neg_push var neg_pop
    (75) var -> . ID actualiza_id var_func_call
    (76) var -> . CTE_I
    (77) var -> . CTE_F
    (78) var -> . error

    PARIZQ          shift and go to state 133
    RESTA           shift and go to state 135
    ID              shift and go to state 136
    CTE_I           shift and go to state 137
    CTE_F           shift and go to state 138
    error           shift and go to state 139

    e                              shift and go to state 301
    termino                        shift and go to state 131
    factor                         shift and go to state 132
    var                            shift and go to state 134

state 246

    (63) suma_resta -> RESTA push_oper . e pop_suma_resta
    (61) e -> . termino suma_resta
    (65) termino -> . factor mult_div
    (70) factor -> . PARIZQ push_paren e PARDER pop_paren
    (71) factor -> . var
    (72) factor -> . RESTA neg_push var neg_pop
    (75) var -> . ID actualiza_id var_func_call
    (76) var -> . CTE_I
    (77) var -> . CTE_F
    (78) var -> . error

    PARIZQ          shift and go to state 133
    RESTA           shift and go to state 135
    ID              shift and go to state 136
    CTE_I           shift and go to state 137
    CTE_F           shift and go to state 138
    error           shift and go to state 139

    e                              shift and go to state 302
    termino                        shift and go to state 131
    factor                         shift and go to state 132
    var                            shift and go to state 134

state 247

    (66) mult_div -> MULT push_oper . termino pop_mult_div
    (65) termino -> . factor mult_div
    (70) factor -> . PARIZQ push_paren e PARDER pop_paren
    (71) factor -> . var
    (72) factor -> . RESTA neg_push var neg_pop
    (75) var -> . ID actualiza_id var_func_call
    (76) var -> . CTE_I
    (77) var -> . CTE_F
    (78) var -> . error

    PARIZQ          shift and go to state 133
    RESTA           shift and go to state 135
    ID              shift and go to state 136
    CTE_I           shift and go to state 137
    CTE_F           shift and go to state 138
    error           shift and go to state 139

    termino                        shift and go to state 303
    factor                         shift and go to state 132
    var                            shift and go to state 134

state 248

    (67) mult_div -> DIV push_oper . termino pop_mult_div
    (65) termino -> . factor mult_div
    (70) factor -> . PARIZQ push_paren e PARDER pop_paren
    (71) factor -> . var
    (72) factor -> . RESTA neg_push var neg_pop
    (75) var -> . ID actualiza_id var_func_call
    (76) var -> . CTE_I
    (77) var -> . CTE_F
    (78) var -> . error

    PARIZQ          shift and go to state 133
    RESTA           shift and go to state 135
    ID              shift and go to state 136
    CTE_I           shift and go to state 137
    CTE_F           shift and go to state 138
    error           shift and go to state 139

    termino                        shift and go to state 304
    factor                         shift and go to state 132
    var                            shift and go to state 134

state 249

    (68) mult_div -> MOD push_oper . termino pop_mult_div
    (65) termino -> . factor mult_div
    (70) factor -> . PARIZQ push_paren e PARDER pop_paren
    (71) factor -> . var
    (72) factor -> . RESTA neg_push var neg_pop
    (75) var -> . ID actualiza_id var_func_call
    (76) var -> . CTE_I
    (77) var -> . CTE_F
    (78) var -> . error

    PARIZQ          shift and go to state 133
    RESTA           shift and go to state 135
    ID              shift and go to state 136
    CTE_I           shift and go to state 137
    CTE_F           shift and go to state 138
    error           shift and go to state 139

    termino                        shift and go to state 305
    factor                         shift and go to state 132
    var                            shift and go to state 134

state 250

    (70) factor -> PARIZQ push_paren e . PARDER pop_paren

    PARDER          shift and go to state 306


state 251

    (72) factor -> RESTA neg_push var . neg_pop
    (74) neg_pop -> .

    MULT            reduce using rule 74 (neg_pop -> .)
    DIV             reduce using rule 74 (neg_pop -> .)
    MOD             reduce using rule 74 (neg_pop -> .)
    SUMA            reduce using rule 74 (neg_pop -> .)
    RESTA           reduce using rule 74 (neg_pop -> .)
    DIF             reduce using rule 74 (neg_pop -> .)
    MENOR           reduce using rule 74 (neg_pop -> .)
    MAYOR           reduce using rule 74 (neg_pop -> .)
    MENIGUAL        reduce using rule 74 (neg_pop -> .)
    MAYIGUAL        reduce using rule 74 (neg_pop -> .)
    IGUAL           reduce using rule 74 (neg_pop -> .)
    AND             reduce using rule 74 (neg_pop -> .)
    OR              reduce using rule 74 (neg_pop -> .)
    PUNTCOM         reduce using rule 74 (neg_pop -> .)
    PARDER          reduce using rule 74 (neg_pop -> .)
    COMA            reduce using rule 74 (neg_pop -> .)
    CORDER          reduce using rule 74 (neg_pop -> .)

    neg_pop                        shift and go to state 307

state 252

    (75) var -> ID actualiza_id var_func_call .

    MULT            reduce using rule 75 (var -> ID actualiza_id var_func_call .)
    DIV             reduce using rule 75 (var -> ID actualiza_id var_func_call .)
    MOD             reduce using rule 75 (var -> ID actualiza_id var_func_call .)
    SUMA            reduce using rule 75 (var -> ID actualiza_id var_func_call .)
    RESTA           reduce using rule 75 (var -> ID actualiza_id var_func_call .)
    DIF             reduce using rule 75 (var -> ID actualiza_id var_func_call .)
    MENOR           reduce using rule 75 (var -> ID actualiza_id var_func_call .)
    MAYOR           reduce using rule 75 (var -> ID actualiza_id var_func_call .)
    MENIGUAL        reduce using rule 75 (var -> ID actualiza_id var_func_call .)
    MAYIGUAL        reduce using rule 75 (var -> ID actualiza_id var_func_call .)
    IGUAL           reduce using rule 75 (var -> ID actualiza_id var_func_call .)
    AND             reduce using rule 75 (var -> ID actualiza_id var_func_call .)
    OR              reduce using rule 75 (var -> ID actualiza_id var_func_call .)
    PUNTCOM         reduce using rule 75 (var -> ID actualiza_id var_func_call .)
    PARDER          reduce using rule 75 (var -> ID actualiza_id var_func_call .)
    COMA            reduce using rule 75 (var -> ID actualiza_id var_func_call .)
    CORDER          reduce using rule 75 (var -> ID actualiza_id var_func_call .)


state 253

    (85) var_func_call -> lista .

    MULT            reduce using rule 85 (var_func_call -> lista .)
    DIV             reduce using rule 85 (var_func_call -> lista .)
    MOD             reduce using rule 85 (var_func_call -> lista .)
    SUMA            reduce using rule 85 (var_func_call -> lista .)
    RESTA           reduce using rule 85 (var_func_call -> lista .)
    DIF             reduce using rule 85 (var_func_call -> lista .)
    MENOR           reduce using rule 85 (var_func_call -> lista .)
    MAYOR           reduce using rule 85 (var_func_call -> lista .)
    MENIGUAL        reduce using rule 85 (var_func_call -> lista .)
    MAYIGUAL        reduce using rule 85 (var_func_call -> lista .)
    IGUAL           reduce using rule 85 (var_func_call -> lista .)
    AND             reduce using rule 85 (var_func_call -> lista .)
    OR              reduce using rule 85 (var_func_call -> lista .)
    PUNTCOM         reduce using rule 85 (var_func_call -> lista .)
    PARDER          reduce using rule 85 (var_func_call -> lista .)
    COMA            reduce using rule 85 (var_func_call -> lista .)
    CORDER          reduce using rule 85 (var_func_call -> lista .)


state 254

    (96) var_func_call -> PARIZQ . actualiza_func args gen_era PARDER gen_gosub
    (97) actualiza_func -> .

    PARIZQ          reduce using rule 97 (actualiza_func -> .)
    RESTA           reduce using rule 97 (actualiza_func -> .)
    ID              reduce using rule 97 (actualiza_func -> .)
    CTE_I           reduce using rule 97 (actualiza_func -> .)
    CTE_F           reduce using rule 97 (actualiza_func -> .)
    error           reduce using rule 97 (actualiza_func -> .)
    PARDER          reduce using rule 97 (actualiza_func -> .)

    actualiza_func                 shift and go to state 308

state 255

    (22) vars -> tipo ID actualiza_id crea_var lista_dec . vars_lista PUNTCOM mas_vars
    (23) vars_lista -> . COMA ID actualiza_id crea_var lista_dec vars_lista
    (24) vars_lista -> .

    COMA            shift and go to state 44
    PUNTCOM         reduce using rule 24 (vars_lista -> .)

    vars_lista                     shift and go to state 309

state 256

    (105) asignacion -> ID actualiza_id lista ASIG exp_input . PUNTCOM

    PUNTCOM         shift and go to state 310


state 257

    (106) exp_input -> expresion .

    PUNTCOM         reduce using rule 106 (exp_input -> expresion .)


state 258

    (107) exp_input -> INPUT . PARIZQ PARDER

    PARIZQ          shift and go to state 311


state 259

    (95) func_call -> ID actualiza_id actualiza_func PARIZQ args . gen_era PARDER gen_gosub
    (98) gen_era -> .

    PARDER          reduce using rule 98 (gen_era -> .)

    gen_era                        shift and go to state 312

state 260

    (100) args -> expresion . asig_par arg
    (104) asig_par -> .

    COMA            reduce using rule 104 (asig_par -> .)
    PARDER          reduce using rule 104 (asig_par -> .)

    asig_par                       shift and go to state 313

state 261

    (81) lista -> CORIZQ push_dim expresion . CORDER matriz

    CORDER          shift and go to state 314


state 262

    (108) condicion -> IF PARIZQ expresion fin_exp PARDER . bloque else_bloque fin_cond
    (94) bloque -> . BRAIZQ estatutos BRADER

    BRAIZQ          shift and go to state 316

    bloque                         shift and go to state 315

state 263

    (117) escritura -> PRINT PARIZQ arg_escritura PARDER PUNTCOM .

    ID              reduce using rule 117 (escritura -> PRINT PARIZQ arg_escritura PARDER PUNTCOM .)
    IF              reduce using rule 117 (escritura -> PRINT PARIZQ arg_escritura PARDER PUNTCOM .)
    PRINT           reduce using rule 117 (escritura -> PRINT PARIZQ arg_escritura PARDER PUNTCOM .)
    REPEAT          reduce using rule 117 (escritura -> PRINT PARIZQ arg_escritura PARDER PUNTCOM .)
    FORWARD         reduce using rule 117 (escritura -> PRINT PARIZQ arg_escritura PARDER PUNTCOM .)
    BACKWARD        reduce using rule 117 (escritura -> PRINT PARIZQ arg_escritura PARDER PUNTCOM .)
    LEFT            reduce using rule 117 (escritura -> PRINT PARIZQ arg_escritura PARDER PUNTCOM .)
    RIGHT           reduce using rule 117 (escritura -> PRINT PARIZQ arg_escritura PARDER PUNTCOM .)
    TURN            reduce using rule 117 (escritura -> PRINT PARIZQ arg_escritura PARDER PUNTCOM .)
    SIZE            reduce using rule 117 (escritura -> PRINT PARIZQ arg_escritura PARDER PUNTCOM .)
    CIRCLE          reduce using rule 117 (escritura -> PRINT PARIZQ arg_escritura PARDER PUNTCOM .)
    TRIANGLE        reduce using rule 117 (escritura -> PRINT PARIZQ arg_escritura PARDER PUNTCOM .)
    SQUARE          reduce using rule 117 (escritura -> PRINT PARIZQ arg_escritura PARDER PUNTCOM .)
    NGON            reduce using rule 117 (escritura -> PRINT PARIZQ arg_escritura PARDER PUNTCOM .)
    ARC             reduce using rule 117 (escritura -> PRINT PARIZQ arg_escritura PARDER PUNTCOM .)
    UP              reduce using rule 117 (escritura -> PRINT PARIZQ arg_escritura PARDER PUNTCOM .)
    DOWN            reduce using rule 117 (escritura -> PRINT PARIZQ arg_escritura PARDER PUNTCOM .)
    COLOR           reduce using rule 117 (escritura -> PRINT PARIZQ arg_escritura PARDER PUNTCOM .)
    FILLED_CIRCLE   reduce using rule 117 (escritura -> PRINT PARIZQ arg_escritura PARDER PUNTCOM .)
    FILLED_SQUARE   reduce using rule 117 (escritura -> PRINT PARIZQ arg_escritura PARDER PUNTCOM .)
    FILLED_TRIANGLE reduce using rule 117 (escritura -> PRINT PARIZQ arg_escritura PARDER PUNTCOM .)
    FILLED_NGON     reduce using rule 117 (escritura -> PRINT PARIZQ arg_escritura PARDER PUNTCOM .)
    FILLER_COLOR    reduce using rule 117 (escritura -> PRINT PARIZQ arg_escritura PARDER PUNTCOM .)
    RETURN          reduce using rule 117 (escritura -> PRINT PARIZQ arg_escritura PARDER PUNTCOM .)
    BRADER          reduce using rule 117 (escritura -> PRINT PARIZQ arg_escritura PARDER PUNTCOM .)


state 264

    (118) arg_escritura -> expresion fin_arg args_escritura .

    PARDER          reduce using rule 118 (arg_escritura -> expresion fin_arg args_escritura .)


state 265

    (120) args_escritura -> COMA . arg_escritura
    (118) arg_escritura -> . expresion fin_arg args_escritura
    (119) arg_escritura -> . CTE_STR print_string args_escritura
    (47) expresion -> . expr or_expr
    (50) expr -> . exp and_exp
    (53) exp -> . e rel_e
    (61) e -> . termino suma_resta
    (65) termino -> . factor mult_div
    (70) factor -> . PARIZQ push_paren e PARDER pop_paren
    (71) factor -> . var
    (72) factor -> . RESTA neg_push var neg_pop
    (75) var -> . ID actualiza_id var_func_call
    (76) var -> . CTE_I
    (77) var -> . CTE_F
    (78) var -> . error

    CTE_STR         shift and go to state 147
    PARIZQ          shift and go to state 133
    RESTA           shift and go to state 135
    ID              shift and go to state 136
    CTE_I           shift and go to state 137
    CTE_F           shift and go to state 138
    error           shift and go to state 139

    arg_escritura                  shift and go to state 317
    expresion                      shift and go to state 146
    expr                           shift and go to state 128
    exp                            shift and go to state 129
    e                              shift and go to state 130
    termino                        shift and go to state 131
    factor                         shift and go to state 132
    var                            shift and go to state 134

state 266

    (119) arg_escritura -> CTE_STR print_string args_escritura .

    PARDER          reduce using rule 119 (arg_escritura -> CTE_STR print_string args_escritura .)


state 267

    (114) ciclo -> REPEAT push_cont PARIZQ expresion fin_exp . PARDER bloque fin_repeat

    PARDER          shift and go to state 318


state 268

    (127) instruccion -> FORWARD actualiza_instr PARIZQ expresion PARDER . fin_instr1 PUNTCOM
    (155) fin_instr1 -> .

    PUNTCOM         reduce using rule 155 (fin_instr1 -> .)

    fin_instr1                     shift and go to state 319

state 269

    (128) instruccion -> BACKWARD actualiza_instr PARIZQ expresion PARDER . fin_instr1 PUNTCOM
    (155) fin_instr1 -> .

    PUNTCOM         reduce using rule 155 (fin_instr1 -> .)

    fin_instr1                     shift and go to state 320

state 270

    (129) instruccion -> LEFT actualiza_instr PARIZQ expresion PARDER . fin_instr1 PUNTCOM
    (155) fin_instr1 -> .

    PUNTCOM         reduce using rule 155 (fin_instr1 -> .)

    fin_instr1                     shift and go to state 321

state 271

    (130) instruccion -> RIGHT actualiza_instr PARIZQ expresion PARDER . fin_instr1 PUNTCOM
    (155) fin_instr1 -> .

    PUNTCOM         reduce using rule 155 (fin_instr1 -> .)

    fin_instr1                     shift and go to state 322

state 272

    (131) instruccion -> TURN actualiza_instr PARIZQ expresion PARDER . fin_instr1 PUNTCOM
    (155) fin_instr1 -> .

    PUNTCOM         reduce using rule 155 (fin_instr1 -> .)

    fin_instr1                     shift and go to state 323

state 273

    (132) instruccion -> SIZE actualiza_instr PARIZQ expresion PARDER . fin_instr1 PUNTCOM
    (155) fin_instr1 -> .

    PUNTCOM         reduce using rule 155 (fin_instr1 -> .)

    fin_instr1                     shift and go to state 324

state 274

    (133) instruccion -> CIRCLE actualiza_instr PARIZQ expresion PARDER . fin_instr1 transform PUNTCOM
    (155) fin_instr1 -> .

    PUNTO           reduce using rule 155 (fin_instr1 -> .)
    PUNTCOM         reduce using rule 155 (fin_instr1 -> .)

    fin_instr1                     shift and go to state 325

state 275

    (134) instruccion -> TRIANGLE actualiza_instr PARIZQ expresion PARDER . fin_instr1 transform PUNTCOM
    (155) fin_instr1 -> .

    PUNTO           reduce using rule 155 (fin_instr1 -> .)
    PUNTCOM         reduce using rule 155 (fin_instr1 -> .)

    fin_instr1                     shift and go to state 326

state 276

    (135) instruccion -> SQUARE actualiza_instr PARIZQ expresion PARDER . fin_instr1 transform PUNTCOM
    (155) fin_instr1 -> .

    PUNTO           reduce using rule 155 (fin_instr1 -> .)
    PUNTCOM         reduce using rule 155 (fin_instr1 -> .)

    fin_instr1                     shift and go to state 327

state 277

    (136) instruccion -> NGON actualiza_instr PARIZQ expresion PARDER . fin_instr1 transform PUNTCOM
    (155) fin_instr1 -> .

    PUNTO           reduce using rule 155 (fin_instr1 -> .)
    PUNTCOM         reduce using rule 155 (fin_instr1 -> .)

    fin_instr1                     shift and go to state 328

state 278

    (137) instruccion -> ARC actualiza_instr PARIZQ expresion PARDER . fin_instr1 trans PUNTCOM
    (155) fin_instr1 -> .

    PUNTO           reduce using rule 155 (fin_instr1 -> .)
    PUNTCOM         reduce using rule 155 (fin_instr1 -> .)

    fin_instr1                     shift and go to state 329

state 279

    (138) instruccion -> UP actualiza_instr PARIZQ PARDER fin_instr . PUNTCOM

    PUNTCOM         shift and go to state 330


state 280

    (139) instruccion -> DOWN actualiza_instr PARIZQ PARDER fin_instr . PUNTCOM

    PUNTCOM         shift and go to state 331


state 281

    (140) instruccion -> COLOR actualiza_instr PARIZQ expresion COMA . expresion COMA expresion PARDER fin_color PUNTCOM
    (47) expresion -> . expr or_expr
    (50) expr -> . exp and_exp
    (53) exp -> . e rel_e
    (61) e -> . termino suma_resta
    (65) termino -> . factor mult_div
    (70) factor -> . PARIZQ push_paren e PARDER pop_paren
    (71) factor -> . var
    (72) factor -> . RESTA neg_push var neg_pop
    (75) var -> . ID actualiza_id var_func_call
    (76) var -> . CTE_I
    (77) var -> . CTE_F
    (78) var -> . error

    PARIZQ          shift and go to state 133
    RESTA           shift and go to state 135
    ID              shift and go to state 136
    CTE_I           shift and go to state 137
    CTE_F           shift and go to state 138
    error           shift and go to state 139

    expresion                      shift and go to state 332
    expr                           shift and go to state 128
    exp                            shift and go to state 129
    e                              shift and go to state 130
    termino                        shift and go to state 131
    factor                         shift and go to state 132
    var                            shift and go to state 134

state 282

    (141) instruccion -> FILLED_CIRCLE actualiza_instr PARIZQ expresion PARDER . fin_instr1 transform PUNTCOM
    (155) fin_instr1 -> .

    PUNTO           reduce using rule 155 (fin_instr1 -> .)
    PUNTCOM         reduce using rule 155 (fin_instr1 -> .)

    fin_instr1                     shift and go to state 333

state 283

    (142) instruccion -> FILLED_SQUARE actualiza_instr PARIZQ expresion PARDER . fin_instr1 transform PUNTCOM
    (155) fin_instr1 -> .

    PUNTO           reduce using rule 155 (fin_instr1 -> .)
    PUNTCOM         reduce using rule 155 (fin_instr1 -> .)

    fin_instr1                     shift and go to state 334

state 284

    (143) instruccion -> FILLED_TRIANGLE actualiza_instr PARIZQ expresion PARDER . fin_instr1 transform PUNTCOM
    (155) fin_instr1 -> .

    PUNTO           reduce using rule 155 (fin_instr1 -> .)
    PUNTCOM         reduce using rule 155 (fin_instr1 -> .)

    fin_instr1                     shift and go to state 335

state 285

    (144) instruccion -> FILLED_NGON actualiza_instr PARIZQ expresion PARDER . fin_instr1 transform PUNTCOM
    (155) fin_instr1 -> .

    PUNTO           reduce using rule 155 (fin_instr1 -> .)
    PUNTCOM         reduce using rule 155 (fin_instr1 -> .)

    fin_instr1                     shift and go to state 336

state 286

    (145) instruccion -> FILLER_COLOR actualiza_instr PARIZQ expresion COMA . expresion COMA expresion PARDER fin_color PUNTCOM
    (47) expresion -> . expr or_expr
    (50) expr -> . exp and_exp
    (53) exp -> . e rel_e
    (61) e -> . termino suma_resta
    (65) termino -> . factor mult_div
    (70) factor -> . PARIZQ push_paren e PARDER pop_paren
    (71) factor -> . var
    (72) factor -> . RESTA neg_push var neg_pop
    (75) var -> . ID actualiza_id var_func_call
    (76) var -> . CTE_I
    (77) var -> . CTE_F
    (78) var -> . error

    PARIZQ          shift and go to state 133
    RESTA           shift and go to state 135
    ID              shift and go to state 136
    CTE_I           shift and go to state 137
    CTE_F           shift and go to state 138
    error           shift and go to state 139

    expresion                      shift and go to state 337
    expr                           shift and go to state 128
    exp                            shift and go to state 129
    e                              shift and go to state 130
    termino                        shift and go to state 131
    factor                         shift and go to state 132
    var                            shift and go to state 134

state 287

    (29) func -> tipo ID actualiza_id . crea_func PARIZQ pars PARDER bloque_func
    (40) crea_func -> .

    PARIZQ          reduce using rule 40 (crea_func -> .)

    crea_func                      shift and go to state 338

state 288

    (30) func -> VOID tipo_void ID . actualiza_id crea_func PARIZQ pars PARDER bloque_func
    (8) actualiza_id -> .

    PARIZQ          reduce using rule 8 (actualiza_id -> .)

    actualiza_id                   shift and go to state 339

state 289

    (34) pars -> tipo ID actualiza_id crea_var gen_dir par .

    PARDER          reduce using rule 34 (pars -> tipo ID actualiza_id crea_var gen_dir par .)


state 290

    (36) par -> COMA . tipo ID actualiza_id crea_var gen_dir par
    (124) tipo -> . INT actualiza_tipo
    (125) tipo -> . FLOAT actualiza_tipo

    INT             shift and go to state 12
    FLOAT           shift and go to state 13

    tipo                           shift and go to state 340

state 291

    (23) vars_lista -> COMA ID actualiza_id crea_var lista_dec vars_lista .

    PUNTCOM         reduce using rule 23 (vars_lista -> COMA ID actualiza_id crea_var lista_dec vars_lista .)


state 292

    (4) ajustes -> CANVAS BRAIZQ WIDTH CTE_I PUNTCOM HEIGHT CTE_I PUNTCOM BACKGROUND CTE_I COMA CTE_I . COMA CTE_I PUNTCOM BRADER

    COMA            shift and go to state 341


state 293

    (48) or_expr -> OR push_oper expresion . pop_or
    (42) pop_or -> .

    PUNTCOM         reduce using rule 42 (pop_or -> .)
    PARDER          reduce using rule 42 (pop_or -> .)
    COMA            reduce using rule 42 (pop_or -> .)
    CORDER          reduce using rule 42 (pop_or -> .)

    pop_or                         shift and go to state 342

state 294

    (51) and_exp -> AND push_oper expr . pop_and
    (43) pop_and -> .

    OR              reduce using rule 43 (pop_and -> .)
    PUNTCOM         reduce using rule 43 (pop_and -> .)
    PARDER          reduce using rule 43 (pop_and -> .)
    COMA            reduce using rule 43 (pop_and -> .)
    CORDER          reduce using rule 43 (pop_and -> .)

    pop_and                        shift and go to state 343

state 295

    (54) rel_e -> DIF push_oper exp . pop_rel_e
    (44) pop_rel_e -> .

    AND             reduce using rule 44 (pop_rel_e -> .)
    OR              reduce using rule 44 (pop_rel_e -> .)
    PUNTCOM         reduce using rule 44 (pop_rel_e -> .)
    PARDER          reduce using rule 44 (pop_rel_e -> .)
    COMA            reduce using rule 44 (pop_rel_e -> .)
    CORDER          reduce using rule 44 (pop_rel_e -> .)

    pop_rel_e                      shift and go to state 344

state 296

    (55) rel_e -> MENOR push_oper exp . pop_rel_e
    (44) pop_rel_e -> .

    AND             reduce using rule 44 (pop_rel_e -> .)
    OR              reduce using rule 44 (pop_rel_e -> .)
    PUNTCOM         reduce using rule 44 (pop_rel_e -> .)
    PARDER          reduce using rule 44 (pop_rel_e -> .)
    COMA            reduce using rule 44 (pop_rel_e -> .)
    CORDER          reduce using rule 44 (pop_rel_e -> .)

    pop_rel_e                      shift and go to state 345

state 297

    (56) rel_e -> MAYOR push_oper exp . pop_rel_e
    (44) pop_rel_e -> .

    AND             reduce using rule 44 (pop_rel_e -> .)
    OR              reduce using rule 44 (pop_rel_e -> .)
    PUNTCOM         reduce using rule 44 (pop_rel_e -> .)
    PARDER          reduce using rule 44 (pop_rel_e -> .)
    COMA            reduce using rule 44 (pop_rel_e -> .)
    CORDER          reduce using rule 44 (pop_rel_e -> .)

    pop_rel_e                      shift and go to state 346

state 298

    (57) rel_e -> MENIGUAL push_oper exp . pop_rel_e
    (44) pop_rel_e -> .

    AND             reduce using rule 44 (pop_rel_e -> .)
    OR              reduce using rule 44 (pop_rel_e -> .)
    PUNTCOM         reduce using rule 44 (pop_rel_e -> .)
    PARDER          reduce using rule 44 (pop_rel_e -> .)
    COMA            reduce using rule 44 (pop_rel_e -> .)
    CORDER          reduce using rule 44 (pop_rel_e -> .)

    pop_rel_e                      shift and go to state 347

state 299

    (58) rel_e -> MAYIGUAL push_oper exp . pop_rel_e
    (44) pop_rel_e -> .

    AND             reduce using rule 44 (pop_rel_e -> .)
    OR              reduce using rule 44 (pop_rel_e -> .)
    PUNTCOM         reduce using rule 44 (pop_rel_e -> .)
    PARDER          reduce using rule 44 (pop_rel_e -> .)
    COMA            reduce using rule 44 (pop_rel_e -> .)
    CORDER          reduce using rule 44 (pop_rel_e -> .)

    pop_rel_e                      shift and go to state 348

state 300

    (59) rel_e -> IGUAL push_oper exp . pop_rel_e
    (44) pop_rel_e -> .

    AND             reduce using rule 44 (pop_rel_e -> .)
    OR              reduce using rule 44 (pop_rel_e -> .)
    PUNTCOM         reduce using rule 44 (pop_rel_e -> .)
    PARDER          reduce using rule 44 (pop_rel_e -> .)
    COMA            reduce using rule 44 (pop_rel_e -> .)
    CORDER          reduce using rule 44 (pop_rel_e -> .)

    pop_rel_e                      shift and go to state 349

state 301

    (62) suma_resta -> SUMA push_oper e . pop_suma_resta
    (45) pop_suma_resta -> .

    DIF             reduce using rule 45 (pop_suma_resta -> .)
    MENOR           reduce using rule 45 (pop_suma_resta -> .)
    MAYOR           reduce using rule 45 (pop_suma_resta -> .)
    MENIGUAL        reduce using rule 45 (pop_suma_resta -> .)
    MAYIGUAL        reduce using rule 45 (pop_suma_resta -> .)
    IGUAL           reduce using rule 45 (pop_suma_resta -> .)
    AND             reduce using rule 45 (pop_suma_resta -> .)
    OR              reduce using rule 45 (pop_suma_resta -> .)
    PUNTCOM         reduce using rule 45 (pop_suma_resta -> .)
    PARDER          reduce using rule 45 (pop_suma_resta -> .)
    COMA            reduce using rule 45 (pop_suma_resta -> .)
    CORDER          reduce using rule 45 (pop_suma_resta -> .)

    pop_suma_resta                 shift and go to state 350

state 302

    (63) suma_resta -> RESTA push_oper e . pop_suma_resta
    (45) pop_suma_resta -> .

    DIF             reduce using rule 45 (pop_suma_resta -> .)
    MENOR           reduce using rule 45 (pop_suma_resta -> .)
    MAYOR           reduce using rule 45 (pop_suma_resta -> .)
    MENIGUAL        reduce using rule 45 (pop_suma_resta -> .)
    MAYIGUAL        reduce using rule 45 (pop_suma_resta -> .)
    IGUAL           reduce using rule 45 (pop_suma_resta -> .)
    AND             reduce using rule 45 (pop_suma_resta -> .)
    OR              reduce using rule 45 (pop_suma_resta -> .)
    PUNTCOM         reduce using rule 45 (pop_suma_resta -> .)
    PARDER          reduce using rule 45 (pop_suma_resta -> .)
    COMA            reduce using rule 45 (pop_suma_resta -> .)
    CORDER          reduce using rule 45 (pop_suma_resta -> .)

    pop_suma_resta                 shift and go to state 351

state 303

    (66) mult_div -> MULT push_oper termino . pop_mult_div
    (46) pop_mult_div -> .

    SUMA            reduce using rule 46 (pop_mult_div -> .)
    RESTA           reduce using rule 46 (pop_mult_div -> .)
    DIF             reduce using rule 46 (pop_mult_div -> .)
    MENOR           reduce using rule 46 (pop_mult_div -> .)
    MAYOR           reduce using rule 46 (pop_mult_div -> .)
    MENIGUAL        reduce using rule 46 (pop_mult_div -> .)
    MAYIGUAL        reduce using rule 46 (pop_mult_div -> .)
    IGUAL           reduce using rule 46 (pop_mult_div -> .)
    AND             reduce using rule 46 (pop_mult_div -> .)
    OR              reduce using rule 46 (pop_mult_div -> .)
    PUNTCOM         reduce using rule 46 (pop_mult_div -> .)
    PARDER          reduce using rule 46 (pop_mult_div -> .)
    COMA            reduce using rule 46 (pop_mult_div -> .)
    CORDER          reduce using rule 46 (pop_mult_div -> .)

    pop_mult_div                   shift and go to state 352

state 304

    (67) mult_div -> DIV push_oper termino . pop_mult_div
    (46) pop_mult_div -> .

    SUMA            reduce using rule 46 (pop_mult_div -> .)
    RESTA           reduce using rule 46 (pop_mult_div -> .)
    DIF             reduce using rule 46 (pop_mult_div -> .)
    MENOR           reduce using rule 46 (pop_mult_div -> .)
    MAYOR           reduce using rule 46 (pop_mult_div -> .)
    MENIGUAL        reduce using rule 46 (pop_mult_div -> .)
    MAYIGUAL        reduce using rule 46 (pop_mult_div -> .)
    IGUAL           reduce using rule 46 (pop_mult_div -> .)
    AND             reduce using rule 46 (pop_mult_div -> .)
    OR              reduce using rule 46 (pop_mult_div -> .)
    PUNTCOM         reduce using rule 46 (pop_mult_div -> .)
    PARDER          reduce using rule 46 (pop_mult_div -> .)
    COMA            reduce using rule 46 (pop_mult_div -> .)
    CORDER          reduce using rule 46 (pop_mult_div -> .)

    pop_mult_div                   shift and go to state 353

state 305

    (68) mult_div -> MOD push_oper termino . pop_mult_div
    (46) pop_mult_div -> .

    SUMA            reduce using rule 46 (pop_mult_div -> .)
    RESTA           reduce using rule 46 (pop_mult_div -> .)
    DIF             reduce using rule 46 (pop_mult_div -> .)
    MENOR           reduce using rule 46 (pop_mult_div -> .)
    MAYOR           reduce using rule 46 (pop_mult_div -> .)
    MENIGUAL        reduce using rule 46 (pop_mult_div -> .)
    MAYIGUAL        reduce using rule 46 (pop_mult_div -> .)
    IGUAL           reduce using rule 46 (pop_mult_div -> .)
    AND             reduce using rule 46 (pop_mult_div -> .)
    OR              reduce using rule 46 (pop_mult_div -> .)
    PUNTCOM         reduce using rule 46 (pop_mult_div -> .)
    PARDER          reduce using rule 46 (pop_mult_div -> .)
    COMA            reduce using rule 46 (pop_mult_div -> .)
    CORDER          reduce using rule 46 (pop_mult_div -> .)

    pop_mult_div                   shift and go to state 354

state 306

    (70) factor -> PARIZQ push_paren e PARDER . pop_paren
    (87) pop_paren -> .

    MULT            reduce using rule 87 (pop_paren -> .)
    DIV             reduce using rule 87 (pop_paren -> .)
    MOD             reduce using rule 87 (pop_paren -> .)
    SUMA            reduce using rule 87 (pop_paren -> .)
    RESTA           reduce using rule 87 (pop_paren -> .)
    DIF             reduce using rule 87 (pop_paren -> .)
    MENOR           reduce using rule 87 (pop_paren -> .)
    MAYOR           reduce using rule 87 (pop_paren -> .)
    MENIGUAL        reduce using rule 87 (pop_paren -> .)
    MAYIGUAL        reduce using rule 87 (pop_paren -> .)
    IGUAL           reduce using rule 87 (pop_paren -> .)
    AND             reduce using rule 87 (pop_paren -> .)
    OR              reduce using rule 87 (pop_paren -> .)
    PUNTCOM         reduce using rule 87 (pop_paren -> .)
    PARDER          reduce using rule 87 (pop_paren -> .)
    COMA            reduce using rule 87 (pop_paren -> .)
    CORDER          reduce using rule 87 (pop_paren -> .)

    pop_paren                      shift and go to state 355

state 307

    (72) factor -> RESTA neg_push var neg_pop .

    MULT            reduce using rule 72 (factor -> RESTA neg_push var neg_pop .)
    DIV             reduce using rule 72 (factor -> RESTA neg_push var neg_pop .)
    MOD             reduce using rule 72 (factor -> RESTA neg_push var neg_pop .)
    SUMA            reduce using rule 72 (factor -> RESTA neg_push var neg_pop .)
    RESTA           reduce using rule 72 (factor -> RESTA neg_push var neg_pop .)
    DIF             reduce using rule 72 (factor -> RESTA neg_push var neg_pop .)
    MENOR           reduce using rule 72 (factor -> RESTA neg_push var neg_pop .)
    MAYOR           reduce using rule 72 (factor -> RESTA neg_push var neg_pop .)
    MENIGUAL        reduce using rule 72 (factor -> RESTA neg_push var neg_pop .)
    MAYIGUAL        reduce using rule 72 (factor -> RESTA neg_push var neg_pop .)
    IGUAL           reduce using rule 72 (factor -> RESTA neg_push var neg_pop .)
    AND             reduce using rule 72 (factor -> RESTA neg_push var neg_pop .)
    OR              reduce using rule 72 (factor -> RESTA neg_push var neg_pop .)
    PUNTCOM         reduce using rule 72 (factor -> RESTA neg_push var neg_pop .)
    PARDER          reduce using rule 72 (factor -> RESTA neg_push var neg_pop .)
    COMA            reduce using rule 72 (factor -> RESTA neg_push var neg_pop .)
    CORDER          reduce using rule 72 (factor -> RESTA neg_push var neg_pop .)


state 308

    (96) var_func_call -> PARIZQ actualiza_func . args gen_era PARDER gen_gosub
    (100) args -> . expresion asig_par arg
    (101) args -> .
    (47) expresion -> . expr or_expr
    (50) expr -> . exp and_exp
    (53) exp -> . e rel_e
    (61) e -> . termino suma_resta
    (65) termino -> . factor mult_div
    (70) factor -> . PARIZQ push_paren e PARDER pop_paren
    (71) factor -> . var
    (72) factor -> . RESTA neg_push var neg_pop
    (75) var -> . ID actualiza_id var_func_call
    (76) var -> . CTE_I
    (77) var -> . CTE_F
    (78) var -> . error

    PARDER          reduce using rule 101 (args -> .)
    PARIZQ          shift and go to state 133
    RESTA           shift and go to state 135
    ID              shift and go to state 136
    CTE_I           shift and go to state 137
    CTE_F           shift and go to state 138
    error           shift and go to state 139

    args                           shift and go to state 356
    expresion                      shift and go to state 260
    expr                           shift and go to state 128
    exp                            shift and go to state 129
    e                              shift and go to state 130
    termino                        shift and go to state 131
    factor                         shift and go to state 132
    var                            shift and go to state 134

state 309

    (22) vars -> tipo ID actualiza_id crea_var lista_dec vars_lista . PUNTCOM mas_vars

    PUNTCOM         shift and go to state 357


state 310

    (105) asignacion -> ID actualiza_id lista ASIG exp_input PUNTCOM .

    ID              reduce using rule 105 (asignacion -> ID actualiza_id lista ASIG exp_input PUNTCOM .)
    IF              reduce using rule 105 (asignacion -> ID actualiza_id lista ASIG exp_input PUNTCOM .)
    PRINT           reduce using rule 105 (asignacion -> ID actualiza_id lista ASIG exp_input PUNTCOM .)
    REPEAT          reduce using rule 105 (asignacion -> ID actualiza_id lista ASIG exp_input PUNTCOM .)
    FORWARD         reduce using rule 105 (asignacion -> ID actualiza_id lista ASIG exp_input PUNTCOM .)
    BACKWARD        reduce using rule 105 (asignacion -> ID actualiza_id lista ASIG exp_input PUNTCOM .)
    LEFT            reduce using rule 105 (asignacion -> ID actualiza_id lista ASIG exp_input PUNTCOM .)
    RIGHT           reduce using rule 105 (asignacion -> ID actualiza_id lista ASIG exp_input PUNTCOM .)
    TURN            reduce using rule 105 (asignacion -> ID actualiza_id lista ASIG exp_input PUNTCOM .)
    SIZE            reduce using rule 105 (asignacion -> ID actualiza_id lista ASIG exp_input PUNTCOM .)
    CIRCLE          reduce using rule 105 (asignacion -> ID actualiza_id lista ASIG exp_input PUNTCOM .)
    TRIANGLE        reduce using rule 105 (asignacion -> ID actualiza_id lista ASIG exp_input PUNTCOM .)
    SQUARE          reduce using rule 105 (asignacion -> ID actualiza_id lista ASIG exp_input PUNTCOM .)
    NGON            reduce using rule 105 (asignacion -> ID actualiza_id lista ASIG exp_input PUNTCOM .)
    ARC             reduce using rule 105 (asignacion -> ID actualiza_id lista ASIG exp_input PUNTCOM .)
    UP              reduce using rule 105 (asignacion -> ID actualiza_id lista ASIG exp_input PUNTCOM .)
    DOWN            reduce using rule 105 (asignacion -> ID actualiza_id lista ASIG exp_input PUNTCOM .)
    COLOR           reduce using rule 105 (asignacion -> ID actualiza_id lista ASIG exp_input PUNTCOM .)
    FILLED_CIRCLE   reduce using rule 105 (asignacion -> ID actualiza_id lista ASIG exp_input PUNTCOM .)
    FILLED_SQUARE   reduce using rule 105 (asignacion -> ID actualiza_id lista ASIG exp_input PUNTCOM .)
    FILLED_TRIANGLE reduce using rule 105 (asignacion -> ID actualiza_id lista ASIG exp_input PUNTCOM .)
    FILLED_NGON     reduce using rule 105 (asignacion -> ID actualiza_id lista ASIG exp_input PUNTCOM .)
    FILLER_COLOR    reduce using rule 105 (asignacion -> ID actualiza_id lista ASIG exp_input PUNTCOM .)
    RETURN          reduce using rule 105 (asignacion -> ID actualiza_id lista ASIG exp_input PUNTCOM .)
    BRADER          reduce using rule 105 (asignacion -> ID actualiza_id lista ASIG exp_input PUNTCOM .)


state 311

    (107) exp_input -> INPUT PARIZQ . PARDER

    PARDER          shift and go to state 358


state 312

    (95) func_call -> ID actualiza_id actualiza_func PARIZQ args gen_era . PARDER gen_gosub

    PARDER          shift and go to state 359


state 313

    (100) args -> expresion asig_par . arg
    (102) arg -> . COMA args
    (103) arg -> .

    COMA            shift and go to state 361
    PARDER          reduce using rule 103 (arg -> .)

    arg                            shift and go to state 360

state 314

    (81) lista -> CORIZQ push_dim expresion CORDER . matriz
    (83) matriz -> . CORIZQ expresion CORDER pop_dim
    (84) matriz -> . pop_dim
    (80) pop_dim -> .

    CORIZQ          shift and go to state 362
    ASIG            reduce using rule 80 (pop_dim -> .)
    MULT            reduce using rule 80 (pop_dim -> .)
    DIV             reduce using rule 80 (pop_dim -> .)
    MOD             reduce using rule 80 (pop_dim -> .)
    SUMA            reduce using rule 80 (pop_dim -> .)
    RESTA           reduce using rule 80 (pop_dim -> .)
    DIF             reduce using rule 80 (pop_dim -> .)
    MENOR           reduce using rule 80 (pop_dim -> .)
    MAYOR           reduce using rule 80 (pop_dim -> .)
    MENIGUAL        reduce using rule 80 (pop_dim -> .)
    MAYIGUAL        reduce using rule 80 (pop_dim -> .)
    IGUAL           reduce using rule 80 (pop_dim -> .)
    AND             reduce using rule 80 (pop_dim -> .)
    OR              reduce using rule 80 (pop_dim -> .)
    PUNTCOM         reduce using rule 80 (pop_dim -> .)
    PARDER          reduce using rule 80 (pop_dim -> .)
    COMA            reduce using rule 80 (pop_dim -> .)
    CORDER          reduce using rule 80 (pop_dim -> .)

    matriz                         shift and go to state 363
    pop_dim                        shift and go to state 364

state 315

    (108) condicion -> IF PARIZQ expresion fin_exp PARDER bloque . else_bloque fin_cond
    (109) else_bloque -> . ELSE inicio_else bloque
    (110) else_bloque -> .

    ELSE            shift and go to state 366
    ID              reduce using rule 110 (else_bloque -> .)
    IF              reduce using rule 110 (else_bloque -> .)
    PRINT           reduce using rule 110 (else_bloque -> .)
    REPEAT          reduce using rule 110 (else_bloque -> .)
    FORWARD         reduce using rule 110 (else_bloque -> .)
    BACKWARD        reduce using rule 110 (else_bloque -> .)
    LEFT            reduce using rule 110 (else_bloque -> .)
    RIGHT           reduce using rule 110 (else_bloque -> .)
    TURN            reduce using rule 110 (else_bloque -> .)
    SIZE            reduce using rule 110 (else_bloque -> .)
    CIRCLE          reduce using rule 110 (else_bloque -> .)
    TRIANGLE        reduce using rule 110 (else_bloque -> .)
    SQUARE          reduce using rule 110 (else_bloque -> .)
    NGON            reduce using rule 110 (else_bloque -> .)
    ARC             reduce using rule 110 (else_bloque -> .)
    UP              reduce using rule 110 (else_bloque -> .)
    DOWN            reduce using rule 110 (else_bloque -> .)
    COLOR           reduce using rule 110 (else_bloque -> .)
    FILLED_CIRCLE   reduce using rule 110 (else_bloque -> .)
    FILLED_SQUARE   reduce using rule 110 (else_bloque -> .)
    FILLED_TRIANGLE reduce using rule 110 (else_bloque -> .)
    FILLED_NGON     reduce using rule 110 (else_bloque -> .)
    FILLER_COLOR    reduce using rule 110 (else_bloque -> .)
    RETURN          reduce using rule 110 (else_bloque -> .)
    BRADER          reduce using rule 110 (else_bloque -> .)

    else_bloque                    shift and go to state 365

state 316

    (94) bloque -> BRAIZQ . estatutos BRADER
    (20) estatutos -> . estatuto estatutos
    (21) estatutos -> .
    (88) estatuto -> . asignacion
    (89) estatuto -> . condicion
    (90) estatuto -> . escritura
    (91) estatuto -> . ciclo
    (92) estatuto -> . instruccion
    (93) estatuto -> . func_call PUNTCOM
    (105) asignacion -> . ID actualiza_id lista ASIG exp_input PUNTCOM
    (108) condicion -> . IF PARIZQ expresion fin_exp PARDER bloque else_bloque fin_cond
    (117) escritura -> . PRINT PARIZQ arg_escritura PARDER PUNTCOM
    (114) ciclo -> . REPEAT push_cont PARIZQ expresion fin_exp PARDER bloque fin_repeat
    (127) instruccion -> . FORWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM
    (128) instruccion -> . BACKWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM
    (129) instruccion -> . LEFT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM
    (130) instruccion -> . RIGHT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM
    (131) instruccion -> . TURN actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM
    (132) instruccion -> . SIZE actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM
    (133) instruccion -> . CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM
    (134) instruccion -> . TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM
    (135) instruccion -> . SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM
    (136) instruccion -> . NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM
    (137) instruccion -> . ARC actualiza_instr PARIZQ expresion PARDER fin_instr1 trans PUNTCOM
    (138) instruccion -> . UP actualiza_instr PARIZQ PARDER fin_instr PUNTCOM
    (139) instruccion -> . DOWN actualiza_instr PARIZQ PARDER fin_instr PUNTCOM
    (140) instruccion -> . COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM
    (141) instruccion -> . FILLED_CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM
    (142) instruccion -> . FILLED_SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM
    (143) instruccion -> . FILLED_TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM
    (144) instruccion -> . FILLED_NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM
    (145) instruccion -> . FILLER_COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM
    (95) func_call -> . ID actualiza_id actualiza_func PARIZQ args gen_era PARDER gen_gosub

    BRADER          reduce using rule 21 (estatutos -> .)
    ID              shift and go to state 52
    IF              shift and go to state 60
    PRINT           shift and go to state 61
    REPEAT          shift and go to state 62
    FORWARD         shift and go to state 63
    BACKWARD        shift and go to state 64
    LEFT            shift and go to state 65
    RIGHT           shift and go to state 66
    TURN            shift and go to state 67
    SIZE            shift and go to state 68
    CIRCLE          shift and go to state 69
    TRIANGLE        shift and go to state 70
    SQUARE          shift and go to state 71
    NGON            shift and go to state 72
    ARC             shift and go to state 73
    UP              shift and go to state 74
    DOWN            shift and go to state 75
    COLOR           shift and go to state 76
    FILLED_CIRCLE   shift and go to state 77
    FILLED_SQUARE   shift and go to state 78
    FILLED_TRIANGLE shift and go to state 79
    FILLED_NGON     shift and go to state 80
    FILLER_COLOR    shift and go to state 81

    estatutos                      shift and go to state 367
    estatuto                       shift and go to state 53
    asignacion                     shift and go to state 54
    condicion                      shift and go to state 55
    escritura                      shift and go to state 56
    ciclo                          shift and go to state 57
    instruccion                    shift and go to state 58
    func_call                      shift and go to state 59

state 317

    (120) args_escritura -> COMA arg_escritura .

    PARDER          reduce using rule 120 (args_escritura -> COMA arg_escritura .)


state 318

    (114) ciclo -> REPEAT push_cont PARIZQ expresion fin_exp PARDER . bloque fin_repeat
    (94) bloque -> . BRAIZQ estatutos BRADER

    BRAIZQ          shift and go to state 316

    bloque                         shift and go to state 368

state 319

    (127) instruccion -> FORWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 . PUNTCOM

    PUNTCOM         shift and go to state 369


state 320

    (128) instruccion -> BACKWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 . PUNTCOM

    PUNTCOM         shift and go to state 370


state 321

    (129) instruccion -> LEFT actualiza_instr PARIZQ expresion PARDER fin_instr1 . PUNTCOM

    PUNTCOM         shift and go to state 371


state 322

    (130) instruccion -> RIGHT actualiza_instr PARIZQ expresion PARDER fin_instr1 . PUNTCOM

    PUNTCOM         shift and go to state 372


state 323

    (131) instruccion -> TURN actualiza_instr PARIZQ expresion PARDER fin_instr1 . PUNTCOM

    PUNTCOM         shift and go to state 373


state 324

    (132) instruccion -> SIZE actualiza_instr PARIZQ expresion PARDER fin_instr1 . PUNTCOM

    PUNTCOM         shift and go to state 374


state 325

    (133) instruccion -> CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 . transform PUNTCOM
    (151) transform -> . fill trans
    (152) transform -> .
    (146) fill -> . PUNTO FILL actualiza_instr PARIZQ PARDER fin_instr

    PUNTCOM         reduce using rule 152 (transform -> .)
    PUNTO           shift and go to state 377

    transform                      shift and go to state 375
    fill                           shift and go to state 376

state 326

    (134) instruccion -> TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 . transform PUNTCOM
    (151) transform -> . fill trans
    (152) transform -> .
    (146) fill -> . PUNTO FILL actualiza_instr PARIZQ PARDER fin_instr

    PUNTCOM         reduce using rule 152 (transform -> .)
    PUNTO           shift and go to state 377

    transform                      shift and go to state 378
    fill                           shift and go to state 376

state 327

    (135) instruccion -> SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 . transform PUNTCOM
    (151) transform -> . fill trans
    (152) transform -> .
    (146) fill -> . PUNTO FILL actualiza_instr PARIZQ PARDER fin_instr

    PUNTCOM         reduce using rule 152 (transform -> .)
    PUNTO           shift and go to state 377

    transform                      shift and go to state 379
    fill                           shift and go to state 376

state 328

    (136) instruccion -> NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 . transform PUNTCOM
    (151) transform -> . fill trans
    (152) transform -> .
    (146) fill -> . PUNTO FILL actualiza_instr PARIZQ PARDER fin_instr

    PUNTCOM         reduce using rule 152 (transform -> .)
    PUNTO           shift and go to state 377

    transform                      shift and go to state 380
    fill                           shift and go to state 376

state 329

    (137) instruccion -> ARC actualiza_instr PARIZQ expresion PARDER fin_instr1 . trans PUNTCOM
    (147) trans -> . PUNTO altera trans
    (148) trans -> .

    PUNTO           shift and go to state 382
    PUNTCOM         reduce using rule 148 (trans -> .)

    trans                          shift and go to state 381

state 330

    (138) instruccion -> UP actualiza_instr PARIZQ PARDER fin_instr PUNTCOM .

    ID              reduce using rule 138 (instruccion -> UP actualiza_instr PARIZQ PARDER fin_instr PUNTCOM .)
    IF              reduce using rule 138 (instruccion -> UP actualiza_instr PARIZQ PARDER fin_instr PUNTCOM .)
    PRINT           reduce using rule 138 (instruccion -> UP actualiza_instr PARIZQ PARDER fin_instr PUNTCOM .)
    REPEAT          reduce using rule 138 (instruccion -> UP actualiza_instr PARIZQ PARDER fin_instr PUNTCOM .)
    FORWARD         reduce using rule 138 (instruccion -> UP actualiza_instr PARIZQ PARDER fin_instr PUNTCOM .)
    BACKWARD        reduce using rule 138 (instruccion -> UP actualiza_instr PARIZQ PARDER fin_instr PUNTCOM .)
    LEFT            reduce using rule 138 (instruccion -> UP actualiza_instr PARIZQ PARDER fin_instr PUNTCOM .)
    RIGHT           reduce using rule 138 (instruccion -> UP actualiza_instr PARIZQ PARDER fin_instr PUNTCOM .)
    TURN            reduce using rule 138 (instruccion -> UP actualiza_instr PARIZQ PARDER fin_instr PUNTCOM .)
    SIZE            reduce using rule 138 (instruccion -> UP actualiza_instr PARIZQ PARDER fin_instr PUNTCOM .)
    CIRCLE          reduce using rule 138 (instruccion -> UP actualiza_instr PARIZQ PARDER fin_instr PUNTCOM .)
    TRIANGLE        reduce using rule 138 (instruccion -> UP actualiza_instr PARIZQ PARDER fin_instr PUNTCOM .)
    SQUARE          reduce using rule 138 (instruccion -> UP actualiza_instr PARIZQ PARDER fin_instr PUNTCOM .)
    NGON            reduce using rule 138 (instruccion -> UP actualiza_instr PARIZQ PARDER fin_instr PUNTCOM .)
    ARC             reduce using rule 138 (instruccion -> UP actualiza_instr PARIZQ PARDER fin_instr PUNTCOM .)
    UP              reduce using rule 138 (instruccion -> UP actualiza_instr PARIZQ PARDER fin_instr PUNTCOM .)
    DOWN            reduce using rule 138 (instruccion -> UP actualiza_instr PARIZQ PARDER fin_instr PUNTCOM .)
    COLOR           reduce using rule 138 (instruccion -> UP actualiza_instr PARIZQ PARDER fin_instr PUNTCOM .)
    FILLED_CIRCLE   reduce using rule 138 (instruccion -> UP actualiza_instr PARIZQ PARDER fin_instr PUNTCOM .)
    FILLED_SQUARE   reduce using rule 138 (instruccion -> UP actualiza_instr PARIZQ PARDER fin_instr PUNTCOM .)
    FILLED_TRIANGLE reduce using rule 138 (instruccion -> UP actualiza_instr PARIZQ PARDER fin_instr PUNTCOM .)
    FILLED_NGON     reduce using rule 138 (instruccion -> UP actualiza_instr PARIZQ PARDER fin_instr PUNTCOM .)
    FILLER_COLOR    reduce using rule 138 (instruccion -> UP actualiza_instr PARIZQ PARDER fin_instr PUNTCOM .)
    RETURN          reduce using rule 138 (instruccion -> UP actualiza_instr PARIZQ PARDER fin_instr PUNTCOM .)
    BRADER          reduce using rule 138 (instruccion -> UP actualiza_instr PARIZQ PARDER fin_instr PUNTCOM .)


state 331

    (139) instruccion -> DOWN actualiza_instr PARIZQ PARDER fin_instr PUNTCOM .

    ID              reduce using rule 139 (instruccion -> DOWN actualiza_instr PARIZQ PARDER fin_instr PUNTCOM .)
    IF              reduce using rule 139 (instruccion -> DOWN actualiza_instr PARIZQ PARDER fin_instr PUNTCOM .)
    PRINT           reduce using rule 139 (instruccion -> DOWN actualiza_instr PARIZQ PARDER fin_instr PUNTCOM .)
    REPEAT          reduce using rule 139 (instruccion -> DOWN actualiza_instr PARIZQ PARDER fin_instr PUNTCOM .)
    FORWARD         reduce using rule 139 (instruccion -> DOWN actualiza_instr PARIZQ PARDER fin_instr PUNTCOM .)
    BACKWARD        reduce using rule 139 (instruccion -> DOWN actualiza_instr PARIZQ PARDER fin_instr PUNTCOM .)
    LEFT            reduce using rule 139 (instruccion -> DOWN actualiza_instr PARIZQ PARDER fin_instr PUNTCOM .)
    RIGHT           reduce using rule 139 (instruccion -> DOWN actualiza_instr PARIZQ PARDER fin_instr PUNTCOM .)
    TURN            reduce using rule 139 (instruccion -> DOWN actualiza_instr PARIZQ PARDER fin_instr PUNTCOM .)
    SIZE            reduce using rule 139 (instruccion -> DOWN actualiza_instr PARIZQ PARDER fin_instr PUNTCOM .)
    CIRCLE          reduce using rule 139 (instruccion -> DOWN actualiza_instr PARIZQ PARDER fin_instr PUNTCOM .)
    TRIANGLE        reduce using rule 139 (instruccion -> DOWN actualiza_instr PARIZQ PARDER fin_instr PUNTCOM .)
    SQUARE          reduce using rule 139 (instruccion -> DOWN actualiza_instr PARIZQ PARDER fin_instr PUNTCOM .)
    NGON            reduce using rule 139 (instruccion -> DOWN actualiza_instr PARIZQ PARDER fin_instr PUNTCOM .)
    ARC             reduce using rule 139 (instruccion -> DOWN actualiza_instr PARIZQ PARDER fin_instr PUNTCOM .)
    UP              reduce using rule 139 (instruccion -> DOWN actualiza_instr PARIZQ PARDER fin_instr PUNTCOM .)
    DOWN            reduce using rule 139 (instruccion -> DOWN actualiza_instr PARIZQ PARDER fin_instr PUNTCOM .)
    COLOR           reduce using rule 139 (instruccion -> DOWN actualiza_instr PARIZQ PARDER fin_instr PUNTCOM .)
    FILLED_CIRCLE   reduce using rule 139 (instruccion -> DOWN actualiza_instr PARIZQ PARDER fin_instr PUNTCOM .)
    FILLED_SQUARE   reduce using rule 139 (instruccion -> DOWN actualiza_instr PARIZQ PARDER fin_instr PUNTCOM .)
    FILLED_TRIANGLE reduce using rule 139 (instruccion -> DOWN actualiza_instr PARIZQ PARDER fin_instr PUNTCOM .)
    FILLED_NGON     reduce using rule 139 (instruccion -> DOWN actualiza_instr PARIZQ PARDER fin_instr PUNTCOM .)
    FILLER_COLOR    reduce using rule 139 (instruccion -> DOWN actualiza_instr PARIZQ PARDER fin_instr PUNTCOM .)
    RETURN          reduce using rule 139 (instruccion -> DOWN actualiza_instr PARIZQ PARDER fin_instr PUNTCOM .)
    BRADER          reduce using rule 139 (instruccion -> DOWN actualiza_instr PARIZQ PARDER fin_instr PUNTCOM .)


state 332

    (140) instruccion -> COLOR actualiza_instr PARIZQ expresion COMA expresion . COMA expresion PARDER fin_color PUNTCOM

    COMA            shift and go to state 383


state 333

    (141) instruccion -> FILLED_CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 . transform PUNTCOM
    (151) transform -> . fill trans
    (152) transform -> .
    (146) fill -> . PUNTO FILL actualiza_instr PARIZQ PARDER fin_instr

    PUNTCOM         reduce using rule 152 (transform -> .)
    PUNTO           shift and go to state 377

    transform                      shift and go to state 384
    fill                           shift and go to state 376

state 334

    (142) instruccion -> FILLED_SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 . transform PUNTCOM
    (151) transform -> . fill trans
    (152) transform -> .
    (146) fill -> . PUNTO FILL actualiza_instr PARIZQ PARDER fin_instr

    PUNTCOM         reduce using rule 152 (transform -> .)
    PUNTO           shift and go to state 377

    transform                      shift and go to state 385
    fill                           shift and go to state 376

state 335

    (143) instruccion -> FILLED_TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 . transform PUNTCOM
    (151) transform -> . fill trans
    (152) transform -> .
    (146) fill -> . PUNTO FILL actualiza_instr PARIZQ PARDER fin_instr

    PUNTCOM         reduce using rule 152 (transform -> .)
    PUNTO           shift and go to state 377

    transform                      shift and go to state 386
    fill                           shift and go to state 376

state 336

    (144) instruccion -> FILLED_NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 . transform PUNTCOM
    (151) transform -> . fill trans
    (152) transform -> .
    (146) fill -> . PUNTO FILL actualiza_instr PARIZQ PARDER fin_instr

    PUNTCOM         reduce using rule 152 (transform -> .)
    PUNTO           shift and go to state 377

    transform                      shift and go to state 387
    fill                           shift and go to state 376

state 337

    (145) instruccion -> FILLER_COLOR actualiza_instr PARIZQ expresion COMA expresion . COMA expresion PARDER fin_color PUNTCOM

    COMA            shift and go to state 388


state 338

    (29) func -> tipo ID actualiza_id crea_func . PARIZQ pars PARDER bloque_func

    PARIZQ          shift and go to state 389


state 339

    (30) func -> VOID tipo_void ID actualiza_id . crea_func PARIZQ pars PARDER bloque_func
    (40) crea_func -> .

    PARIZQ          reduce using rule 40 (crea_func -> .)

    crea_func                      shift and go to state 390

state 340

    (36) par -> COMA tipo . ID actualiza_id crea_var gen_dir par

    ID              shift and go to state 391


state 341

    (4) ajustes -> CANVAS BRAIZQ WIDTH CTE_I PUNTCOM HEIGHT CTE_I PUNTCOM BACKGROUND CTE_I COMA CTE_I COMA . CTE_I PUNTCOM BRADER

    CTE_I           shift and go to state 392


state 342

    (48) or_expr -> OR push_oper expresion pop_or .

    PUNTCOM         reduce using rule 48 (or_expr -> OR push_oper expresion pop_or .)
    PARDER          reduce using rule 48 (or_expr -> OR push_oper expresion pop_or .)
    COMA            reduce using rule 48 (or_expr -> OR push_oper expresion pop_or .)
    CORDER          reduce using rule 48 (or_expr -> OR push_oper expresion pop_or .)


state 343

    (51) and_exp -> AND push_oper expr pop_and .

    OR              reduce using rule 51 (and_exp -> AND push_oper expr pop_and .)
    PUNTCOM         reduce using rule 51 (and_exp -> AND push_oper expr pop_and .)
    PARDER          reduce using rule 51 (and_exp -> AND push_oper expr pop_and .)
    COMA            reduce using rule 51 (and_exp -> AND push_oper expr pop_and .)
    CORDER          reduce using rule 51 (and_exp -> AND push_oper expr pop_and .)


state 344

    (54) rel_e -> DIF push_oper exp pop_rel_e .

    AND             reduce using rule 54 (rel_e -> DIF push_oper exp pop_rel_e .)
    OR              reduce using rule 54 (rel_e -> DIF push_oper exp pop_rel_e .)
    PUNTCOM         reduce using rule 54 (rel_e -> DIF push_oper exp pop_rel_e .)
    PARDER          reduce using rule 54 (rel_e -> DIF push_oper exp pop_rel_e .)
    COMA            reduce using rule 54 (rel_e -> DIF push_oper exp pop_rel_e .)
    CORDER          reduce using rule 54 (rel_e -> DIF push_oper exp pop_rel_e .)


state 345

    (55) rel_e -> MENOR push_oper exp pop_rel_e .

    AND             reduce using rule 55 (rel_e -> MENOR push_oper exp pop_rel_e .)
    OR              reduce using rule 55 (rel_e -> MENOR push_oper exp pop_rel_e .)
    PUNTCOM         reduce using rule 55 (rel_e -> MENOR push_oper exp pop_rel_e .)
    PARDER          reduce using rule 55 (rel_e -> MENOR push_oper exp pop_rel_e .)
    COMA            reduce using rule 55 (rel_e -> MENOR push_oper exp pop_rel_e .)
    CORDER          reduce using rule 55 (rel_e -> MENOR push_oper exp pop_rel_e .)


state 346

    (56) rel_e -> MAYOR push_oper exp pop_rel_e .

    AND             reduce using rule 56 (rel_e -> MAYOR push_oper exp pop_rel_e .)
    OR              reduce using rule 56 (rel_e -> MAYOR push_oper exp pop_rel_e .)
    PUNTCOM         reduce using rule 56 (rel_e -> MAYOR push_oper exp pop_rel_e .)
    PARDER          reduce using rule 56 (rel_e -> MAYOR push_oper exp pop_rel_e .)
    COMA            reduce using rule 56 (rel_e -> MAYOR push_oper exp pop_rel_e .)
    CORDER          reduce using rule 56 (rel_e -> MAYOR push_oper exp pop_rel_e .)


state 347

    (57) rel_e -> MENIGUAL push_oper exp pop_rel_e .

    AND             reduce using rule 57 (rel_e -> MENIGUAL push_oper exp pop_rel_e .)
    OR              reduce using rule 57 (rel_e -> MENIGUAL push_oper exp pop_rel_e .)
    PUNTCOM         reduce using rule 57 (rel_e -> MENIGUAL push_oper exp pop_rel_e .)
    PARDER          reduce using rule 57 (rel_e -> MENIGUAL push_oper exp pop_rel_e .)
    COMA            reduce using rule 57 (rel_e -> MENIGUAL push_oper exp pop_rel_e .)
    CORDER          reduce using rule 57 (rel_e -> MENIGUAL push_oper exp pop_rel_e .)


state 348

    (58) rel_e -> MAYIGUAL push_oper exp pop_rel_e .

    AND             reduce using rule 58 (rel_e -> MAYIGUAL push_oper exp pop_rel_e .)
    OR              reduce using rule 58 (rel_e -> MAYIGUAL push_oper exp pop_rel_e .)
    PUNTCOM         reduce using rule 58 (rel_e -> MAYIGUAL push_oper exp pop_rel_e .)
    PARDER          reduce using rule 58 (rel_e -> MAYIGUAL push_oper exp pop_rel_e .)
    COMA            reduce using rule 58 (rel_e -> MAYIGUAL push_oper exp pop_rel_e .)
    CORDER          reduce using rule 58 (rel_e -> MAYIGUAL push_oper exp pop_rel_e .)


state 349

    (59) rel_e -> IGUAL push_oper exp pop_rel_e .

    AND             reduce using rule 59 (rel_e -> IGUAL push_oper exp pop_rel_e .)
    OR              reduce using rule 59 (rel_e -> IGUAL push_oper exp pop_rel_e .)
    PUNTCOM         reduce using rule 59 (rel_e -> IGUAL push_oper exp pop_rel_e .)
    PARDER          reduce using rule 59 (rel_e -> IGUAL push_oper exp pop_rel_e .)
    COMA            reduce using rule 59 (rel_e -> IGUAL push_oper exp pop_rel_e .)
    CORDER          reduce using rule 59 (rel_e -> IGUAL push_oper exp pop_rel_e .)


state 350

    (62) suma_resta -> SUMA push_oper e pop_suma_resta .

    DIF             reduce using rule 62 (suma_resta -> SUMA push_oper e pop_suma_resta .)
    MENOR           reduce using rule 62 (suma_resta -> SUMA push_oper e pop_suma_resta .)
    MAYOR           reduce using rule 62 (suma_resta -> SUMA push_oper e pop_suma_resta .)
    MENIGUAL        reduce using rule 62 (suma_resta -> SUMA push_oper e pop_suma_resta .)
    MAYIGUAL        reduce using rule 62 (suma_resta -> SUMA push_oper e pop_suma_resta .)
    IGUAL           reduce using rule 62 (suma_resta -> SUMA push_oper e pop_suma_resta .)
    AND             reduce using rule 62 (suma_resta -> SUMA push_oper e pop_suma_resta .)
    OR              reduce using rule 62 (suma_resta -> SUMA push_oper e pop_suma_resta .)
    PUNTCOM         reduce using rule 62 (suma_resta -> SUMA push_oper e pop_suma_resta .)
    PARDER          reduce using rule 62 (suma_resta -> SUMA push_oper e pop_suma_resta .)
    COMA            reduce using rule 62 (suma_resta -> SUMA push_oper e pop_suma_resta .)
    CORDER          reduce using rule 62 (suma_resta -> SUMA push_oper e pop_suma_resta .)


state 351

    (63) suma_resta -> RESTA push_oper e pop_suma_resta .

    DIF             reduce using rule 63 (suma_resta -> RESTA push_oper e pop_suma_resta .)
    MENOR           reduce using rule 63 (suma_resta -> RESTA push_oper e pop_suma_resta .)
    MAYOR           reduce using rule 63 (suma_resta -> RESTA push_oper e pop_suma_resta .)
    MENIGUAL        reduce using rule 63 (suma_resta -> RESTA push_oper e pop_suma_resta .)
    MAYIGUAL        reduce using rule 63 (suma_resta -> RESTA push_oper e pop_suma_resta .)
    IGUAL           reduce using rule 63 (suma_resta -> RESTA push_oper e pop_suma_resta .)
    AND             reduce using rule 63 (suma_resta -> RESTA push_oper e pop_suma_resta .)
    OR              reduce using rule 63 (suma_resta -> RESTA push_oper e pop_suma_resta .)
    PUNTCOM         reduce using rule 63 (suma_resta -> RESTA push_oper e pop_suma_resta .)
    PARDER          reduce using rule 63 (suma_resta -> RESTA push_oper e pop_suma_resta .)
    COMA            reduce using rule 63 (suma_resta -> RESTA push_oper e pop_suma_resta .)
    CORDER          reduce using rule 63 (suma_resta -> RESTA push_oper e pop_suma_resta .)


state 352

    (66) mult_div -> MULT push_oper termino pop_mult_div .

    SUMA            reduce using rule 66 (mult_div -> MULT push_oper termino pop_mult_div .)
    RESTA           reduce using rule 66 (mult_div -> MULT push_oper termino pop_mult_div .)
    DIF             reduce using rule 66 (mult_div -> MULT push_oper termino pop_mult_div .)
    MENOR           reduce using rule 66 (mult_div -> MULT push_oper termino pop_mult_div .)
    MAYOR           reduce using rule 66 (mult_div -> MULT push_oper termino pop_mult_div .)
    MENIGUAL        reduce using rule 66 (mult_div -> MULT push_oper termino pop_mult_div .)
    MAYIGUAL        reduce using rule 66 (mult_div -> MULT push_oper termino pop_mult_div .)
    IGUAL           reduce using rule 66 (mult_div -> MULT push_oper termino pop_mult_div .)
    AND             reduce using rule 66 (mult_div -> MULT push_oper termino pop_mult_div .)
    OR              reduce using rule 66 (mult_div -> MULT push_oper termino pop_mult_div .)
    PUNTCOM         reduce using rule 66 (mult_div -> MULT push_oper termino pop_mult_div .)
    PARDER          reduce using rule 66 (mult_div -> MULT push_oper termino pop_mult_div .)
    COMA            reduce using rule 66 (mult_div -> MULT push_oper termino pop_mult_div .)
    CORDER          reduce using rule 66 (mult_div -> MULT push_oper termino pop_mult_div .)


state 353

    (67) mult_div -> DIV push_oper termino pop_mult_div .

    SUMA            reduce using rule 67 (mult_div -> DIV push_oper termino pop_mult_div .)
    RESTA           reduce using rule 67 (mult_div -> DIV push_oper termino pop_mult_div .)
    DIF             reduce using rule 67 (mult_div -> DIV push_oper termino pop_mult_div .)
    MENOR           reduce using rule 67 (mult_div -> DIV push_oper termino pop_mult_div .)
    MAYOR           reduce using rule 67 (mult_div -> DIV push_oper termino pop_mult_div .)
    MENIGUAL        reduce using rule 67 (mult_div -> DIV push_oper termino pop_mult_div .)
    MAYIGUAL        reduce using rule 67 (mult_div -> DIV push_oper termino pop_mult_div .)
    IGUAL           reduce using rule 67 (mult_div -> DIV push_oper termino pop_mult_div .)
    AND             reduce using rule 67 (mult_div -> DIV push_oper termino pop_mult_div .)
    OR              reduce using rule 67 (mult_div -> DIV push_oper termino pop_mult_div .)
    PUNTCOM         reduce using rule 67 (mult_div -> DIV push_oper termino pop_mult_div .)
    PARDER          reduce using rule 67 (mult_div -> DIV push_oper termino pop_mult_div .)
    COMA            reduce using rule 67 (mult_div -> DIV push_oper termino pop_mult_div .)
    CORDER          reduce using rule 67 (mult_div -> DIV push_oper termino pop_mult_div .)


state 354

    (68) mult_div -> MOD push_oper termino pop_mult_div .

    SUMA            reduce using rule 68 (mult_div -> MOD push_oper termino pop_mult_div .)
    RESTA           reduce using rule 68 (mult_div -> MOD push_oper termino pop_mult_div .)
    DIF             reduce using rule 68 (mult_div -> MOD push_oper termino pop_mult_div .)
    MENOR           reduce using rule 68 (mult_div -> MOD push_oper termino pop_mult_div .)
    MAYOR           reduce using rule 68 (mult_div -> MOD push_oper termino pop_mult_div .)
    MENIGUAL        reduce using rule 68 (mult_div -> MOD push_oper termino pop_mult_div .)
    MAYIGUAL        reduce using rule 68 (mult_div -> MOD push_oper termino pop_mult_div .)
    IGUAL           reduce using rule 68 (mult_div -> MOD push_oper termino pop_mult_div .)
    AND             reduce using rule 68 (mult_div -> MOD push_oper termino pop_mult_div .)
    OR              reduce using rule 68 (mult_div -> MOD push_oper termino pop_mult_div .)
    PUNTCOM         reduce using rule 68 (mult_div -> MOD push_oper termino pop_mult_div .)
    PARDER          reduce using rule 68 (mult_div -> MOD push_oper termino pop_mult_div .)
    COMA            reduce using rule 68 (mult_div -> MOD push_oper termino pop_mult_div .)
    CORDER          reduce using rule 68 (mult_div -> MOD push_oper termino pop_mult_div .)


state 355

    (70) factor -> PARIZQ push_paren e PARDER pop_paren .

    MULT            reduce using rule 70 (factor -> PARIZQ push_paren e PARDER pop_paren .)
    DIV             reduce using rule 70 (factor -> PARIZQ push_paren e PARDER pop_paren .)
    MOD             reduce using rule 70 (factor -> PARIZQ push_paren e PARDER pop_paren .)
    SUMA            reduce using rule 70 (factor -> PARIZQ push_paren e PARDER pop_paren .)
    RESTA           reduce using rule 70 (factor -> PARIZQ push_paren e PARDER pop_paren .)
    DIF             reduce using rule 70 (factor -> PARIZQ push_paren e PARDER pop_paren .)
    MENOR           reduce using rule 70 (factor -> PARIZQ push_paren e PARDER pop_paren .)
    MAYOR           reduce using rule 70 (factor -> PARIZQ push_paren e PARDER pop_paren .)
    MENIGUAL        reduce using rule 70 (factor -> PARIZQ push_paren e PARDER pop_paren .)
    MAYIGUAL        reduce using rule 70 (factor -> PARIZQ push_paren e PARDER pop_paren .)
    IGUAL           reduce using rule 70 (factor -> PARIZQ push_paren e PARDER pop_paren .)
    AND             reduce using rule 70 (factor -> PARIZQ push_paren e PARDER pop_paren .)
    OR              reduce using rule 70 (factor -> PARIZQ push_paren e PARDER pop_paren .)
    PUNTCOM         reduce using rule 70 (factor -> PARIZQ push_paren e PARDER pop_paren .)
    PARDER          reduce using rule 70 (factor -> PARIZQ push_paren e PARDER pop_paren .)
    COMA            reduce using rule 70 (factor -> PARIZQ push_paren e PARDER pop_paren .)
    CORDER          reduce using rule 70 (factor -> PARIZQ push_paren e PARDER pop_paren .)


state 356

    (96) var_func_call -> PARIZQ actualiza_func args . gen_era PARDER gen_gosub
    (98) gen_era -> .

    PARDER          reduce using rule 98 (gen_era -> .)

    gen_era                        shift and go to state 393

state 357

    (22) vars -> tipo ID actualiza_id crea_var lista_dec vars_lista PUNTCOM . mas_vars
    (25) mas_vars -> . vars
    (26) mas_vars -> .
    (22) vars -> . tipo ID actualiza_id crea_var lista_dec vars_lista PUNTCOM mas_vars
    (124) tipo -> . INT actualiza_tipo
    (125) tipo -> . FLOAT actualiza_tipo

    ID              reduce using rule 26 (mas_vars -> .)
    IF              reduce using rule 26 (mas_vars -> .)
    PRINT           reduce using rule 26 (mas_vars -> .)
    REPEAT          reduce using rule 26 (mas_vars -> .)
    FORWARD         reduce using rule 26 (mas_vars -> .)
    BACKWARD        reduce using rule 26 (mas_vars -> .)
    LEFT            reduce using rule 26 (mas_vars -> .)
    RIGHT           reduce using rule 26 (mas_vars -> .)
    TURN            reduce using rule 26 (mas_vars -> .)
    SIZE            reduce using rule 26 (mas_vars -> .)
    CIRCLE          reduce using rule 26 (mas_vars -> .)
    TRIANGLE        reduce using rule 26 (mas_vars -> .)
    SQUARE          reduce using rule 26 (mas_vars -> .)
    NGON            reduce using rule 26 (mas_vars -> .)
    ARC             reduce using rule 26 (mas_vars -> .)
    UP              reduce using rule 26 (mas_vars -> .)
    DOWN            reduce using rule 26 (mas_vars -> .)
    COLOR           reduce using rule 26 (mas_vars -> .)
    FILLED_CIRCLE   reduce using rule 26 (mas_vars -> .)
    FILLED_SQUARE   reduce using rule 26 (mas_vars -> .)
    FILLED_TRIANGLE reduce using rule 26 (mas_vars -> .)
    FILLED_NGON     reduce using rule 26 (mas_vars -> .)
    FILLER_COLOR    reduce using rule 26 (mas_vars -> .)
    RETURN          reduce using rule 26 (mas_vars -> .)
    INT             shift and go to state 12
    FLOAT           shift and go to state 13

    tipo                           shift and go to state 51
    mas_vars                       shift and go to state 394
    vars                           shift and go to state 395

state 358

    (107) exp_input -> INPUT PARIZQ PARDER .

    PUNTCOM         reduce using rule 107 (exp_input -> INPUT PARIZQ PARDER .)


state 359

    (95) func_call -> ID actualiza_id actualiza_func PARIZQ args gen_era PARDER . gen_gosub
    (99) gen_gosub -> .

    PUNTCOM         reduce using rule 99 (gen_gosub -> .)

    gen_gosub                      shift and go to state 396

state 360

    (100) args -> expresion asig_par arg .

    PARDER          reduce using rule 100 (args -> expresion asig_par arg .)


state 361

    (102) arg -> COMA . args
    (100) args -> . expresion asig_par arg
    (101) args -> .
    (47) expresion -> . expr or_expr
    (50) expr -> . exp and_exp
    (53) exp -> . e rel_e
    (61) e -> . termino suma_resta
    (65) termino -> . factor mult_div
    (70) factor -> . PARIZQ push_paren e PARDER pop_paren
    (71) factor -> . var
    (72) factor -> . RESTA neg_push var neg_pop
    (75) var -> . ID actualiza_id var_func_call
    (76) var -> . CTE_I
    (77) var -> . CTE_F
    (78) var -> . error

    PARDER          reduce using rule 101 (args -> .)
    PARIZQ          shift and go to state 133
    RESTA           shift and go to state 135
    ID              shift and go to state 136
    CTE_I           shift and go to state 137
    CTE_F           shift and go to state 138
    error           shift and go to state 139

    args                           shift and go to state 397
    expresion                      shift and go to state 260
    expr                           shift and go to state 128
    exp                            shift and go to state 129
    e                              shift and go to state 130
    termino                        shift and go to state 131
    factor                         shift and go to state 132
    var                            shift and go to state 134

state 362

    (83) matriz -> CORIZQ . expresion CORDER pop_dim
    (47) expresion -> . expr or_expr
    (50) expr -> . exp and_exp
    (53) exp -> . e rel_e
    (61) e -> . termino suma_resta
    (65) termino -> . factor mult_div
    (70) factor -> . PARIZQ push_paren e PARDER pop_paren
    (71) factor -> . var
    (72) factor -> . RESTA neg_push var neg_pop
    (75) var -> . ID actualiza_id var_func_call
    (76) var -> . CTE_I
    (77) var -> . CTE_F
    (78) var -> . error

    PARIZQ          shift and go to state 133
    RESTA           shift and go to state 135
    ID              shift and go to state 136
    CTE_I           shift and go to state 137
    CTE_F           shift and go to state 138
    error           shift and go to state 139

    expresion                      shift and go to state 398
    expr                           shift and go to state 128
    exp                            shift and go to state 129
    e                              shift and go to state 130
    termino                        shift and go to state 131
    factor                         shift and go to state 132
    var                            shift and go to state 134

state 363

    (81) lista -> CORIZQ push_dim expresion CORDER matriz .

    ASIG            reduce using rule 81 (lista -> CORIZQ push_dim expresion CORDER matriz .)
    MULT            reduce using rule 81 (lista -> CORIZQ push_dim expresion CORDER matriz .)
    DIV             reduce using rule 81 (lista -> CORIZQ push_dim expresion CORDER matriz .)
    MOD             reduce using rule 81 (lista -> CORIZQ push_dim expresion CORDER matriz .)
    SUMA            reduce using rule 81 (lista -> CORIZQ push_dim expresion CORDER matriz .)
    RESTA           reduce using rule 81 (lista -> CORIZQ push_dim expresion CORDER matriz .)
    DIF             reduce using rule 81 (lista -> CORIZQ push_dim expresion CORDER matriz .)
    MENOR           reduce using rule 81 (lista -> CORIZQ push_dim expresion CORDER matriz .)
    MAYOR           reduce using rule 81 (lista -> CORIZQ push_dim expresion CORDER matriz .)
    MENIGUAL        reduce using rule 81 (lista -> CORIZQ push_dim expresion CORDER matriz .)
    MAYIGUAL        reduce using rule 81 (lista -> CORIZQ push_dim expresion CORDER matriz .)
    IGUAL           reduce using rule 81 (lista -> CORIZQ push_dim expresion CORDER matriz .)
    AND             reduce using rule 81 (lista -> CORIZQ push_dim expresion CORDER matriz .)
    OR              reduce using rule 81 (lista -> CORIZQ push_dim expresion CORDER matriz .)
    PUNTCOM         reduce using rule 81 (lista -> CORIZQ push_dim expresion CORDER matriz .)
    PARDER          reduce using rule 81 (lista -> CORIZQ push_dim expresion CORDER matriz .)
    COMA            reduce using rule 81 (lista -> CORIZQ push_dim expresion CORDER matriz .)
    CORDER          reduce using rule 81 (lista -> CORIZQ push_dim expresion CORDER matriz .)


state 364

    (84) matriz -> pop_dim .

    ASIG            reduce using rule 84 (matriz -> pop_dim .)
    MULT            reduce using rule 84 (matriz -> pop_dim .)
    DIV             reduce using rule 84 (matriz -> pop_dim .)
    MOD             reduce using rule 84 (matriz -> pop_dim .)
    SUMA            reduce using rule 84 (matriz -> pop_dim .)
    RESTA           reduce using rule 84 (matriz -> pop_dim .)
    DIF             reduce using rule 84 (matriz -> pop_dim .)
    MENOR           reduce using rule 84 (matriz -> pop_dim .)
    MAYOR           reduce using rule 84 (matriz -> pop_dim .)
    MENIGUAL        reduce using rule 84 (matriz -> pop_dim .)
    MAYIGUAL        reduce using rule 84 (matriz -> pop_dim .)
    IGUAL           reduce using rule 84 (matriz -> pop_dim .)
    AND             reduce using rule 84 (matriz -> pop_dim .)
    OR              reduce using rule 84 (matriz -> pop_dim .)
    PUNTCOM         reduce using rule 84 (matriz -> pop_dim .)
    PARDER          reduce using rule 84 (matriz -> pop_dim .)
    COMA            reduce using rule 84 (matriz -> pop_dim .)
    CORDER          reduce using rule 84 (matriz -> pop_dim .)


state 365

    (108) condicion -> IF PARIZQ expresion fin_exp PARDER bloque else_bloque . fin_cond
    (111) fin_cond -> .

    ID              reduce using rule 111 (fin_cond -> .)
    IF              reduce using rule 111 (fin_cond -> .)
    PRINT           reduce using rule 111 (fin_cond -> .)
    REPEAT          reduce using rule 111 (fin_cond -> .)
    FORWARD         reduce using rule 111 (fin_cond -> .)
    BACKWARD        reduce using rule 111 (fin_cond -> .)
    LEFT            reduce using rule 111 (fin_cond -> .)
    RIGHT           reduce using rule 111 (fin_cond -> .)
    TURN            reduce using rule 111 (fin_cond -> .)
    SIZE            reduce using rule 111 (fin_cond -> .)
    CIRCLE          reduce using rule 111 (fin_cond -> .)
    TRIANGLE        reduce using rule 111 (fin_cond -> .)
    SQUARE          reduce using rule 111 (fin_cond -> .)
    NGON            reduce using rule 111 (fin_cond -> .)
    ARC             reduce using rule 111 (fin_cond -> .)
    UP              reduce using rule 111 (fin_cond -> .)
    DOWN            reduce using rule 111 (fin_cond -> .)
    COLOR           reduce using rule 111 (fin_cond -> .)
    FILLED_CIRCLE   reduce using rule 111 (fin_cond -> .)
    FILLED_SQUARE   reduce using rule 111 (fin_cond -> .)
    FILLED_TRIANGLE reduce using rule 111 (fin_cond -> .)
    FILLED_NGON     reduce using rule 111 (fin_cond -> .)
    FILLER_COLOR    reduce using rule 111 (fin_cond -> .)
    RETURN          reduce using rule 111 (fin_cond -> .)
    BRADER          reduce using rule 111 (fin_cond -> .)

    fin_cond                       shift and go to state 399

state 366

    (109) else_bloque -> ELSE . inicio_else bloque
    (112) inicio_else -> .

    BRAIZQ          reduce using rule 112 (inicio_else -> .)

    inicio_else                    shift and go to state 400

state 367

    (94) bloque -> BRAIZQ estatutos . BRADER

    BRADER          shift and go to state 401


state 368

    (114) ciclo -> REPEAT push_cont PARIZQ expresion fin_exp PARDER bloque . fin_repeat
    (116) fin_repeat -> .

    ID              reduce using rule 116 (fin_repeat -> .)
    IF              reduce using rule 116 (fin_repeat -> .)
    PRINT           reduce using rule 116 (fin_repeat -> .)
    REPEAT          reduce using rule 116 (fin_repeat -> .)
    FORWARD         reduce using rule 116 (fin_repeat -> .)
    BACKWARD        reduce using rule 116 (fin_repeat -> .)
    LEFT            reduce using rule 116 (fin_repeat -> .)
    RIGHT           reduce using rule 116 (fin_repeat -> .)
    TURN            reduce using rule 116 (fin_repeat -> .)
    SIZE            reduce using rule 116 (fin_repeat -> .)
    CIRCLE          reduce using rule 116 (fin_repeat -> .)
    TRIANGLE        reduce using rule 116 (fin_repeat -> .)
    SQUARE          reduce using rule 116 (fin_repeat -> .)
    NGON            reduce using rule 116 (fin_repeat -> .)
    ARC             reduce using rule 116 (fin_repeat -> .)
    UP              reduce using rule 116 (fin_repeat -> .)
    DOWN            reduce using rule 116 (fin_repeat -> .)
    COLOR           reduce using rule 116 (fin_repeat -> .)
    FILLED_CIRCLE   reduce using rule 116 (fin_repeat -> .)
    FILLED_SQUARE   reduce using rule 116 (fin_repeat -> .)
    FILLED_TRIANGLE reduce using rule 116 (fin_repeat -> .)
    FILLED_NGON     reduce using rule 116 (fin_repeat -> .)
    FILLER_COLOR    reduce using rule 116 (fin_repeat -> .)
    RETURN          reduce using rule 116 (fin_repeat -> .)
    BRADER          reduce using rule 116 (fin_repeat -> .)

    fin_repeat                     shift and go to state 402

state 369

    (127) instruccion -> FORWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .

    ID              reduce using rule 127 (instruccion -> FORWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    IF              reduce using rule 127 (instruccion -> FORWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    PRINT           reduce using rule 127 (instruccion -> FORWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    REPEAT          reduce using rule 127 (instruccion -> FORWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    FORWARD         reduce using rule 127 (instruccion -> FORWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    BACKWARD        reduce using rule 127 (instruccion -> FORWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    LEFT            reduce using rule 127 (instruccion -> FORWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    RIGHT           reduce using rule 127 (instruccion -> FORWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    TURN            reduce using rule 127 (instruccion -> FORWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    SIZE            reduce using rule 127 (instruccion -> FORWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    CIRCLE          reduce using rule 127 (instruccion -> FORWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    TRIANGLE        reduce using rule 127 (instruccion -> FORWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    SQUARE          reduce using rule 127 (instruccion -> FORWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    NGON            reduce using rule 127 (instruccion -> FORWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    ARC             reduce using rule 127 (instruccion -> FORWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    UP              reduce using rule 127 (instruccion -> FORWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    DOWN            reduce using rule 127 (instruccion -> FORWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    COLOR           reduce using rule 127 (instruccion -> FORWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    FILLED_CIRCLE   reduce using rule 127 (instruccion -> FORWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    FILLED_SQUARE   reduce using rule 127 (instruccion -> FORWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    FILLED_TRIANGLE reduce using rule 127 (instruccion -> FORWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    FILLED_NGON     reduce using rule 127 (instruccion -> FORWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    FILLER_COLOR    reduce using rule 127 (instruccion -> FORWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    RETURN          reduce using rule 127 (instruccion -> FORWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    BRADER          reduce using rule 127 (instruccion -> FORWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)


state 370

    (128) instruccion -> BACKWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .

    ID              reduce using rule 128 (instruccion -> BACKWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    IF              reduce using rule 128 (instruccion -> BACKWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    PRINT           reduce using rule 128 (instruccion -> BACKWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    REPEAT          reduce using rule 128 (instruccion -> BACKWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    FORWARD         reduce using rule 128 (instruccion -> BACKWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    BACKWARD        reduce using rule 128 (instruccion -> BACKWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    LEFT            reduce using rule 128 (instruccion -> BACKWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    RIGHT           reduce using rule 128 (instruccion -> BACKWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    TURN            reduce using rule 128 (instruccion -> BACKWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    SIZE            reduce using rule 128 (instruccion -> BACKWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    CIRCLE          reduce using rule 128 (instruccion -> BACKWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    TRIANGLE        reduce using rule 128 (instruccion -> BACKWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    SQUARE          reduce using rule 128 (instruccion -> BACKWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    NGON            reduce using rule 128 (instruccion -> BACKWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    ARC             reduce using rule 128 (instruccion -> BACKWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    UP              reduce using rule 128 (instruccion -> BACKWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    DOWN            reduce using rule 128 (instruccion -> BACKWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    COLOR           reduce using rule 128 (instruccion -> BACKWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    FILLED_CIRCLE   reduce using rule 128 (instruccion -> BACKWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    FILLED_SQUARE   reduce using rule 128 (instruccion -> BACKWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    FILLED_TRIANGLE reduce using rule 128 (instruccion -> BACKWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    FILLED_NGON     reduce using rule 128 (instruccion -> BACKWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    FILLER_COLOR    reduce using rule 128 (instruccion -> BACKWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    RETURN          reduce using rule 128 (instruccion -> BACKWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    BRADER          reduce using rule 128 (instruccion -> BACKWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)


state 371

    (129) instruccion -> LEFT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .

    ID              reduce using rule 129 (instruccion -> LEFT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    IF              reduce using rule 129 (instruccion -> LEFT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    PRINT           reduce using rule 129 (instruccion -> LEFT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    REPEAT          reduce using rule 129 (instruccion -> LEFT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    FORWARD         reduce using rule 129 (instruccion -> LEFT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    BACKWARD        reduce using rule 129 (instruccion -> LEFT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    LEFT            reduce using rule 129 (instruccion -> LEFT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    RIGHT           reduce using rule 129 (instruccion -> LEFT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    TURN            reduce using rule 129 (instruccion -> LEFT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    SIZE            reduce using rule 129 (instruccion -> LEFT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    CIRCLE          reduce using rule 129 (instruccion -> LEFT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    TRIANGLE        reduce using rule 129 (instruccion -> LEFT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    SQUARE          reduce using rule 129 (instruccion -> LEFT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    NGON            reduce using rule 129 (instruccion -> LEFT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    ARC             reduce using rule 129 (instruccion -> LEFT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    UP              reduce using rule 129 (instruccion -> LEFT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    DOWN            reduce using rule 129 (instruccion -> LEFT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    COLOR           reduce using rule 129 (instruccion -> LEFT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    FILLED_CIRCLE   reduce using rule 129 (instruccion -> LEFT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    FILLED_SQUARE   reduce using rule 129 (instruccion -> LEFT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    FILLED_TRIANGLE reduce using rule 129 (instruccion -> LEFT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    FILLED_NGON     reduce using rule 129 (instruccion -> LEFT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    FILLER_COLOR    reduce using rule 129 (instruccion -> LEFT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    RETURN          reduce using rule 129 (instruccion -> LEFT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    BRADER          reduce using rule 129 (instruccion -> LEFT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)


state 372

    (130) instruccion -> RIGHT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .

    ID              reduce using rule 130 (instruccion -> RIGHT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    IF              reduce using rule 130 (instruccion -> RIGHT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    PRINT           reduce using rule 130 (instruccion -> RIGHT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    REPEAT          reduce using rule 130 (instruccion -> RIGHT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    FORWARD         reduce using rule 130 (instruccion -> RIGHT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    BACKWARD        reduce using rule 130 (instruccion -> RIGHT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    LEFT            reduce using rule 130 (instruccion -> RIGHT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    RIGHT           reduce using rule 130 (instruccion -> RIGHT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    TURN            reduce using rule 130 (instruccion -> RIGHT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    SIZE            reduce using rule 130 (instruccion -> RIGHT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    CIRCLE          reduce using rule 130 (instruccion -> RIGHT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    TRIANGLE        reduce using rule 130 (instruccion -> RIGHT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    SQUARE          reduce using rule 130 (instruccion -> RIGHT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    NGON            reduce using rule 130 (instruccion -> RIGHT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    ARC             reduce using rule 130 (instruccion -> RIGHT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    UP              reduce using rule 130 (instruccion -> RIGHT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    DOWN            reduce using rule 130 (instruccion -> RIGHT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    COLOR           reduce using rule 130 (instruccion -> RIGHT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    FILLED_CIRCLE   reduce using rule 130 (instruccion -> RIGHT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    FILLED_SQUARE   reduce using rule 130 (instruccion -> RIGHT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    FILLED_TRIANGLE reduce using rule 130 (instruccion -> RIGHT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    FILLED_NGON     reduce using rule 130 (instruccion -> RIGHT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    FILLER_COLOR    reduce using rule 130 (instruccion -> RIGHT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    RETURN          reduce using rule 130 (instruccion -> RIGHT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    BRADER          reduce using rule 130 (instruccion -> RIGHT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)


state 373

    (131) instruccion -> TURN actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .

    ID              reduce using rule 131 (instruccion -> TURN actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    IF              reduce using rule 131 (instruccion -> TURN actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    PRINT           reduce using rule 131 (instruccion -> TURN actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    REPEAT          reduce using rule 131 (instruccion -> TURN actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    FORWARD         reduce using rule 131 (instruccion -> TURN actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    BACKWARD        reduce using rule 131 (instruccion -> TURN actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    LEFT            reduce using rule 131 (instruccion -> TURN actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    RIGHT           reduce using rule 131 (instruccion -> TURN actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    TURN            reduce using rule 131 (instruccion -> TURN actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    SIZE            reduce using rule 131 (instruccion -> TURN actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    CIRCLE          reduce using rule 131 (instruccion -> TURN actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    TRIANGLE        reduce using rule 131 (instruccion -> TURN actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    SQUARE          reduce using rule 131 (instruccion -> TURN actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    NGON            reduce using rule 131 (instruccion -> TURN actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    ARC             reduce using rule 131 (instruccion -> TURN actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    UP              reduce using rule 131 (instruccion -> TURN actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    DOWN            reduce using rule 131 (instruccion -> TURN actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    COLOR           reduce using rule 131 (instruccion -> TURN actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    FILLED_CIRCLE   reduce using rule 131 (instruccion -> TURN actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    FILLED_SQUARE   reduce using rule 131 (instruccion -> TURN actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    FILLED_TRIANGLE reduce using rule 131 (instruccion -> TURN actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    FILLED_NGON     reduce using rule 131 (instruccion -> TURN actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    FILLER_COLOR    reduce using rule 131 (instruccion -> TURN actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    RETURN          reduce using rule 131 (instruccion -> TURN actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    BRADER          reduce using rule 131 (instruccion -> TURN actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)


state 374

    (132) instruccion -> SIZE actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .

    ID              reduce using rule 132 (instruccion -> SIZE actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    IF              reduce using rule 132 (instruccion -> SIZE actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    PRINT           reduce using rule 132 (instruccion -> SIZE actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    REPEAT          reduce using rule 132 (instruccion -> SIZE actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    FORWARD         reduce using rule 132 (instruccion -> SIZE actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    BACKWARD        reduce using rule 132 (instruccion -> SIZE actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    LEFT            reduce using rule 132 (instruccion -> SIZE actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    RIGHT           reduce using rule 132 (instruccion -> SIZE actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    TURN            reduce using rule 132 (instruccion -> SIZE actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    SIZE            reduce using rule 132 (instruccion -> SIZE actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    CIRCLE          reduce using rule 132 (instruccion -> SIZE actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    TRIANGLE        reduce using rule 132 (instruccion -> SIZE actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    SQUARE          reduce using rule 132 (instruccion -> SIZE actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    NGON            reduce using rule 132 (instruccion -> SIZE actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    ARC             reduce using rule 132 (instruccion -> SIZE actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    UP              reduce using rule 132 (instruccion -> SIZE actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    DOWN            reduce using rule 132 (instruccion -> SIZE actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    COLOR           reduce using rule 132 (instruccion -> SIZE actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    FILLED_CIRCLE   reduce using rule 132 (instruccion -> SIZE actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    FILLED_SQUARE   reduce using rule 132 (instruccion -> SIZE actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    FILLED_TRIANGLE reduce using rule 132 (instruccion -> SIZE actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    FILLED_NGON     reduce using rule 132 (instruccion -> SIZE actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    FILLER_COLOR    reduce using rule 132 (instruccion -> SIZE actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    RETURN          reduce using rule 132 (instruccion -> SIZE actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)
    BRADER          reduce using rule 132 (instruccion -> SIZE actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM .)


state 375

    (133) instruccion -> CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform . PUNTCOM

    PUNTCOM         shift and go to state 403


state 376

    (151) transform -> fill . trans
    (147) trans -> . PUNTO altera trans
    (148) trans -> .

    PUNTO           shift and go to state 382
    PUNTCOM         reduce using rule 148 (trans -> .)

    trans                          shift and go to state 404

state 377

    (146) fill -> PUNTO . FILL actualiza_instr PARIZQ PARDER fin_instr

    FILL            shift and go to state 405


state 378

    (134) instruccion -> TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform . PUNTCOM

    PUNTCOM         shift and go to state 406


state 379

    (135) instruccion -> SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform . PUNTCOM

    PUNTCOM         shift and go to state 407


state 380

    (136) instruccion -> NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform . PUNTCOM

    PUNTCOM         shift and go to state 408


state 381

    (137) instruccion -> ARC actualiza_instr PARIZQ expresion PARDER fin_instr1 trans . PUNTCOM

    PUNTCOM         shift and go to state 409


state 382

    (147) trans -> PUNTO . altera trans
    (149) altera -> . ROTATE actualiza_instr PARIZQ expresion PARDER fin_instr1
    (150) altera -> . STRETCH actualiza_instr PARIZQ expresion PARDER fin_instr1

    ROTATE          shift and go to state 411
    STRETCH         shift and go to state 412

    altera                         shift and go to state 410

state 383

    (140) instruccion -> COLOR actualiza_instr PARIZQ expresion COMA expresion COMA . expresion PARDER fin_color PUNTCOM
    (47) expresion -> . expr or_expr
    (50) expr -> . exp and_exp
    (53) exp -> . e rel_e
    (61) e -> . termino suma_resta
    (65) termino -> . factor mult_div
    (70) factor -> . PARIZQ push_paren e PARDER pop_paren
    (71) factor -> . var
    (72) factor -> . RESTA neg_push var neg_pop
    (75) var -> . ID actualiza_id var_func_call
    (76) var -> . CTE_I
    (77) var -> . CTE_F
    (78) var -> . error

    PARIZQ          shift and go to state 133
    RESTA           shift and go to state 135
    ID              shift and go to state 136
    CTE_I           shift and go to state 137
    CTE_F           shift and go to state 138
    error           shift and go to state 139

    expresion                      shift and go to state 413
    expr                           shift and go to state 128
    exp                            shift and go to state 129
    e                              shift and go to state 130
    termino                        shift and go to state 131
    factor                         shift and go to state 132
    var                            shift and go to state 134

state 384

    (141) instruccion -> FILLED_CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform . PUNTCOM

    PUNTCOM         shift and go to state 414


state 385

    (142) instruccion -> FILLED_SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform . PUNTCOM

    PUNTCOM         shift and go to state 415


state 386

    (143) instruccion -> FILLED_TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform . PUNTCOM

    PUNTCOM         shift and go to state 416


state 387

    (144) instruccion -> FILLED_NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform . PUNTCOM

    PUNTCOM         shift and go to state 417


state 388

    (145) instruccion -> FILLER_COLOR actualiza_instr PARIZQ expresion COMA expresion COMA . expresion PARDER fin_color PUNTCOM
    (47) expresion -> . expr or_expr
    (50) expr -> . exp and_exp
    (53) exp -> . e rel_e
    (61) e -> . termino suma_resta
    (65) termino -> . factor mult_div
    (70) factor -> . PARIZQ push_paren e PARDER pop_paren
    (71) factor -> . var
    (72) factor -> . RESTA neg_push var neg_pop
    (75) var -> . ID actualiza_id var_func_call
    (76) var -> . CTE_I
    (77) var -> . CTE_F
    (78) var -> . error

    PARIZQ          shift and go to state 133
    RESTA           shift and go to state 135
    ID              shift and go to state 136
    CTE_I           shift and go to state 137
    CTE_F           shift and go to state 138
    error           shift and go to state 139

    expresion                      shift and go to state 418
    expr                           shift and go to state 128
    exp                            shift and go to state 129
    e                              shift and go to state 130
    termino                        shift and go to state 131
    factor                         shift and go to state 132
    var                            shift and go to state 134

state 389

    (29) func -> tipo ID actualiza_id crea_func PARIZQ . pars PARDER bloque_func
    (34) pars -> . tipo ID actualiza_id crea_var gen_dir par
    (35) pars -> .
    (124) tipo -> . INT actualiza_tipo
    (125) tipo -> . FLOAT actualiza_tipo

    PARDER          reduce using rule 35 (pars -> .)
    INT             shift and go to state 12
    FLOAT           shift and go to state 13

    tipo                           shift and go to state 42
    pars                           shift and go to state 419

state 390

    (30) func -> VOID tipo_void ID actualiza_id crea_func . PARIZQ pars PARDER bloque_func

    PARIZQ          shift and go to state 420


state 391

    (36) par -> COMA tipo ID . actualiza_id crea_var gen_dir par
    (8) actualiza_id -> .

    COMA            reduce using rule 8 (actualiza_id -> .)
    PARDER          reduce using rule 8 (actualiza_id -> .)

    actualiza_id                   shift and go to state 421

state 392

    (4) ajustes -> CANVAS BRAIZQ WIDTH CTE_I PUNTCOM HEIGHT CTE_I PUNTCOM BACKGROUND CTE_I COMA CTE_I COMA CTE_I . PUNTCOM BRADER

    PUNTCOM         shift and go to state 422


state 393

    (96) var_func_call -> PARIZQ actualiza_func args gen_era . PARDER gen_gosub

    PARDER          shift and go to state 423


state 394

    (22) vars -> tipo ID actualiza_id crea_var lista_dec vars_lista PUNTCOM mas_vars .

    ID              reduce using rule 22 (vars -> tipo ID actualiza_id crea_var lista_dec vars_lista PUNTCOM mas_vars .)
    IF              reduce using rule 22 (vars -> tipo ID actualiza_id crea_var lista_dec vars_lista PUNTCOM mas_vars .)
    PRINT           reduce using rule 22 (vars -> tipo ID actualiza_id crea_var lista_dec vars_lista PUNTCOM mas_vars .)
    REPEAT          reduce using rule 22 (vars -> tipo ID actualiza_id crea_var lista_dec vars_lista PUNTCOM mas_vars .)
    FORWARD         reduce using rule 22 (vars -> tipo ID actualiza_id crea_var lista_dec vars_lista PUNTCOM mas_vars .)
    BACKWARD        reduce using rule 22 (vars -> tipo ID actualiza_id crea_var lista_dec vars_lista PUNTCOM mas_vars .)
    LEFT            reduce using rule 22 (vars -> tipo ID actualiza_id crea_var lista_dec vars_lista PUNTCOM mas_vars .)
    RIGHT           reduce using rule 22 (vars -> tipo ID actualiza_id crea_var lista_dec vars_lista PUNTCOM mas_vars .)
    TURN            reduce using rule 22 (vars -> tipo ID actualiza_id crea_var lista_dec vars_lista PUNTCOM mas_vars .)
    SIZE            reduce using rule 22 (vars -> tipo ID actualiza_id crea_var lista_dec vars_lista PUNTCOM mas_vars .)
    CIRCLE          reduce using rule 22 (vars -> tipo ID actualiza_id crea_var lista_dec vars_lista PUNTCOM mas_vars .)
    TRIANGLE        reduce using rule 22 (vars -> tipo ID actualiza_id crea_var lista_dec vars_lista PUNTCOM mas_vars .)
    SQUARE          reduce using rule 22 (vars -> tipo ID actualiza_id crea_var lista_dec vars_lista PUNTCOM mas_vars .)
    NGON            reduce using rule 22 (vars -> tipo ID actualiza_id crea_var lista_dec vars_lista PUNTCOM mas_vars .)
    ARC             reduce using rule 22 (vars -> tipo ID actualiza_id crea_var lista_dec vars_lista PUNTCOM mas_vars .)
    UP              reduce using rule 22 (vars -> tipo ID actualiza_id crea_var lista_dec vars_lista PUNTCOM mas_vars .)
    DOWN            reduce using rule 22 (vars -> tipo ID actualiza_id crea_var lista_dec vars_lista PUNTCOM mas_vars .)
    COLOR           reduce using rule 22 (vars -> tipo ID actualiza_id crea_var lista_dec vars_lista PUNTCOM mas_vars .)
    FILLED_CIRCLE   reduce using rule 22 (vars -> tipo ID actualiza_id crea_var lista_dec vars_lista PUNTCOM mas_vars .)
    FILLED_SQUARE   reduce using rule 22 (vars -> tipo ID actualiza_id crea_var lista_dec vars_lista PUNTCOM mas_vars .)
    FILLED_TRIANGLE reduce using rule 22 (vars -> tipo ID actualiza_id crea_var lista_dec vars_lista PUNTCOM mas_vars .)
    FILLED_NGON     reduce using rule 22 (vars -> tipo ID actualiza_id crea_var lista_dec vars_lista PUNTCOM mas_vars .)
    FILLER_COLOR    reduce using rule 22 (vars -> tipo ID actualiza_id crea_var lista_dec vars_lista PUNTCOM mas_vars .)
    RETURN          reduce using rule 22 (vars -> tipo ID actualiza_id crea_var lista_dec vars_lista PUNTCOM mas_vars .)


state 395

    (25) mas_vars -> vars .

    ID              reduce using rule 25 (mas_vars -> vars .)
    IF              reduce using rule 25 (mas_vars -> vars .)
    PRINT           reduce using rule 25 (mas_vars -> vars .)
    REPEAT          reduce using rule 25 (mas_vars -> vars .)
    FORWARD         reduce using rule 25 (mas_vars -> vars .)
    BACKWARD        reduce using rule 25 (mas_vars -> vars .)
    LEFT            reduce using rule 25 (mas_vars -> vars .)
    RIGHT           reduce using rule 25 (mas_vars -> vars .)
    TURN            reduce using rule 25 (mas_vars -> vars .)
    SIZE            reduce using rule 25 (mas_vars -> vars .)
    CIRCLE          reduce using rule 25 (mas_vars -> vars .)
    TRIANGLE        reduce using rule 25 (mas_vars -> vars .)
    SQUARE          reduce using rule 25 (mas_vars -> vars .)
    NGON            reduce using rule 25 (mas_vars -> vars .)
    ARC             reduce using rule 25 (mas_vars -> vars .)
    UP              reduce using rule 25 (mas_vars -> vars .)
    DOWN            reduce using rule 25 (mas_vars -> vars .)
    COLOR           reduce using rule 25 (mas_vars -> vars .)
    FILLED_CIRCLE   reduce using rule 25 (mas_vars -> vars .)
    FILLED_SQUARE   reduce using rule 25 (mas_vars -> vars .)
    FILLED_TRIANGLE reduce using rule 25 (mas_vars -> vars .)
    FILLED_NGON     reduce using rule 25 (mas_vars -> vars .)
    FILLER_COLOR    reduce using rule 25 (mas_vars -> vars .)
    RETURN          reduce using rule 25 (mas_vars -> vars .)


state 396

    (95) func_call -> ID actualiza_id actualiza_func PARIZQ args gen_era PARDER gen_gosub .

    PUNTCOM         reduce using rule 95 (func_call -> ID actualiza_id actualiza_func PARIZQ args gen_era PARDER gen_gosub .)


state 397

    (102) arg -> COMA args .

    PARDER          reduce using rule 102 (arg -> COMA args .)


state 398

    (83) matriz -> CORIZQ expresion . CORDER pop_dim

    CORDER          shift and go to state 424


state 399

    (108) condicion -> IF PARIZQ expresion fin_exp PARDER bloque else_bloque fin_cond .

    ID              reduce using rule 108 (condicion -> IF PARIZQ expresion fin_exp PARDER bloque else_bloque fin_cond .)
    IF              reduce using rule 108 (condicion -> IF PARIZQ expresion fin_exp PARDER bloque else_bloque fin_cond .)
    PRINT           reduce using rule 108 (condicion -> IF PARIZQ expresion fin_exp PARDER bloque else_bloque fin_cond .)
    REPEAT          reduce using rule 108 (condicion -> IF PARIZQ expresion fin_exp PARDER bloque else_bloque fin_cond .)
    FORWARD         reduce using rule 108 (condicion -> IF PARIZQ expresion fin_exp PARDER bloque else_bloque fin_cond .)
    BACKWARD        reduce using rule 108 (condicion -> IF PARIZQ expresion fin_exp PARDER bloque else_bloque fin_cond .)
    LEFT            reduce using rule 108 (condicion -> IF PARIZQ expresion fin_exp PARDER bloque else_bloque fin_cond .)
    RIGHT           reduce using rule 108 (condicion -> IF PARIZQ expresion fin_exp PARDER bloque else_bloque fin_cond .)
    TURN            reduce using rule 108 (condicion -> IF PARIZQ expresion fin_exp PARDER bloque else_bloque fin_cond .)
    SIZE            reduce using rule 108 (condicion -> IF PARIZQ expresion fin_exp PARDER bloque else_bloque fin_cond .)
    CIRCLE          reduce using rule 108 (condicion -> IF PARIZQ expresion fin_exp PARDER bloque else_bloque fin_cond .)
    TRIANGLE        reduce using rule 108 (condicion -> IF PARIZQ expresion fin_exp PARDER bloque else_bloque fin_cond .)
    SQUARE          reduce using rule 108 (condicion -> IF PARIZQ expresion fin_exp PARDER bloque else_bloque fin_cond .)
    NGON            reduce using rule 108 (condicion -> IF PARIZQ expresion fin_exp PARDER bloque else_bloque fin_cond .)
    ARC             reduce using rule 108 (condicion -> IF PARIZQ expresion fin_exp PARDER bloque else_bloque fin_cond .)
    UP              reduce using rule 108 (condicion -> IF PARIZQ expresion fin_exp PARDER bloque else_bloque fin_cond .)
    DOWN            reduce using rule 108 (condicion -> IF PARIZQ expresion fin_exp PARDER bloque else_bloque fin_cond .)
    COLOR           reduce using rule 108 (condicion -> IF PARIZQ expresion fin_exp PARDER bloque else_bloque fin_cond .)
    FILLED_CIRCLE   reduce using rule 108 (condicion -> IF PARIZQ expresion fin_exp PARDER bloque else_bloque fin_cond .)
    FILLED_SQUARE   reduce using rule 108 (condicion -> IF PARIZQ expresion fin_exp PARDER bloque else_bloque fin_cond .)
    FILLED_TRIANGLE reduce using rule 108 (condicion -> IF PARIZQ expresion fin_exp PARDER bloque else_bloque fin_cond .)
    FILLED_NGON     reduce using rule 108 (condicion -> IF PARIZQ expresion fin_exp PARDER bloque else_bloque fin_cond .)
    FILLER_COLOR    reduce using rule 108 (condicion -> IF PARIZQ expresion fin_exp PARDER bloque else_bloque fin_cond .)
    RETURN          reduce using rule 108 (condicion -> IF PARIZQ expresion fin_exp PARDER bloque else_bloque fin_cond .)
    BRADER          reduce using rule 108 (condicion -> IF PARIZQ expresion fin_exp PARDER bloque else_bloque fin_cond .)


state 400

    (109) else_bloque -> ELSE inicio_else . bloque
    (94) bloque -> . BRAIZQ estatutos BRADER

    BRAIZQ          shift and go to state 316

    bloque                         shift and go to state 425

state 401

    (94) bloque -> BRAIZQ estatutos BRADER .

    ELSE            reduce using rule 94 (bloque -> BRAIZQ estatutos BRADER .)
    ID              reduce using rule 94 (bloque -> BRAIZQ estatutos BRADER .)
    IF              reduce using rule 94 (bloque -> BRAIZQ estatutos BRADER .)
    PRINT           reduce using rule 94 (bloque -> BRAIZQ estatutos BRADER .)
    REPEAT          reduce using rule 94 (bloque -> BRAIZQ estatutos BRADER .)
    FORWARD         reduce using rule 94 (bloque -> BRAIZQ estatutos BRADER .)
    BACKWARD        reduce using rule 94 (bloque -> BRAIZQ estatutos BRADER .)
    LEFT            reduce using rule 94 (bloque -> BRAIZQ estatutos BRADER .)
    RIGHT           reduce using rule 94 (bloque -> BRAIZQ estatutos BRADER .)
    TURN            reduce using rule 94 (bloque -> BRAIZQ estatutos BRADER .)
    SIZE            reduce using rule 94 (bloque -> BRAIZQ estatutos BRADER .)
    CIRCLE          reduce using rule 94 (bloque -> BRAIZQ estatutos BRADER .)
    TRIANGLE        reduce using rule 94 (bloque -> BRAIZQ estatutos BRADER .)
    SQUARE          reduce using rule 94 (bloque -> BRAIZQ estatutos BRADER .)
    NGON            reduce using rule 94 (bloque -> BRAIZQ estatutos BRADER .)
    ARC             reduce using rule 94 (bloque -> BRAIZQ estatutos BRADER .)
    UP              reduce using rule 94 (bloque -> BRAIZQ estatutos BRADER .)
    DOWN            reduce using rule 94 (bloque -> BRAIZQ estatutos BRADER .)
    COLOR           reduce using rule 94 (bloque -> BRAIZQ estatutos BRADER .)
    FILLED_CIRCLE   reduce using rule 94 (bloque -> BRAIZQ estatutos BRADER .)
    FILLED_SQUARE   reduce using rule 94 (bloque -> BRAIZQ estatutos BRADER .)
    FILLED_TRIANGLE reduce using rule 94 (bloque -> BRAIZQ estatutos BRADER .)
    FILLED_NGON     reduce using rule 94 (bloque -> BRAIZQ estatutos BRADER .)
    FILLER_COLOR    reduce using rule 94 (bloque -> BRAIZQ estatutos BRADER .)
    RETURN          reduce using rule 94 (bloque -> BRAIZQ estatutos BRADER .)
    BRADER          reduce using rule 94 (bloque -> BRAIZQ estatutos BRADER .)


state 402

    (114) ciclo -> REPEAT push_cont PARIZQ expresion fin_exp PARDER bloque fin_repeat .

    ID              reduce using rule 114 (ciclo -> REPEAT push_cont PARIZQ expresion fin_exp PARDER bloque fin_repeat .)
    IF              reduce using rule 114 (ciclo -> REPEAT push_cont PARIZQ expresion fin_exp PARDER bloque fin_repeat .)
    PRINT           reduce using rule 114 (ciclo -> REPEAT push_cont PARIZQ expresion fin_exp PARDER bloque fin_repeat .)
    REPEAT          reduce using rule 114 (ciclo -> REPEAT push_cont PARIZQ expresion fin_exp PARDER bloque fin_repeat .)
    FORWARD         reduce using rule 114 (ciclo -> REPEAT push_cont PARIZQ expresion fin_exp PARDER bloque fin_repeat .)
    BACKWARD        reduce using rule 114 (ciclo -> REPEAT push_cont PARIZQ expresion fin_exp PARDER bloque fin_repeat .)
    LEFT            reduce using rule 114 (ciclo -> REPEAT push_cont PARIZQ expresion fin_exp PARDER bloque fin_repeat .)
    RIGHT           reduce using rule 114 (ciclo -> REPEAT push_cont PARIZQ expresion fin_exp PARDER bloque fin_repeat .)
    TURN            reduce using rule 114 (ciclo -> REPEAT push_cont PARIZQ expresion fin_exp PARDER bloque fin_repeat .)
    SIZE            reduce using rule 114 (ciclo -> REPEAT push_cont PARIZQ expresion fin_exp PARDER bloque fin_repeat .)
    CIRCLE          reduce using rule 114 (ciclo -> REPEAT push_cont PARIZQ expresion fin_exp PARDER bloque fin_repeat .)
    TRIANGLE        reduce using rule 114 (ciclo -> REPEAT push_cont PARIZQ expresion fin_exp PARDER bloque fin_repeat .)
    SQUARE          reduce using rule 114 (ciclo -> REPEAT push_cont PARIZQ expresion fin_exp PARDER bloque fin_repeat .)
    NGON            reduce using rule 114 (ciclo -> REPEAT push_cont PARIZQ expresion fin_exp PARDER bloque fin_repeat .)
    ARC             reduce using rule 114 (ciclo -> REPEAT push_cont PARIZQ expresion fin_exp PARDER bloque fin_repeat .)
    UP              reduce using rule 114 (ciclo -> REPEAT push_cont PARIZQ expresion fin_exp PARDER bloque fin_repeat .)
    DOWN            reduce using rule 114 (ciclo -> REPEAT push_cont PARIZQ expresion fin_exp PARDER bloque fin_repeat .)
    COLOR           reduce using rule 114 (ciclo -> REPEAT push_cont PARIZQ expresion fin_exp PARDER bloque fin_repeat .)
    FILLED_CIRCLE   reduce using rule 114 (ciclo -> REPEAT push_cont PARIZQ expresion fin_exp PARDER bloque fin_repeat .)
    FILLED_SQUARE   reduce using rule 114 (ciclo -> REPEAT push_cont PARIZQ expresion fin_exp PARDER bloque fin_repeat .)
    FILLED_TRIANGLE reduce using rule 114 (ciclo -> REPEAT push_cont PARIZQ expresion fin_exp PARDER bloque fin_repeat .)
    FILLED_NGON     reduce using rule 114 (ciclo -> REPEAT push_cont PARIZQ expresion fin_exp PARDER bloque fin_repeat .)
    FILLER_COLOR    reduce using rule 114 (ciclo -> REPEAT push_cont PARIZQ expresion fin_exp PARDER bloque fin_repeat .)
    RETURN          reduce using rule 114 (ciclo -> REPEAT push_cont PARIZQ expresion fin_exp PARDER bloque fin_repeat .)
    BRADER          reduce using rule 114 (ciclo -> REPEAT push_cont PARIZQ expresion fin_exp PARDER bloque fin_repeat .)


state 403

    (133) instruccion -> CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .

    ID              reduce using rule 133 (instruccion -> CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    IF              reduce using rule 133 (instruccion -> CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    PRINT           reduce using rule 133 (instruccion -> CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    REPEAT          reduce using rule 133 (instruccion -> CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    FORWARD         reduce using rule 133 (instruccion -> CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    BACKWARD        reduce using rule 133 (instruccion -> CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    LEFT            reduce using rule 133 (instruccion -> CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    RIGHT           reduce using rule 133 (instruccion -> CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    TURN            reduce using rule 133 (instruccion -> CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    SIZE            reduce using rule 133 (instruccion -> CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    CIRCLE          reduce using rule 133 (instruccion -> CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    TRIANGLE        reduce using rule 133 (instruccion -> CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    SQUARE          reduce using rule 133 (instruccion -> CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    NGON            reduce using rule 133 (instruccion -> CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    ARC             reduce using rule 133 (instruccion -> CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    UP              reduce using rule 133 (instruccion -> CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    DOWN            reduce using rule 133 (instruccion -> CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    COLOR           reduce using rule 133 (instruccion -> CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    FILLED_CIRCLE   reduce using rule 133 (instruccion -> CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    FILLED_SQUARE   reduce using rule 133 (instruccion -> CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    FILLED_TRIANGLE reduce using rule 133 (instruccion -> CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    FILLED_NGON     reduce using rule 133 (instruccion -> CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    FILLER_COLOR    reduce using rule 133 (instruccion -> CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    RETURN          reduce using rule 133 (instruccion -> CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    BRADER          reduce using rule 133 (instruccion -> CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)


state 404

    (151) transform -> fill trans .

    PUNTCOM         reduce using rule 151 (transform -> fill trans .)


state 405

    (146) fill -> PUNTO FILL . actualiza_instr PARIZQ PARDER fin_instr
    (153) actualiza_instr -> .

    PARIZQ          reduce using rule 153 (actualiza_instr -> .)

    actualiza_instr                shift and go to state 426

state 406

    (134) instruccion -> TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .

    ID              reduce using rule 134 (instruccion -> TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    IF              reduce using rule 134 (instruccion -> TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    PRINT           reduce using rule 134 (instruccion -> TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    REPEAT          reduce using rule 134 (instruccion -> TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    FORWARD         reduce using rule 134 (instruccion -> TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    BACKWARD        reduce using rule 134 (instruccion -> TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    LEFT            reduce using rule 134 (instruccion -> TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    RIGHT           reduce using rule 134 (instruccion -> TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    TURN            reduce using rule 134 (instruccion -> TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    SIZE            reduce using rule 134 (instruccion -> TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    CIRCLE          reduce using rule 134 (instruccion -> TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    TRIANGLE        reduce using rule 134 (instruccion -> TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    SQUARE          reduce using rule 134 (instruccion -> TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    NGON            reduce using rule 134 (instruccion -> TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    ARC             reduce using rule 134 (instruccion -> TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    UP              reduce using rule 134 (instruccion -> TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    DOWN            reduce using rule 134 (instruccion -> TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    COLOR           reduce using rule 134 (instruccion -> TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    FILLED_CIRCLE   reduce using rule 134 (instruccion -> TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    FILLED_SQUARE   reduce using rule 134 (instruccion -> TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    FILLED_TRIANGLE reduce using rule 134 (instruccion -> TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    FILLED_NGON     reduce using rule 134 (instruccion -> TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    FILLER_COLOR    reduce using rule 134 (instruccion -> TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    RETURN          reduce using rule 134 (instruccion -> TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    BRADER          reduce using rule 134 (instruccion -> TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)


state 407

    (135) instruccion -> SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .

    ID              reduce using rule 135 (instruccion -> SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    IF              reduce using rule 135 (instruccion -> SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    PRINT           reduce using rule 135 (instruccion -> SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    REPEAT          reduce using rule 135 (instruccion -> SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    FORWARD         reduce using rule 135 (instruccion -> SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    BACKWARD        reduce using rule 135 (instruccion -> SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    LEFT            reduce using rule 135 (instruccion -> SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    RIGHT           reduce using rule 135 (instruccion -> SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    TURN            reduce using rule 135 (instruccion -> SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    SIZE            reduce using rule 135 (instruccion -> SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    CIRCLE          reduce using rule 135 (instruccion -> SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    TRIANGLE        reduce using rule 135 (instruccion -> SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    SQUARE          reduce using rule 135 (instruccion -> SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    NGON            reduce using rule 135 (instruccion -> SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    ARC             reduce using rule 135 (instruccion -> SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    UP              reduce using rule 135 (instruccion -> SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    DOWN            reduce using rule 135 (instruccion -> SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    COLOR           reduce using rule 135 (instruccion -> SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    FILLED_CIRCLE   reduce using rule 135 (instruccion -> SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    FILLED_SQUARE   reduce using rule 135 (instruccion -> SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    FILLED_TRIANGLE reduce using rule 135 (instruccion -> SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    FILLED_NGON     reduce using rule 135 (instruccion -> SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    FILLER_COLOR    reduce using rule 135 (instruccion -> SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    RETURN          reduce using rule 135 (instruccion -> SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    BRADER          reduce using rule 135 (instruccion -> SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)


state 408

    (136) instruccion -> NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .

    ID              reduce using rule 136 (instruccion -> NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    IF              reduce using rule 136 (instruccion -> NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    PRINT           reduce using rule 136 (instruccion -> NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    REPEAT          reduce using rule 136 (instruccion -> NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    FORWARD         reduce using rule 136 (instruccion -> NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    BACKWARD        reduce using rule 136 (instruccion -> NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    LEFT            reduce using rule 136 (instruccion -> NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    RIGHT           reduce using rule 136 (instruccion -> NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    TURN            reduce using rule 136 (instruccion -> NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    SIZE            reduce using rule 136 (instruccion -> NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    CIRCLE          reduce using rule 136 (instruccion -> NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    TRIANGLE        reduce using rule 136 (instruccion -> NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    SQUARE          reduce using rule 136 (instruccion -> NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    NGON            reduce using rule 136 (instruccion -> NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    ARC             reduce using rule 136 (instruccion -> NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    UP              reduce using rule 136 (instruccion -> NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    DOWN            reduce using rule 136 (instruccion -> NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    COLOR           reduce using rule 136 (instruccion -> NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    FILLED_CIRCLE   reduce using rule 136 (instruccion -> NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    FILLED_SQUARE   reduce using rule 136 (instruccion -> NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    FILLED_TRIANGLE reduce using rule 136 (instruccion -> NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    FILLED_NGON     reduce using rule 136 (instruccion -> NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    FILLER_COLOR    reduce using rule 136 (instruccion -> NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    RETURN          reduce using rule 136 (instruccion -> NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    BRADER          reduce using rule 136 (instruccion -> NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)


state 409

    (137) instruccion -> ARC actualiza_instr PARIZQ expresion PARDER fin_instr1 trans PUNTCOM .

    ID              reduce using rule 137 (instruccion -> ARC actualiza_instr PARIZQ expresion PARDER fin_instr1 trans PUNTCOM .)
    IF              reduce using rule 137 (instruccion -> ARC actualiza_instr PARIZQ expresion PARDER fin_instr1 trans PUNTCOM .)
    PRINT           reduce using rule 137 (instruccion -> ARC actualiza_instr PARIZQ expresion PARDER fin_instr1 trans PUNTCOM .)
    REPEAT          reduce using rule 137 (instruccion -> ARC actualiza_instr PARIZQ expresion PARDER fin_instr1 trans PUNTCOM .)
    FORWARD         reduce using rule 137 (instruccion -> ARC actualiza_instr PARIZQ expresion PARDER fin_instr1 trans PUNTCOM .)
    BACKWARD        reduce using rule 137 (instruccion -> ARC actualiza_instr PARIZQ expresion PARDER fin_instr1 trans PUNTCOM .)
    LEFT            reduce using rule 137 (instruccion -> ARC actualiza_instr PARIZQ expresion PARDER fin_instr1 trans PUNTCOM .)
    RIGHT           reduce using rule 137 (instruccion -> ARC actualiza_instr PARIZQ expresion PARDER fin_instr1 trans PUNTCOM .)
    TURN            reduce using rule 137 (instruccion -> ARC actualiza_instr PARIZQ expresion PARDER fin_instr1 trans PUNTCOM .)
    SIZE            reduce using rule 137 (instruccion -> ARC actualiza_instr PARIZQ expresion PARDER fin_instr1 trans PUNTCOM .)
    CIRCLE          reduce using rule 137 (instruccion -> ARC actualiza_instr PARIZQ expresion PARDER fin_instr1 trans PUNTCOM .)
    TRIANGLE        reduce using rule 137 (instruccion -> ARC actualiza_instr PARIZQ expresion PARDER fin_instr1 trans PUNTCOM .)
    SQUARE          reduce using rule 137 (instruccion -> ARC actualiza_instr PARIZQ expresion PARDER fin_instr1 trans PUNTCOM .)
    NGON            reduce using rule 137 (instruccion -> ARC actualiza_instr PARIZQ expresion PARDER fin_instr1 trans PUNTCOM .)
    ARC             reduce using rule 137 (instruccion -> ARC actualiza_instr PARIZQ expresion PARDER fin_instr1 trans PUNTCOM .)
    UP              reduce using rule 137 (instruccion -> ARC actualiza_instr PARIZQ expresion PARDER fin_instr1 trans PUNTCOM .)
    DOWN            reduce using rule 137 (instruccion -> ARC actualiza_instr PARIZQ expresion PARDER fin_instr1 trans PUNTCOM .)
    COLOR           reduce using rule 137 (instruccion -> ARC actualiza_instr PARIZQ expresion PARDER fin_instr1 trans PUNTCOM .)
    FILLED_CIRCLE   reduce using rule 137 (instruccion -> ARC actualiza_instr PARIZQ expresion PARDER fin_instr1 trans PUNTCOM .)
    FILLED_SQUARE   reduce using rule 137 (instruccion -> ARC actualiza_instr PARIZQ expresion PARDER fin_instr1 trans PUNTCOM .)
    FILLED_TRIANGLE reduce using rule 137 (instruccion -> ARC actualiza_instr PARIZQ expresion PARDER fin_instr1 trans PUNTCOM .)
    FILLED_NGON     reduce using rule 137 (instruccion -> ARC actualiza_instr PARIZQ expresion PARDER fin_instr1 trans PUNTCOM .)
    FILLER_COLOR    reduce using rule 137 (instruccion -> ARC actualiza_instr PARIZQ expresion PARDER fin_instr1 trans PUNTCOM .)
    RETURN          reduce using rule 137 (instruccion -> ARC actualiza_instr PARIZQ expresion PARDER fin_instr1 trans PUNTCOM .)
    BRADER          reduce using rule 137 (instruccion -> ARC actualiza_instr PARIZQ expresion PARDER fin_instr1 trans PUNTCOM .)


state 410

    (147) trans -> PUNTO altera . trans
    (147) trans -> . PUNTO altera trans
    (148) trans -> .

    PUNTO           shift and go to state 382
    PUNTCOM         reduce using rule 148 (trans -> .)

    trans                          shift and go to state 427

state 411

    (149) altera -> ROTATE . actualiza_instr PARIZQ expresion PARDER fin_instr1
    (153) actualiza_instr -> .

    PARIZQ          reduce using rule 153 (actualiza_instr -> .)

    actualiza_instr                shift and go to state 428

state 412

    (150) altera -> STRETCH . actualiza_instr PARIZQ expresion PARDER fin_instr1
    (153) actualiza_instr -> .

    PARIZQ          reduce using rule 153 (actualiza_instr -> .)

    actualiza_instr                shift and go to state 429

state 413

    (140) instruccion -> COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion . PARDER fin_color PUNTCOM

    PARDER          shift and go to state 430


state 414

    (141) instruccion -> FILLED_CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .

    ID              reduce using rule 141 (instruccion -> FILLED_CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    IF              reduce using rule 141 (instruccion -> FILLED_CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    PRINT           reduce using rule 141 (instruccion -> FILLED_CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    REPEAT          reduce using rule 141 (instruccion -> FILLED_CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    FORWARD         reduce using rule 141 (instruccion -> FILLED_CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    BACKWARD        reduce using rule 141 (instruccion -> FILLED_CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    LEFT            reduce using rule 141 (instruccion -> FILLED_CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    RIGHT           reduce using rule 141 (instruccion -> FILLED_CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    TURN            reduce using rule 141 (instruccion -> FILLED_CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    SIZE            reduce using rule 141 (instruccion -> FILLED_CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    CIRCLE          reduce using rule 141 (instruccion -> FILLED_CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    TRIANGLE        reduce using rule 141 (instruccion -> FILLED_CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    SQUARE          reduce using rule 141 (instruccion -> FILLED_CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    NGON            reduce using rule 141 (instruccion -> FILLED_CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    ARC             reduce using rule 141 (instruccion -> FILLED_CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    UP              reduce using rule 141 (instruccion -> FILLED_CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    DOWN            reduce using rule 141 (instruccion -> FILLED_CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    COLOR           reduce using rule 141 (instruccion -> FILLED_CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    FILLED_CIRCLE   reduce using rule 141 (instruccion -> FILLED_CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    FILLED_SQUARE   reduce using rule 141 (instruccion -> FILLED_CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    FILLED_TRIANGLE reduce using rule 141 (instruccion -> FILLED_CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    FILLED_NGON     reduce using rule 141 (instruccion -> FILLED_CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    FILLER_COLOR    reduce using rule 141 (instruccion -> FILLED_CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    RETURN          reduce using rule 141 (instruccion -> FILLED_CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    BRADER          reduce using rule 141 (instruccion -> FILLED_CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)


state 415

    (142) instruccion -> FILLED_SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .

    ID              reduce using rule 142 (instruccion -> FILLED_SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    IF              reduce using rule 142 (instruccion -> FILLED_SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    PRINT           reduce using rule 142 (instruccion -> FILLED_SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    REPEAT          reduce using rule 142 (instruccion -> FILLED_SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    FORWARD         reduce using rule 142 (instruccion -> FILLED_SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    BACKWARD        reduce using rule 142 (instruccion -> FILLED_SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    LEFT            reduce using rule 142 (instruccion -> FILLED_SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    RIGHT           reduce using rule 142 (instruccion -> FILLED_SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    TURN            reduce using rule 142 (instruccion -> FILLED_SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    SIZE            reduce using rule 142 (instruccion -> FILLED_SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    CIRCLE          reduce using rule 142 (instruccion -> FILLED_SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    TRIANGLE        reduce using rule 142 (instruccion -> FILLED_SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    SQUARE          reduce using rule 142 (instruccion -> FILLED_SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    NGON            reduce using rule 142 (instruccion -> FILLED_SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    ARC             reduce using rule 142 (instruccion -> FILLED_SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    UP              reduce using rule 142 (instruccion -> FILLED_SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    DOWN            reduce using rule 142 (instruccion -> FILLED_SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    COLOR           reduce using rule 142 (instruccion -> FILLED_SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    FILLED_CIRCLE   reduce using rule 142 (instruccion -> FILLED_SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    FILLED_SQUARE   reduce using rule 142 (instruccion -> FILLED_SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    FILLED_TRIANGLE reduce using rule 142 (instruccion -> FILLED_SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    FILLED_NGON     reduce using rule 142 (instruccion -> FILLED_SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    FILLER_COLOR    reduce using rule 142 (instruccion -> FILLED_SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    RETURN          reduce using rule 142 (instruccion -> FILLED_SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    BRADER          reduce using rule 142 (instruccion -> FILLED_SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)


state 416

    (143) instruccion -> FILLED_TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .

    ID              reduce using rule 143 (instruccion -> FILLED_TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    IF              reduce using rule 143 (instruccion -> FILLED_TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    PRINT           reduce using rule 143 (instruccion -> FILLED_TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    REPEAT          reduce using rule 143 (instruccion -> FILLED_TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    FORWARD         reduce using rule 143 (instruccion -> FILLED_TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    BACKWARD        reduce using rule 143 (instruccion -> FILLED_TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    LEFT            reduce using rule 143 (instruccion -> FILLED_TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    RIGHT           reduce using rule 143 (instruccion -> FILLED_TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    TURN            reduce using rule 143 (instruccion -> FILLED_TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    SIZE            reduce using rule 143 (instruccion -> FILLED_TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    CIRCLE          reduce using rule 143 (instruccion -> FILLED_TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    TRIANGLE        reduce using rule 143 (instruccion -> FILLED_TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    SQUARE          reduce using rule 143 (instruccion -> FILLED_TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    NGON            reduce using rule 143 (instruccion -> FILLED_TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    ARC             reduce using rule 143 (instruccion -> FILLED_TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    UP              reduce using rule 143 (instruccion -> FILLED_TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    DOWN            reduce using rule 143 (instruccion -> FILLED_TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    COLOR           reduce using rule 143 (instruccion -> FILLED_TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    FILLED_CIRCLE   reduce using rule 143 (instruccion -> FILLED_TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    FILLED_SQUARE   reduce using rule 143 (instruccion -> FILLED_TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    FILLED_TRIANGLE reduce using rule 143 (instruccion -> FILLED_TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    FILLED_NGON     reduce using rule 143 (instruccion -> FILLED_TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    FILLER_COLOR    reduce using rule 143 (instruccion -> FILLED_TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    RETURN          reduce using rule 143 (instruccion -> FILLED_TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    BRADER          reduce using rule 143 (instruccion -> FILLED_TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)


state 417

    (144) instruccion -> FILLED_NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .

    ID              reduce using rule 144 (instruccion -> FILLED_NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    IF              reduce using rule 144 (instruccion -> FILLED_NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    PRINT           reduce using rule 144 (instruccion -> FILLED_NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    REPEAT          reduce using rule 144 (instruccion -> FILLED_NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    FORWARD         reduce using rule 144 (instruccion -> FILLED_NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    BACKWARD        reduce using rule 144 (instruccion -> FILLED_NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    LEFT            reduce using rule 144 (instruccion -> FILLED_NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    RIGHT           reduce using rule 144 (instruccion -> FILLED_NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    TURN            reduce using rule 144 (instruccion -> FILLED_NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    SIZE            reduce using rule 144 (instruccion -> FILLED_NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    CIRCLE          reduce using rule 144 (instruccion -> FILLED_NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    TRIANGLE        reduce using rule 144 (instruccion -> FILLED_NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    SQUARE          reduce using rule 144 (instruccion -> FILLED_NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    NGON            reduce using rule 144 (instruccion -> FILLED_NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    ARC             reduce using rule 144 (instruccion -> FILLED_NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    UP              reduce using rule 144 (instruccion -> FILLED_NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    DOWN            reduce using rule 144 (instruccion -> FILLED_NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    COLOR           reduce using rule 144 (instruccion -> FILLED_NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    FILLED_CIRCLE   reduce using rule 144 (instruccion -> FILLED_NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    FILLED_SQUARE   reduce using rule 144 (instruccion -> FILLED_NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    FILLED_TRIANGLE reduce using rule 144 (instruccion -> FILLED_NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    FILLED_NGON     reduce using rule 144 (instruccion -> FILLED_NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    FILLER_COLOR    reduce using rule 144 (instruccion -> FILLED_NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    RETURN          reduce using rule 144 (instruccion -> FILLED_NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)
    BRADER          reduce using rule 144 (instruccion -> FILLED_NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM .)


state 418

    (145) instruccion -> FILLER_COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion . PARDER fin_color PUNTCOM

    PARDER          shift and go to state 431


state 419

    (29) func -> tipo ID actualiza_id crea_func PARIZQ pars . PARDER bloque_func

    PARDER          shift and go to state 432


state 420

    (30) func -> VOID tipo_void ID actualiza_id crea_func PARIZQ . pars PARDER bloque_func
    (34) pars -> . tipo ID actualiza_id crea_var gen_dir par
    (35) pars -> .
    (124) tipo -> . INT actualiza_tipo
    (125) tipo -> . FLOAT actualiza_tipo

    PARDER          reduce using rule 35 (pars -> .)
    INT             shift and go to state 12
    FLOAT           shift and go to state 13

    pars                           shift and go to state 433
    tipo                           shift and go to state 42

state 421

    (36) par -> COMA tipo ID actualiza_id . crea_var gen_dir par
    (11) crea_var -> .

    COMA            reduce using rule 11 (crea_var -> .)
    PARDER          reduce using rule 11 (crea_var -> .)

    crea_var                       shift and go to state 434

state 422

    (4) ajustes -> CANVAS BRAIZQ WIDTH CTE_I PUNTCOM HEIGHT CTE_I PUNTCOM BACKGROUND CTE_I COMA CTE_I COMA CTE_I PUNTCOM . BRADER

    BRADER          shift and go to state 435


state 423

    (96) var_func_call -> PARIZQ actualiza_func args gen_era PARDER . gen_gosub
    (99) gen_gosub -> .

    MULT            reduce using rule 99 (gen_gosub -> .)
    DIV             reduce using rule 99 (gen_gosub -> .)
    MOD             reduce using rule 99 (gen_gosub -> .)
    SUMA            reduce using rule 99 (gen_gosub -> .)
    RESTA           reduce using rule 99 (gen_gosub -> .)
    DIF             reduce using rule 99 (gen_gosub -> .)
    MENOR           reduce using rule 99 (gen_gosub -> .)
    MAYOR           reduce using rule 99 (gen_gosub -> .)
    MENIGUAL        reduce using rule 99 (gen_gosub -> .)
    MAYIGUAL        reduce using rule 99 (gen_gosub -> .)
    IGUAL           reduce using rule 99 (gen_gosub -> .)
    AND             reduce using rule 99 (gen_gosub -> .)
    OR              reduce using rule 99 (gen_gosub -> .)
    PUNTCOM         reduce using rule 99 (gen_gosub -> .)
    PARDER          reduce using rule 99 (gen_gosub -> .)
    COMA            reduce using rule 99 (gen_gosub -> .)
    CORDER          reduce using rule 99 (gen_gosub -> .)

    gen_gosub                      shift and go to state 436

state 424

    (83) matriz -> CORIZQ expresion CORDER . pop_dim
    (80) pop_dim -> .

    ASIG            reduce using rule 80 (pop_dim -> .)
    MULT            reduce using rule 80 (pop_dim -> .)
    DIV             reduce using rule 80 (pop_dim -> .)
    MOD             reduce using rule 80 (pop_dim -> .)
    SUMA            reduce using rule 80 (pop_dim -> .)
    RESTA           reduce using rule 80 (pop_dim -> .)
    DIF             reduce using rule 80 (pop_dim -> .)
    MENOR           reduce using rule 80 (pop_dim -> .)
    MAYOR           reduce using rule 80 (pop_dim -> .)
    MENIGUAL        reduce using rule 80 (pop_dim -> .)
    MAYIGUAL        reduce using rule 80 (pop_dim -> .)
    IGUAL           reduce using rule 80 (pop_dim -> .)
    AND             reduce using rule 80 (pop_dim -> .)
    OR              reduce using rule 80 (pop_dim -> .)
    PUNTCOM         reduce using rule 80 (pop_dim -> .)
    PARDER          reduce using rule 80 (pop_dim -> .)
    COMA            reduce using rule 80 (pop_dim -> .)
    CORDER          reduce using rule 80 (pop_dim -> .)

    pop_dim                        shift and go to state 437

state 425

    (109) else_bloque -> ELSE inicio_else bloque .

    ID              reduce using rule 109 (else_bloque -> ELSE inicio_else bloque .)
    IF              reduce using rule 109 (else_bloque -> ELSE inicio_else bloque .)
    PRINT           reduce using rule 109 (else_bloque -> ELSE inicio_else bloque .)
    REPEAT          reduce using rule 109 (else_bloque -> ELSE inicio_else bloque .)
    FORWARD         reduce using rule 109 (else_bloque -> ELSE inicio_else bloque .)
    BACKWARD        reduce using rule 109 (else_bloque -> ELSE inicio_else bloque .)
    LEFT            reduce using rule 109 (else_bloque -> ELSE inicio_else bloque .)
    RIGHT           reduce using rule 109 (else_bloque -> ELSE inicio_else bloque .)
    TURN            reduce using rule 109 (else_bloque -> ELSE inicio_else bloque .)
    SIZE            reduce using rule 109 (else_bloque -> ELSE inicio_else bloque .)
    CIRCLE          reduce using rule 109 (else_bloque -> ELSE inicio_else bloque .)
    TRIANGLE        reduce using rule 109 (else_bloque -> ELSE inicio_else bloque .)
    SQUARE          reduce using rule 109 (else_bloque -> ELSE inicio_else bloque .)
    NGON            reduce using rule 109 (else_bloque -> ELSE inicio_else bloque .)
    ARC             reduce using rule 109 (else_bloque -> ELSE inicio_else bloque .)
    UP              reduce using rule 109 (else_bloque -> ELSE inicio_else bloque .)
    DOWN            reduce using rule 109 (else_bloque -> ELSE inicio_else bloque .)
    COLOR           reduce using rule 109 (else_bloque -> ELSE inicio_else bloque .)
    FILLED_CIRCLE   reduce using rule 109 (else_bloque -> ELSE inicio_else bloque .)
    FILLED_SQUARE   reduce using rule 109 (else_bloque -> ELSE inicio_else bloque .)
    FILLED_TRIANGLE reduce using rule 109 (else_bloque -> ELSE inicio_else bloque .)
    FILLED_NGON     reduce using rule 109 (else_bloque -> ELSE inicio_else bloque .)
    FILLER_COLOR    reduce using rule 109 (else_bloque -> ELSE inicio_else bloque .)
    RETURN          reduce using rule 109 (else_bloque -> ELSE inicio_else bloque .)
    BRADER          reduce using rule 109 (else_bloque -> ELSE inicio_else bloque .)


state 426

    (146) fill -> PUNTO FILL actualiza_instr . PARIZQ PARDER fin_instr

    PARIZQ          shift and go to state 438


state 427

    (147) trans -> PUNTO altera trans .

    PUNTCOM         reduce using rule 147 (trans -> PUNTO altera trans .)


state 428

    (149) altera -> ROTATE actualiza_instr . PARIZQ expresion PARDER fin_instr1

    PARIZQ          shift and go to state 439


state 429

    (150) altera -> STRETCH actualiza_instr . PARIZQ expresion PARDER fin_instr1

    PARIZQ          shift and go to state 440


state 430

    (140) instruccion -> COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER . fin_color PUNTCOM
    (157) fin_color -> .

    PUNTCOM         reduce using rule 157 (fin_color -> .)

    fin_color                      shift and go to state 441

state 431

    (145) instruccion -> FILLER_COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER . fin_color PUNTCOM
    (157) fin_color -> .

    PUNTCOM         reduce using rule 157 (fin_color -> .)

    fin_color                      shift and go to state 442

state 432

    (29) func -> tipo ID actualiza_id crea_func PARIZQ pars PARDER . bloque_func
    (16) bloque_func -> . BRAIZQ vars_estatutos RETURN returns BRADER end_sub

    BRAIZQ          shift and go to state 40

    bloque_func                    shift and go to state 443

state 433

    (30) func -> VOID tipo_void ID actualiza_id crea_func PARIZQ pars . PARDER bloque_func

    PARDER          shift and go to state 444


state 434

    (36) par -> COMA tipo ID actualiza_id crea_var . gen_dir par
    (38) gen_dir -> .

    COMA            reduce using rule 38 (gen_dir -> .)
    PARDER          reduce using rule 38 (gen_dir -> .)

    gen_dir                        shift and go to state 445

state 435

    (4) ajustes -> CANVAS BRAIZQ WIDTH CTE_I PUNTCOM HEIGHT CTE_I PUNTCOM BACKGROUND CTE_I COMA CTE_I COMA CTE_I PUNTCOM BRADER .

    VOID            reduce using rule 4 (ajustes -> CANVAS BRAIZQ WIDTH CTE_I PUNTCOM HEIGHT CTE_I PUNTCOM BACKGROUND CTE_I COMA CTE_I COMA CTE_I PUNTCOM BRADER .)
    INT             reduce using rule 4 (ajustes -> CANVAS BRAIZQ WIDTH CTE_I PUNTCOM HEIGHT CTE_I PUNTCOM BACKGROUND CTE_I COMA CTE_I COMA CTE_I PUNTCOM BRADER .)
    FLOAT           reduce using rule 4 (ajustes -> CANVAS BRAIZQ WIDTH CTE_I PUNTCOM HEIGHT CTE_I PUNTCOM BACKGROUND CTE_I COMA CTE_I COMA CTE_I PUNTCOM BRADER .)
    MAIN            reduce using rule 4 (ajustes -> CANVAS BRAIZQ WIDTH CTE_I PUNTCOM HEIGHT CTE_I PUNTCOM BACKGROUND CTE_I COMA CTE_I COMA CTE_I PUNTCOM BRADER .)


state 436

    (96) var_func_call -> PARIZQ actualiza_func args gen_era PARDER gen_gosub .

    MULT            reduce using rule 96 (var_func_call -> PARIZQ actualiza_func args gen_era PARDER gen_gosub .)
    DIV             reduce using rule 96 (var_func_call -> PARIZQ actualiza_func args gen_era PARDER gen_gosub .)
    MOD             reduce using rule 96 (var_func_call -> PARIZQ actualiza_func args gen_era PARDER gen_gosub .)
    SUMA            reduce using rule 96 (var_func_call -> PARIZQ actualiza_func args gen_era PARDER gen_gosub .)
    RESTA           reduce using rule 96 (var_func_call -> PARIZQ actualiza_func args gen_era PARDER gen_gosub .)
    DIF             reduce using rule 96 (var_func_call -> PARIZQ actualiza_func args gen_era PARDER gen_gosub .)
    MENOR           reduce using rule 96 (var_func_call -> PARIZQ actualiza_func args gen_era PARDER gen_gosub .)
    MAYOR           reduce using rule 96 (var_func_call -> PARIZQ actualiza_func args gen_era PARDER gen_gosub .)
    MENIGUAL        reduce using rule 96 (var_func_call -> PARIZQ actualiza_func args gen_era PARDER gen_gosub .)
    MAYIGUAL        reduce using rule 96 (var_func_call -> PARIZQ actualiza_func args gen_era PARDER gen_gosub .)
    IGUAL           reduce using rule 96 (var_func_call -> PARIZQ actualiza_func args gen_era PARDER gen_gosub .)
    AND             reduce using rule 96 (var_func_call -> PARIZQ actualiza_func args gen_era PARDER gen_gosub .)
    OR              reduce using rule 96 (var_func_call -> PARIZQ actualiza_func args gen_era PARDER gen_gosub .)
    PUNTCOM         reduce using rule 96 (var_func_call -> PARIZQ actualiza_func args gen_era PARDER gen_gosub .)
    PARDER          reduce using rule 96 (var_func_call -> PARIZQ actualiza_func args gen_era PARDER gen_gosub .)
    COMA            reduce using rule 96 (var_func_call -> PARIZQ actualiza_func args gen_era PARDER gen_gosub .)
    CORDER          reduce using rule 96 (var_func_call -> PARIZQ actualiza_func args gen_era PARDER gen_gosub .)


state 437

    (83) matriz -> CORIZQ expresion CORDER pop_dim .

    ASIG            reduce using rule 83 (matriz -> CORIZQ expresion CORDER pop_dim .)
    MULT            reduce using rule 83 (matriz -> CORIZQ expresion CORDER pop_dim .)
    DIV             reduce using rule 83 (matriz -> CORIZQ expresion CORDER pop_dim .)
    MOD             reduce using rule 83 (matriz -> CORIZQ expresion CORDER pop_dim .)
    SUMA            reduce using rule 83 (matriz -> CORIZQ expresion CORDER pop_dim .)
    RESTA           reduce using rule 83 (matriz -> CORIZQ expresion CORDER pop_dim .)
    DIF             reduce using rule 83 (matriz -> CORIZQ expresion CORDER pop_dim .)
    MENOR           reduce using rule 83 (matriz -> CORIZQ expresion CORDER pop_dim .)
    MAYOR           reduce using rule 83 (matriz -> CORIZQ expresion CORDER pop_dim .)
    MENIGUAL        reduce using rule 83 (matriz -> CORIZQ expresion CORDER pop_dim .)
    MAYIGUAL        reduce using rule 83 (matriz -> CORIZQ expresion CORDER pop_dim .)
    IGUAL           reduce using rule 83 (matriz -> CORIZQ expresion CORDER pop_dim .)
    AND             reduce using rule 83 (matriz -> CORIZQ expresion CORDER pop_dim .)
    OR              reduce using rule 83 (matriz -> CORIZQ expresion CORDER pop_dim .)
    PUNTCOM         reduce using rule 83 (matriz -> CORIZQ expresion CORDER pop_dim .)
    PARDER          reduce using rule 83 (matriz -> CORIZQ expresion CORDER pop_dim .)
    COMA            reduce using rule 83 (matriz -> CORIZQ expresion CORDER pop_dim .)
    CORDER          reduce using rule 83 (matriz -> CORIZQ expresion CORDER pop_dim .)


state 438

    (146) fill -> PUNTO FILL actualiza_instr PARIZQ . PARDER fin_instr

    PARDER          shift and go to state 446


state 439

    (149) altera -> ROTATE actualiza_instr PARIZQ . expresion PARDER fin_instr1
    (47) expresion -> . expr or_expr
    (50) expr -> . exp and_exp
    (53) exp -> . e rel_e
    (61) e -> . termino suma_resta
    (65) termino -> . factor mult_div
    (70) factor -> . PARIZQ push_paren e PARDER pop_paren
    (71) factor -> . var
    (72) factor -> . RESTA neg_push var neg_pop
    (75) var -> . ID actualiza_id var_func_call
    (76) var -> . CTE_I
    (77) var -> . CTE_F
    (78) var -> . error

    PARIZQ          shift and go to state 133
    RESTA           shift and go to state 135
    ID              shift and go to state 136
    CTE_I           shift and go to state 137
    CTE_F           shift and go to state 138
    error           shift and go to state 139

    expresion                      shift and go to state 447
    expr                           shift and go to state 128
    exp                            shift and go to state 129
    e                              shift and go to state 130
    termino                        shift and go to state 131
    factor                         shift and go to state 132
    var                            shift and go to state 134

state 440

    (150) altera -> STRETCH actualiza_instr PARIZQ . expresion PARDER fin_instr1
    (47) expresion -> . expr or_expr
    (50) expr -> . exp and_exp
    (53) exp -> . e rel_e
    (61) e -> . termino suma_resta
    (65) termino -> . factor mult_div
    (70) factor -> . PARIZQ push_paren e PARDER pop_paren
    (71) factor -> . var
    (72) factor -> . RESTA neg_push var neg_pop
    (75) var -> . ID actualiza_id var_func_call
    (76) var -> . CTE_I
    (77) var -> . CTE_F
    (78) var -> . error

    PARIZQ          shift and go to state 133
    RESTA           shift and go to state 135
    ID              shift and go to state 136
    CTE_I           shift and go to state 137
    CTE_F           shift and go to state 138
    error           shift and go to state 139

    expresion                      shift and go to state 448
    expr                           shift and go to state 128
    exp                            shift and go to state 129
    e                              shift and go to state 130
    termino                        shift and go to state 131
    factor                         shift and go to state 132
    var                            shift and go to state 134

state 441

    (140) instruccion -> COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color . PUNTCOM

    PUNTCOM         shift and go to state 449


state 442

    (145) instruccion -> FILLER_COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color . PUNTCOM

    PUNTCOM         shift and go to state 450


state 443

    (29) func -> tipo ID actualiza_id crea_func PARIZQ pars PARDER bloque_func .

    VOID            reduce using rule 29 (func -> tipo ID actualiza_id crea_func PARIZQ pars PARDER bloque_func .)
    INT             reduce using rule 29 (func -> tipo ID actualiza_id crea_func PARIZQ pars PARDER bloque_func .)
    FLOAT           reduce using rule 29 (func -> tipo ID actualiza_id crea_func PARIZQ pars PARDER bloque_func .)
    MAIN            reduce using rule 29 (func -> tipo ID actualiza_id crea_func PARIZQ pars PARDER bloque_func .)


state 444

    (30) func -> VOID tipo_void ID actualiza_id crea_func PARIZQ pars PARDER . bloque_func
    (16) bloque_func -> . BRAIZQ vars_estatutos RETURN returns BRADER end_sub

    BRAIZQ          shift and go to state 40

    bloque_func                    shift and go to state 451

state 445

    (36) par -> COMA tipo ID actualiza_id crea_var gen_dir . par
    (36) par -> . COMA tipo ID actualiza_id crea_var gen_dir par
    (37) par -> .

    COMA            shift and go to state 290
    PARDER          reduce using rule 37 (par -> .)

    par                            shift and go to state 452

state 446

    (146) fill -> PUNTO FILL actualiza_instr PARIZQ PARDER . fin_instr
    (154) fin_instr -> .

    PUNTO           reduce using rule 154 (fin_instr -> .)
    PUNTCOM         reduce using rule 154 (fin_instr -> .)

    fin_instr                      shift and go to state 453

state 447

    (149) altera -> ROTATE actualiza_instr PARIZQ expresion . PARDER fin_instr1

    PARDER          shift and go to state 454


state 448

    (150) altera -> STRETCH actualiza_instr PARIZQ expresion . PARDER fin_instr1

    PARDER          shift and go to state 455


state 449

    (140) instruccion -> COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM .

    ID              reduce using rule 140 (instruccion -> COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM .)
    IF              reduce using rule 140 (instruccion -> COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM .)
    PRINT           reduce using rule 140 (instruccion -> COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM .)
    REPEAT          reduce using rule 140 (instruccion -> COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM .)
    FORWARD         reduce using rule 140 (instruccion -> COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM .)
    BACKWARD        reduce using rule 140 (instruccion -> COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM .)
    LEFT            reduce using rule 140 (instruccion -> COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM .)
    RIGHT           reduce using rule 140 (instruccion -> COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM .)
    TURN            reduce using rule 140 (instruccion -> COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM .)
    SIZE            reduce using rule 140 (instruccion -> COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM .)
    CIRCLE          reduce using rule 140 (instruccion -> COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM .)
    TRIANGLE        reduce using rule 140 (instruccion -> COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM .)
    SQUARE          reduce using rule 140 (instruccion -> COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM .)
    NGON            reduce using rule 140 (instruccion -> COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM .)
    ARC             reduce using rule 140 (instruccion -> COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM .)
    UP              reduce using rule 140 (instruccion -> COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM .)
    DOWN            reduce using rule 140 (instruccion -> COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM .)
    COLOR           reduce using rule 140 (instruccion -> COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM .)
    FILLED_CIRCLE   reduce using rule 140 (instruccion -> COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM .)
    FILLED_SQUARE   reduce using rule 140 (instruccion -> COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM .)
    FILLED_TRIANGLE reduce using rule 140 (instruccion -> COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM .)
    FILLED_NGON     reduce using rule 140 (instruccion -> COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM .)
    FILLER_COLOR    reduce using rule 140 (instruccion -> COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM .)
    RETURN          reduce using rule 140 (instruccion -> COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM .)
    BRADER          reduce using rule 140 (instruccion -> COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM .)


state 450

    (145) instruccion -> FILLER_COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM .

    ID              reduce using rule 145 (instruccion -> FILLER_COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM .)
    IF              reduce using rule 145 (instruccion -> FILLER_COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM .)
    PRINT           reduce using rule 145 (instruccion -> FILLER_COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM .)
    REPEAT          reduce using rule 145 (instruccion -> FILLER_COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM .)
    FORWARD         reduce using rule 145 (instruccion -> FILLER_COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM .)
    BACKWARD        reduce using rule 145 (instruccion -> FILLER_COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM .)
    LEFT            reduce using rule 145 (instruccion -> FILLER_COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM .)
    RIGHT           reduce using rule 145 (instruccion -> FILLER_COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM .)
    TURN            reduce using rule 145 (instruccion -> FILLER_COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM .)
    SIZE            reduce using rule 145 (instruccion -> FILLER_COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM .)
    CIRCLE          reduce using rule 145 (instruccion -> FILLER_COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM .)
    TRIANGLE        reduce using rule 145 (instruccion -> FILLER_COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM .)
    SQUARE          reduce using rule 145 (instruccion -> FILLER_COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM .)
    NGON            reduce using rule 145 (instruccion -> FILLER_COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM .)
    ARC             reduce using rule 145 (instruccion -> FILLER_COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM .)
    UP              reduce using rule 145 (instruccion -> FILLER_COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM .)
    DOWN            reduce using rule 145 (instruccion -> FILLER_COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM .)
    COLOR           reduce using rule 145 (instruccion -> FILLER_COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM .)
    FILLED_CIRCLE   reduce using rule 145 (instruccion -> FILLER_COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM .)
    FILLED_SQUARE   reduce using rule 145 (instruccion -> FILLER_COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM .)
    FILLED_TRIANGLE reduce using rule 145 (instruccion -> FILLER_COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM .)
    FILLED_NGON     reduce using rule 145 (instruccion -> FILLER_COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM .)
    FILLER_COLOR    reduce using rule 145 (instruccion -> FILLER_COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM .)
    RETURN          reduce using rule 145 (instruccion -> FILLER_COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM .)
    BRADER          reduce using rule 145 (instruccion -> FILLER_COLOR actualiza_instr PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM .)


state 451

    (30) func -> VOID tipo_void ID actualiza_id crea_func PARIZQ pars PARDER bloque_func .

    VOID            reduce using rule 30 (func -> VOID tipo_void ID actualiza_id crea_func PARIZQ pars PARDER bloque_func .)
    INT             reduce using rule 30 (func -> VOID tipo_void ID actualiza_id crea_func PARIZQ pars PARDER bloque_func .)
    FLOAT           reduce using rule 30 (func -> VOID tipo_void ID actualiza_id crea_func PARIZQ pars PARDER bloque_func .)
    MAIN            reduce using rule 30 (func -> VOID tipo_void ID actualiza_id crea_func PARIZQ pars PARDER bloque_func .)


state 452

    (36) par -> COMA tipo ID actualiza_id crea_var gen_dir par .

    PARDER          reduce using rule 36 (par -> COMA tipo ID actualiza_id crea_var gen_dir par .)


state 453

    (146) fill -> PUNTO FILL actualiza_instr PARIZQ PARDER fin_instr .

    PUNTO           reduce using rule 146 (fill -> PUNTO FILL actualiza_instr PARIZQ PARDER fin_instr .)
    PUNTCOM         reduce using rule 146 (fill -> PUNTO FILL actualiza_instr PARIZQ PARDER fin_instr .)


state 454

    (149) altera -> ROTATE actualiza_instr PARIZQ expresion PARDER . fin_instr1
    (155) fin_instr1 -> .

    PUNTO           reduce using rule 155 (fin_instr1 -> .)
    PUNTCOM         reduce using rule 155 (fin_instr1 -> .)

    fin_instr1                     shift and go to state 456

state 455

    (150) altera -> STRETCH actualiza_instr PARIZQ expresion PARDER . fin_instr1
    (155) fin_instr1 -> .

    PUNTO           reduce using rule 155 (fin_instr1 -> .)
    PUNTCOM         reduce using rule 155 (fin_instr1 -> .)

    fin_instr1                     shift and go to state 457

state 456

    (149) altera -> ROTATE actualiza_instr PARIZQ expresion PARDER fin_instr1 .

    PUNTO           reduce using rule 149 (altera -> ROTATE actualiza_instr PARIZQ expresion PARDER fin_instr1 .)
    PUNTCOM         reduce using rule 149 (altera -> ROTATE actualiza_instr PARIZQ expresion PARDER fin_instr1 .)


state 457

    (150) altera -> STRETCH actualiza_instr PARIZQ expresion PARDER fin_instr1 .

    PUNTO           reduce using rule 150 (altera -> STRETCH actualiza_instr PARIZQ expresion PARDER fin_instr1 .)
    PUNTCOM         reduce using rule 150 (altera -> STRETCH actualiza_instr PARIZQ expresion PARDER fin_instr1 .)

