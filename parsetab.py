
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftSUMARESTAleftMULTDIVAND ARC ASIG BACKGROUND BACKWARD BRADER BRAIZQ CANVAS CIRCLE COLOR COMA CORDER CORIZQ CTE_F CTE_I CTE_STR DIF DIV DOWN ELSE FILL FLOAT FORWARD HEIGHT ID IF IGUAL IMPORT INPUT INT LEFT MAIN MAYIGUAL MAYOR MENIGUAL MENOR MODULE MULT NGON OR PARDER PARIZQ PRINT PUNTCOM PUNTO REPEAT RESTA RETURN RIGHT ROTATE SIZE SQUARE STRETCH SUMA TRIANGLE TURN UP VOID WIDTHprograma : MODULE ID PUNTCOM ajustes var_func MAIN bloque_funcajustes : CANVAS BRAIZQ WIDTH CTE_I PUNTCOM HEIGHT CTE_I PUNTCOM BACKGROUND CTE_F COMA CTE_F COMA CTE_F PUNTCOM BRADER\n               | IMPORT CTE_STRvar_func : tipo ID var_o_func\n                | VOID ID PARIZQ pars PARDER bloque_func funcs\n                | var_o_func : lista vars_lista PUNTCOM var_func\n                  | PARIZQ pars PARDER bloque_func funcsbloque_func : BRAIZQ vars_estatutos returns BRADERvars_estatutos : vars estatutos\n                      | estatutosestatutos : estatuto estatutos\n                 | returns : RETURN expresion PUNTCOM\n               |  vars : tipo ID lista vars_lista PUNTCOM mas_varsvars_lista : COMA ID lista vars_lista\n                  | mas_vars : vars\n                | funcs : func funcs\n             | func : tipo ID PARIZQ pars PARDER bloque_func\n            | VOID ID PARIZQ pars PARDER bloque_funcexpresion : exp mas_expmas_exp : MENOR exp\n               | MAYOR exp\n               | MENIGUAL exp\n               | MAYIGUAL exp\n               | IGUAL exp\n               | DIF exp\n               | AND exp\n               | OR exp\n               | exp : termino suma_restasuma_resta : SUMA termino\n                  | RESTA termino\n                  | termino : factor mult_divmult_div : MULT factor\n                | DIV factor\n                | factor : PARIZQ expresion PARDER\n              | var_func_call\n              | SUMA var_func_call\n              | RESTA var_func_callvar_func_call : var\n                     | func_callestatuto : asignacion\n                | condicion\n                | escritura\n                | ciclo\n                | instruccion\n                | func_call PUNTCOMasignacion : ID lista ASIG exp_input PUNTCOMexp_input : expresion\n                 | INPUT PARIZQ PARDERcondicion : IF PARIZQ expresion PARDER bloque else_bloqueelse_bloque : ELSE bloque\n                   | escritura : PRINT PARIZQ arg_escritura PARDER PUNTCOMarg_escritura : expresion args_escritura\n                     | CTE_STR args_escrituraargs_escritura : COMA arg_escritura\n                      | ciclo : REPEAT PARIZQ expresion PARDER bloquetipo : INT\n            | FLOAT lista : CORIZQ expresion CORDER matriz\n             | matriz : CORIZQ expresion CORDER\n              | var : ID lista\n           | CTE_I\n           | CTE_Ffunc_call : ID PARIZQ args PARDERargs : expresion arg\n            | arg : COMA expresion arg\n           |  bloque : BRAIZQ estatutos BRADER pars : tipo ID par\n            | par : COMA tipo ID par\n           | instruccion : FORWARD PARIZQ expresion PARDER PUNTCOM\n                   | BACKWARD PARIZQ expresion PARDER PUNTCOM\n                   | LEFT PARIZQ expresion PARDER PUNTCOM\n                   | RIGHT PARIZQ expresion PARDER PUNTCOM\n                   | TURN PARIZQ expresion PARDER PUNTCOM\n                   | SIZE PARIZQ expresion PARDER PUNTCOM\n                   | CIRCLE PARIZQ expresion PARDER transform PUNTCOM\n                   | TRIANGLE PARIZQ expresion PARDER transform PUNTCOM\n                   | SQUARE PARIZQ expresion PARDER transform PUNTCOM\n                   | NGON PARIZQ expresion COMA expresion PARDER transform PUNTCOM\n                   | ARC PARIZQ expresion COMA expresion PARDER transform PUNTCOM\n                   | UP PARIZQ PARDER PUNTCOM\n                   | DOWN PARIZQ PARDER PUNTCOM\n                   | COLOR PARIZQ expresion COMA expresion COMA expresion PARDER PUNTCOMtransform : PUNTO altera transform\n                 | altera : ROTATE PARIZQ expresion PARDER\n              | STRETCH PARIZQ expresion PARDER\n              | FILL PARIZQ PARDER'
    
_lr_action_items = {'MODULE':([0,],[2,]),'$end':([1,19,126,],[0,-1,-9,]),'ID':([2,9,10,11,12,20,24,28,30,32,33,34,35,36,37,57,59,64,66,67,76,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,99,106,107,108,109,110,111,112,113,115,116,118,119,129,156,180,184,196,197,198,199,200,204,205,206,210,211,214,215,216,218,219,220,221,222,223,224,238,239,242,245,250,251,254,259,260,262,263,274,275,282,],[3,16,17,-67,-68,31,70,31,78,31,-49,-50,-51,-52,-53,101,103,70,70,70,70,70,-54,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,-97,-98,70,233,234,235,-20,-55,-60,31,-61,-66,-86,-87,-88,-89,-90,-91,-16,-19,-58,-92,-93,-94,70,-59,-81,70,70,-95,-96,-99,]),'PUNTCOM':([3,16,22,26,38,56,61,62,63,65,68,69,70,71,72,78,101,104,105,114,117,121,122,123,127,128,148,149,152,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,174,175,176,178,182,187,188,189,190,191,192,193,194,195,201,225,227,228,236,240,246,252,253,261,265,266,273,276,280,281,286,],[4,-70,-18,74,82,100,-34,-38,-42,-44,-47,-48,-70,-74,-75,-70,-70,-72,-25,-35,-39,-45,-46,-73,173,-18,198,199,-18,-69,-26,-27,-28,-29,-30,-31,-32,-33,-36,-37,-40,-41,-43,209,210,211,-56,-76,216,219,220,221,222,223,224,-101,-101,-101,-17,245,250,251,-71,-57,-101,-101,-101,-100,274,275,-104,282,-102,-103,287,]),'CANVAS':([4,],[6,]),'IMPORT':([4,],[7,]),'VOID':([5,14,100,126,153,171,203,283,284,288,],[10,-3,10,-9,205,205,205,-23,-24,-2,]),'MAIN':([5,8,14,21,100,126,151,153,171,202,203,208,232,283,284,288,],[-6,15,-3,-4,-6,-9,-7,-22,-22,-8,-22,-5,-21,-23,-24,-2,]),'INT':([5,14,20,23,25,100,126,153,155,171,203,210,255,256,283,284,288,],[11,-3,11,11,11,11,-9,11,11,11,11,11,11,11,-23,-24,-2,]),'FLOAT':([5,14,20,23,25,100,126,153,155,171,203,210,255,256,283,284,288,],[12,-3,12,12,12,12,-9,12,12,12,12,12,12,12,-23,-24,-2,]),'BRAIZQ':([6,15,102,124,181,186,243,277,278,],[13,20,20,20,215,215,215,20,20,]),'CTE_STR':([7,84,184,],[14,135,135,]),'WIDTH':([13,],[18,]),'PARIZQ':([16,17,24,31,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,64,70,76,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,99,106,107,108,109,110,111,112,113,115,116,118,119,129,156,177,180,184,196,197,200,233,234,247,248,249,254,262,263,],[23,25,64,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,64,80,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,212,64,64,64,64,64,255,256,262,263,264,64,64,64,]),'CORIZQ':([16,31,70,78,101,104,],[24,24,24,24,24,156,]),'COMA':([16,22,61,62,63,65,68,69,70,71,72,78,101,103,104,105,114,117,121,122,123,128,131,134,135,146,147,150,152,157,158,159,160,161,162,163,164,165,166,167,168,169,170,178,213,231,235,236,258,279,],[-70,57,-34,-38,-42,-44,-47,-48,-70,-74,-75,-70,-70,155,-72,-25,-35,-39,-45,-46,-73,57,180,184,184,196,197,200,57,-69,-26,-27,-28,-29,-30,-31,-32,-33,-36,-37,-40,-41,-43,-76,180,254,155,-71,270,285,]),'CTE_I':([18,24,64,66,67,76,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,99,106,107,108,109,110,111,112,113,115,116,118,119,125,129,156,180,184,196,197,200,254,262,263,],[26,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,172,71,71,71,71,71,71,71,71,71,71,]),'RETURN':([20,27,28,29,32,33,34,35,36,37,77,81,82,198,199,210,211,214,216,218,219,220,221,222,223,224,238,239,242,245,250,251,259,260,274,275,282,],[-13,76,-13,-11,-13,-49,-50,-51,-52,-53,-10,-12,-54,-97,-98,-20,-55,-60,-61,-66,-86,-87,-88,-89,-90,-91,-16,-19,-58,-92,-93,-94,-59,-81,-95,-96,-99,]),'BRADER':([20,27,28,29,32,33,34,35,36,37,75,77,81,82,173,198,199,210,211,214,215,216,218,219,220,221,222,223,224,238,239,242,244,245,250,251,259,260,274,275,282,287,],[-13,-15,-13,-11,-13,-49,-50,-51,-52,-53,126,-10,-12,-54,-14,-97,-98,-20,-55,-60,-13,-61,-66,-86,-87,-88,-89,-90,-91,-16,-19,-58,260,-92,-93,-94,-59,-81,-95,-96,-99,288,]),'IF':([20,28,32,33,34,35,36,37,82,198,199,210,211,214,215,216,218,219,220,221,222,223,224,238,239,242,245,250,251,259,260,274,275,282,],[39,39,39,-49,-50,-51,-52,-53,-54,-97,-98,-20,-55,-60,39,-61,-66,-86,-87,-88,-89,-90,-91,-16,-19,-58,-92,-93,-94,-59,-81,-95,-96,-99,]),'PRINT':([20,28,32,33,34,35,36,37,82,198,199,210,211,214,215,216,218,219,220,221,222,223,224,238,239,242,245,250,251,259,260,274,275,282,],[40,40,40,-49,-50,-51,-52,-53,-54,-97,-98,-20,-55,-60,40,-61,-66,-86,-87,-88,-89,-90,-91,-16,-19,-58,-92,-93,-94,-59,-81,-95,-96,-99,]),'REPEAT':([20,28,32,33,34,35,36,37,82,198,199,210,211,214,215,216,218,219,220,221,222,223,224,238,239,242,245,250,251,259,260,274,275,282,],[41,41,41,-49,-50,-51,-52,-53,-54,-97,-98,-20,-55,-60,41,-61,-66,-86,-87,-88,-89,-90,-91,-16,-19,-58,-92,-93,-94,-59,-81,-95,-96,-99,]),'FORWARD':([20,28,32,33,34,35,36,37,82,198,199,210,211,214,215,216,218,219,220,221,222,223,224,238,239,242,245,250,251,259,260,274,275,282,],[42,42,42,-49,-50,-51,-52,-53,-54,-97,-98,-20,-55,-60,42,-61,-66,-86,-87,-88,-89,-90,-91,-16,-19,-58,-92,-93,-94,-59,-81,-95,-96,-99,]),'BACKWARD':([20,28,32,33,34,35,36,37,82,198,199,210,211,214,215,216,218,219,220,221,222,223,224,238,239,242,245,250,251,259,260,274,275,282,],[43,43,43,-49,-50,-51,-52,-53,-54,-97,-98,-20,-55,-60,43,-61,-66,-86,-87,-88,-89,-90,-91,-16,-19,-58,-92,-93,-94,-59,-81,-95,-96,-99,]),'LEFT':([20,28,32,33,34,35,36,37,82,198,199,210,211,214,215,216,218,219,220,221,222,223,224,238,239,242,245,250,251,259,260,274,275,282,],[44,44,44,-49,-50,-51,-52,-53,-54,-97,-98,-20,-55,-60,44,-61,-66,-86,-87,-88,-89,-90,-91,-16,-19,-58,-92,-93,-94,-59,-81,-95,-96,-99,]),'RIGHT':([20,28,32,33,34,35,36,37,82,198,199,210,211,214,215,216,218,219,220,221,222,223,224,238,239,242,245,250,251,259,260,274,275,282,],[45,45,45,-49,-50,-51,-52,-53,-54,-97,-98,-20,-55,-60,45,-61,-66,-86,-87,-88,-89,-90,-91,-16,-19,-58,-92,-93,-94,-59,-81,-95,-96,-99,]),'TURN':([20,28,32,33,34,35,36,37,82,198,199,210,211,214,215,216,218,219,220,221,222,223,224,238,239,242,245,250,251,259,260,274,275,282,],[46,46,46,-49,-50,-51,-52,-53,-54,-97,-98,-20,-55,-60,46,-61,-66,-86,-87,-88,-89,-90,-91,-16,-19,-58,-92,-93,-94,-59,-81,-95,-96,-99,]),'SIZE':([20,28,32,33,34,35,36,37,82,198,199,210,211,214,215,216,218,219,220,221,222,223,224,238,239,242,245,250,251,259,260,274,275,282,],[47,47,47,-49,-50,-51,-52,-53,-54,-97,-98,-20,-55,-60,47,-61,-66,-86,-87,-88,-89,-90,-91,-16,-19,-58,-92,-93,-94,-59,-81,-95,-96,-99,]),'CIRCLE':([20,28,32,33,34,35,36,37,82,198,199,210,211,214,215,216,218,219,220,221,222,223,224,238,239,242,245,250,251,259,260,274,275,282,],[48,48,48,-49,-50,-51,-52,-53,-54,-97,-98,-20,-55,-60,48,-61,-66,-86,-87,-88,-89,-90,-91,-16,-19,-58,-92,-93,-94,-59,-81,-95,-96,-99,]),'TRIANGLE':([20,28,32,33,34,35,36,37,82,198,199,210,211,214,215,216,218,219,220,221,222,223,224,238,239,242,245,250,251,259,260,274,275,282,],[49,49,49,-49,-50,-51,-52,-53,-54,-97,-98,-20,-55,-60,49,-61,-66,-86,-87,-88,-89,-90,-91,-16,-19,-58,-92,-93,-94,-59,-81,-95,-96,-99,]),'SQUARE':([20,28,32,33,34,35,36,37,82,198,199,210,211,214,215,216,218,219,220,221,222,223,224,238,239,242,245,250,251,259,260,274,275,282,],[50,50,50,-49,-50,-51,-52,-53,-54,-97,-98,-20,-55,-60,50,-61,-66,-86,-87,-88,-89,-90,-91,-16,-19,-58,-92,-93,-94,-59,-81,-95,-96,-99,]),'NGON':([20,28,32,33,34,35,36,37,82,198,199,210,211,214,215,216,218,219,220,221,222,223,224,238,239,242,245,250,251,259,260,274,275,282,],[51,51,51,-49,-50,-51,-52,-53,-54,-97,-98,-20,-55,-60,51,-61,-66,-86,-87,-88,-89,-90,-91,-16,-19,-58,-92,-93,-94,-59,-81,-95,-96,-99,]),'ARC':([20,28,32,33,34,35,36,37,82,198,199,210,211,214,215,216,218,219,220,221,222,223,224,238,239,242,245,250,251,259,260,274,275,282,],[52,52,52,-49,-50,-51,-52,-53,-54,-97,-98,-20,-55,-60,52,-61,-66,-86,-87,-88,-89,-90,-91,-16,-19,-58,-92,-93,-94,-59,-81,-95,-96,-99,]),'UP':([20,28,32,33,34,35,36,37,82,198,199,210,211,214,215,216,218,219,220,221,222,223,224,238,239,242,245,250,251,259,260,274,275,282,],[53,53,53,-49,-50,-51,-52,-53,-54,-97,-98,-20,-55,-60,53,-61,-66,-86,-87,-88,-89,-90,-91,-16,-19,-58,-92,-93,-94,-59,-81,-95,-96,-99,]),'DOWN':([20,28,32,33,34,35,36,37,82,198,199,210,211,214,215,216,218,219,220,221,222,223,224,238,239,242,245,250,251,259,260,274,275,282,],[54,54,54,-49,-50,-51,-52,-53,-54,-97,-98,-20,-55,-60,54,-61,-66,-86,-87,-88,-89,-90,-91,-16,-19,-58,-92,-93,-94,-59,-81,-95,-96,-99,]),'COLOR':([20,28,32,33,34,35,36,37,82,198,199,210,211,214,215,216,218,219,220,221,222,223,224,238,239,242,245,250,251,259,260,274,275,282,],[55,55,55,-49,-50,-51,-52,-53,-54,-97,-98,-20,-55,-60,55,-61,-66,-86,-87,-88,-89,-90,-91,-16,-19,-58,-92,-93,-94,-59,-81,-95,-96,-99,]),'PARDER':([23,25,58,61,62,63,65,68,69,70,71,72,73,80,97,98,103,104,105,114,117,120,121,122,123,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,154,157,158,159,160,161,162,163,164,165,166,167,168,169,170,178,179,183,185,212,213,217,229,230,235,236,241,255,256,257,264,267,268,269,271,272,],[-83,-83,102,-34,-38,-42,-44,-47,-48,-70,-74,-75,124,-78,148,149,-85,-72,-25,-35,-39,170,-45,-46,-73,178,-80,181,182,-65,-65,186,187,188,189,190,191,192,193,194,195,-82,-69,-26,-27,-28,-29,-30,-31,-32,-33,-36,-37,-40,-41,-43,-76,-77,-62,-63,240,-80,-64,252,253,-85,-71,-79,-83,-83,-84,273,276,277,278,280,281,]),'SUMA':([24,62,63,64,65,68,69,70,71,72,76,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,99,104,106,107,108,109,110,111,112,113,115,116,117,118,119,121,122,123,129,156,157,168,169,170,178,180,184,196,197,200,236,254,262,263,],[66,115,-42,66,-44,-47,-48,-70,-74,-75,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-72,66,66,66,66,66,66,66,66,66,66,-39,66,66,-45,-46,-73,66,66,-69,-40,-41,-43,-76,66,66,66,66,66,-71,66,66,66,]),'RESTA':([24,62,63,64,65,68,69,70,71,72,76,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,99,104,106,107,108,109,110,111,112,113,115,116,117,118,119,121,122,123,129,156,157,168,169,170,178,180,184,196,197,200,236,254,262,263,],[67,116,-42,67,-44,-47,-48,-70,-74,-75,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-72,67,67,67,67,67,67,67,67,67,67,-39,67,67,-45,-46,-73,67,67,-69,-40,-41,-43,-76,67,67,67,67,67,-71,67,67,67,]),'CTE_F':([24,64,66,67,76,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,99,106,107,108,109,110,111,112,113,115,116,118,119,129,156,180,184,196,197,200,237,254,262,263,270,285,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,258,72,72,72,279,286,]),'ASIG':([31,79,104,157,236,],[-70,129,-72,-69,-71,]),'CORDER':([60,61,62,63,65,68,69,70,71,72,104,105,114,117,121,122,123,157,158,159,160,161,162,163,164,165,166,167,168,169,170,178,207,236,],[104,-34,-38,-42,-44,-47,-48,-70,-74,-75,-72,-25,-35,-39,-45,-46,-73,-69,-26,-27,-28,-29,-30,-31,-32,-33,-36,-37,-40,-41,-43,-76,236,-71,]),'MENOR':([61,62,63,65,68,69,70,71,72,104,114,117,121,122,123,157,166,167,168,169,170,178,236,],[106,-38,-42,-44,-47,-48,-70,-74,-75,-72,-35,-39,-45,-46,-73,-69,-36,-37,-40,-41,-43,-76,-71,]),'MAYOR':([61,62,63,65,68,69,70,71,72,104,114,117,121,122,123,157,166,167,168,169,170,178,236,],[107,-38,-42,-44,-47,-48,-70,-74,-75,-72,-35,-39,-45,-46,-73,-69,-36,-37,-40,-41,-43,-76,-71,]),'MENIGUAL':([61,62,63,65,68,69,70,71,72,104,114,117,121,122,123,157,166,167,168,169,170,178,236,],[108,-38,-42,-44,-47,-48,-70,-74,-75,-72,-35,-39,-45,-46,-73,-69,-36,-37,-40,-41,-43,-76,-71,]),'MAYIGUAL':([61,62,63,65,68,69,70,71,72,104,114,117,121,122,123,157,166,167,168,169,170,178,236,],[109,-38,-42,-44,-47,-48,-70,-74,-75,-72,-35,-39,-45,-46,-73,-69,-36,-37,-40,-41,-43,-76,-71,]),'IGUAL':([61,62,63,65,68,69,70,71,72,104,114,117,121,122,123,157,166,167,168,169,170,178,236,],[110,-38,-42,-44,-47,-48,-70,-74,-75,-72,-35,-39,-45,-46,-73,-69,-36,-37,-40,-41,-43,-76,-71,]),'DIF':([61,62,63,65,68,69,70,71,72,104,114,117,121,122,123,157,166,167,168,169,170,178,236,],[111,-38,-42,-44,-47,-48,-70,-74,-75,-72,-35,-39,-45,-46,-73,-69,-36,-37,-40,-41,-43,-76,-71,]),'AND':([61,62,63,65,68,69,70,71,72,104,114,117,121,122,123,157,166,167,168,169,170,178,236,],[112,-38,-42,-44,-47,-48,-70,-74,-75,-72,-35,-39,-45,-46,-73,-69,-36,-37,-40,-41,-43,-76,-71,]),'OR':([61,62,63,65,68,69,70,71,72,104,114,117,121,122,123,157,166,167,168,169,170,178,236,],[113,-38,-42,-44,-47,-48,-70,-74,-75,-72,-35,-39,-45,-46,-73,-69,-36,-37,-40,-41,-43,-76,-71,]),'MULT':([63,65,68,69,70,71,72,104,121,122,123,157,170,178,236,],[118,-44,-47,-48,-70,-74,-75,-72,-45,-46,-73,-69,-43,-76,-71,]),'DIV':([63,65,68,69,70,71,72,104,121,122,123,157,170,178,236,],[119,-44,-47,-48,-70,-74,-75,-72,-45,-46,-73,-69,-43,-76,-71,]),'HEIGHT':([74,],[125,]),'INPUT':([129,],[177,]),'PUNTO':([193,194,195,246,252,253,273,280,281,],[226,226,226,226,226,226,-104,-102,-103,]),'BACKGROUND':([209,],[237,]),'ELSE':([214,260,],[243,-81,]),'ROTATE':([226,],[247,]),'STRETCH':([226,],[248,]),'FILL':([226,],[249,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'ajustes':([4,],[5,]),'var_func':([5,100,],[8,151,]),'tipo':([5,20,23,25,100,153,155,171,203,210,255,256,],[9,30,59,59,9,204,206,204,204,30,59,59,]),'bloque_func':([15,102,124,277,278,],[19,153,171,283,284,]),'var_o_func':([16,],[21,]),'lista':([16,31,70,78,101,],[22,79,123,128,152,]),'vars_estatutos':([20,],[27,]),'vars':([20,210,],[28,239,]),'estatutos':([20,28,32,215,],[29,77,81,244,]),'estatuto':([20,28,32,215,],[32,32,32,32,]),'asignacion':([20,28,32,215,],[33,33,33,33,]),'condicion':([20,28,32,215,],[34,34,34,34,]),'escritura':([20,28,32,215,],[35,35,35,35,]),'ciclo':([20,28,32,215,],[36,36,36,36,]),'instruccion':([20,28,32,215,],[37,37,37,37,]),'func_call':([20,24,28,32,64,66,67,76,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,99,106,107,108,109,110,111,112,113,115,116,118,119,129,156,180,184,196,197,200,215,254,262,263,],[38,69,38,38,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,38,69,69,69,]),'vars_lista':([22,128,152,],[56,174,201,]),'pars':([23,25,255,256,],[58,73,268,269,]),'expresion':([24,64,76,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,99,129,156,180,184,196,197,200,254,262,263,],[60,120,127,131,132,134,136,137,138,139,140,141,142,143,144,145,146,147,150,176,207,213,134,229,230,231,267,271,272,]),'exp':([24,64,76,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,99,106,107,108,109,110,111,112,113,129,156,180,184,196,197,200,254,262,263,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,158,159,160,161,162,163,164,165,61,61,61,61,61,61,61,61,61,61,]),'termino':([24,64,76,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,99,106,107,108,109,110,111,112,113,115,116,129,156,180,184,196,197,200,254,262,263,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,166,167,62,62,62,62,62,62,62,62,62,62,]),'factor':([24,64,76,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,99,106,107,108,109,110,111,112,113,115,116,118,119,129,156,180,184,196,197,200,254,262,263,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,168,169,63,63,63,63,63,63,63,63,63,63,]),'var_func_call':([24,64,66,67,76,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,99,106,107,108,109,110,111,112,113,115,116,118,119,129,156,180,184,196,197,200,254,262,263,],[65,65,121,122,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'var':([24,64,66,67,76,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,99,106,107,108,109,110,111,112,113,115,116,118,119,129,156,180,184,196,197,200,254,262,263,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'returns':([27,],[75,]),'mas_exp':([61,],[105,]),'suma_resta':([62,],[114,]),'mult_div':([63,],[117,]),'args':([80,],[130,]),'arg_escritura':([84,184,],[133,217,]),'par':([103,235,],[154,257,]),'matriz':([104,],[157,]),'exp_input':([129,],[175,]),'arg':([131,213,],[179,241,]),'args_escritura':([134,135,],[183,185,]),'funcs':([153,171,203,],[202,208,232,]),'func':([153,171,203,],[203,203,203,]),'bloque':([181,186,243,],[214,218,259,]),'transform':([193,194,195,246,252,253,],[225,227,228,261,265,266,]),'mas_vars':([210,],[238,]),'else_bloque':([214,],[242,]),'altera':([226,],[246,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> MODULE ID PUNTCOM ajustes var_func MAIN bloque_func','programa',7,'p_programa','ProyectoFinal_Yacc.py',17),
  ('ajustes -> CANVAS BRAIZQ WIDTH CTE_I PUNTCOM HEIGHT CTE_I PUNTCOM BACKGROUND CTE_F COMA CTE_F COMA CTE_F PUNTCOM BRADER','ajustes',16,'p_ajustes','ProyectoFinal_Yacc.py',20),
  ('ajustes -> IMPORT CTE_STR','ajustes',2,'p_ajustes','ProyectoFinal_Yacc.py',21),
  ('var_func -> tipo ID var_o_func','var_func',3,'p_var_func','ProyectoFinal_Yacc.py',24),
  ('var_func -> VOID ID PARIZQ pars PARDER bloque_func funcs','var_func',7,'p_var_func','ProyectoFinal_Yacc.py',25),
  ('var_func -> <empty>','var_func',0,'p_var_func','ProyectoFinal_Yacc.py',26),
  ('var_o_func -> lista vars_lista PUNTCOM var_func','var_o_func',4,'p_var_o_func','ProyectoFinal_Yacc.py',29),
  ('var_o_func -> PARIZQ pars PARDER bloque_func funcs','var_o_func',5,'p_var_o_func','ProyectoFinal_Yacc.py',30),
  ('bloque_func -> BRAIZQ vars_estatutos returns BRADER','bloque_func',4,'p_bloque_func','ProyectoFinal_Yacc.py',33),
  ('vars_estatutos -> vars estatutos','vars_estatutos',2,'p_vars_estatutos','ProyectoFinal_Yacc.py',36),
  ('vars_estatutos -> estatutos','vars_estatutos',1,'p_vars_estatutos','ProyectoFinal_Yacc.py',37),
  ('estatutos -> estatuto estatutos','estatutos',2,'p_estatutos','ProyectoFinal_Yacc.py',40),
  ('estatutos -> <empty>','estatutos',0,'p_estatutos','ProyectoFinal_Yacc.py',41),
  ('returns -> RETURN expresion PUNTCOM','returns',3,'p_returns','ProyectoFinal_Yacc.py',44),
  ('returns -> <empty>','returns',0,'p_returns','ProyectoFinal_Yacc.py',45),
  ('vars -> tipo ID lista vars_lista PUNTCOM mas_vars','vars',6,'p_vars','ProyectoFinal_Yacc.py',47),
  ('vars_lista -> COMA ID lista vars_lista','vars_lista',4,'p_vars_lista','ProyectoFinal_Yacc.py',50),
  ('vars_lista -> <empty>','vars_lista',0,'p_vars_lista','ProyectoFinal_Yacc.py',51),
  ('mas_vars -> vars','mas_vars',1,'p_mas_vars','ProyectoFinal_Yacc.py',53),
  ('mas_vars -> <empty>','mas_vars',0,'p_mas_vars','ProyectoFinal_Yacc.py',54),
  ('funcs -> func funcs','funcs',2,'p_funcs','ProyectoFinal_Yacc.py',56),
  ('funcs -> <empty>','funcs',0,'p_funcs','ProyectoFinal_Yacc.py',57),
  ('func -> tipo ID PARIZQ pars PARDER bloque_func','func',6,'p_func','ProyectoFinal_Yacc.py',60),
  ('func -> VOID ID PARIZQ pars PARDER bloque_func','func',6,'p_func','ProyectoFinal_Yacc.py',61),
  ('expresion -> exp mas_exp','expresion',2,'p_expresion','ProyectoFinal_Yacc.py',64),
  ('mas_exp -> MENOR exp','mas_exp',2,'p_mas_exp','ProyectoFinal_Yacc.py',67),
  ('mas_exp -> MAYOR exp','mas_exp',2,'p_mas_exp','ProyectoFinal_Yacc.py',68),
  ('mas_exp -> MENIGUAL exp','mas_exp',2,'p_mas_exp','ProyectoFinal_Yacc.py',69),
  ('mas_exp -> MAYIGUAL exp','mas_exp',2,'p_mas_exp','ProyectoFinal_Yacc.py',70),
  ('mas_exp -> IGUAL exp','mas_exp',2,'p_mas_exp','ProyectoFinal_Yacc.py',71),
  ('mas_exp -> DIF exp','mas_exp',2,'p_mas_exp','ProyectoFinal_Yacc.py',72),
  ('mas_exp -> AND exp','mas_exp',2,'p_mas_exp','ProyectoFinal_Yacc.py',73),
  ('mas_exp -> OR exp','mas_exp',2,'p_mas_exp','ProyectoFinal_Yacc.py',74),
  ('mas_exp -> <empty>','mas_exp',0,'p_mas_exp','ProyectoFinal_Yacc.py',75),
  ('exp -> termino suma_resta','exp',2,'p_exp','ProyectoFinal_Yacc.py',78),
  ('suma_resta -> SUMA termino','suma_resta',2,'p_suma_resta','ProyectoFinal_Yacc.py',81),
  ('suma_resta -> RESTA termino','suma_resta',2,'p_suma_resta','ProyectoFinal_Yacc.py',82),
  ('suma_resta -> <empty>','suma_resta',0,'p_suma_resta','ProyectoFinal_Yacc.py',83),
  ('termino -> factor mult_div','termino',2,'p_termino','ProyectoFinal_Yacc.py',85),
  ('mult_div -> MULT factor','mult_div',2,'p_mult_div','ProyectoFinal_Yacc.py',88),
  ('mult_div -> DIV factor','mult_div',2,'p_mult_div','ProyectoFinal_Yacc.py',89),
  ('mult_div -> <empty>','mult_div',0,'p_mult_div','ProyectoFinal_Yacc.py',90),
  ('factor -> PARIZQ expresion PARDER','factor',3,'p_factor','ProyectoFinal_Yacc.py',93),
  ('factor -> var_func_call','factor',1,'p_factor','ProyectoFinal_Yacc.py',94),
  ('factor -> SUMA var_func_call','factor',2,'p_factor','ProyectoFinal_Yacc.py',95),
  ('factor -> RESTA var_func_call','factor',2,'p_factor','ProyectoFinal_Yacc.py',96),
  ('var_func_call -> var','var_func_call',1,'p_var_func_call','ProyectoFinal_Yacc.py',99),
  ('var_func_call -> func_call','var_func_call',1,'p_var_func_call','ProyectoFinal_Yacc.py',100),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','ProyectoFinal_Yacc.py',103),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','ProyectoFinal_Yacc.py',104),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','ProyectoFinal_Yacc.py',105),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','ProyectoFinal_Yacc.py',106),
  ('estatuto -> instruccion','estatuto',1,'p_estatuto','ProyectoFinal_Yacc.py',107),
  ('estatuto -> func_call PUNTCOM','estatuto',2,'p_estatuto','ProyectoFinal_Yacc.py',108),
  ('asignacion -> ID lista ASIG exp_input PUNTCOM','asignacion',5,'p_asignacion','ProyectoFinal_Yacc.py',111),
  ('exp_input -> expresion','exp_input',1,'p_exp_input','ProyectoFinal_Yacc.py',114),
  ('exp_input -> INPUT PARIZQ PARDER','exp_input',3,'p_exp_input','ProyectoFinal_Yacc.py',115),
  ('condicion -> IF PARIZQ expresion PARDER bloque else_bloque','condicion',6,'p_condicion','ProyectoFinal_Yacc.py',118),
  ('else_bloque -> ELSE bloque','else_bloque',2,'p_else_bloque','ProyectoFinal_Yacc.py',121),
  ('else_bloque -> <empty>','else_bloque',0,'p_else_bloque','ProyectoFinal_Yacc.py',122),
  ('escritura -> PRINT PARIZQ arg_escritura PARDER PUNTCOM','escritura',5,'p_escritura','ProyectoFinal_Yacc.py',124),
  ('arg_escritura -> expresion args_escritura','arg_escritura',2,'p_arg_escritura','ProyectoFinal_Yacc.py',127),
  ('arg_escritura -> CTE_STR args_escritura','arg_escritura',2,'p_arg_escritura','ProyectoFinal_Yacc.py',128),
  ('args_escritura -> COMA arg_escritura','args_escritura',2,'p_args_escritura','ProyectoFinal_Yacc.py',131),
  ('args_escritura -> <empty>','args_escritura',0,'p_args_escritura','ProyectoFinal_Yacc.py',132),
  ('ciclo -> REPEAT PARIZQ expresion PARDER bloque','ciclo',5,'p_ciclo','ProyectoFinal_Yacc.py',135),
  ('tipo -> INT','tipo',1,'p_tipo','ProyectoFinal_Yacc.py',138),
  ('tipo -> FLOAT','tipo',1,'p_tipo','ProyectoFinal_Yacc.py',139),
  ('lista -> CORIZQ expresion CORDER matriz','lista',4,'p_lista','ProyectoFinal_Yacc.py',142),
  ('lista -> <empty>','lista',0,'p_lista','ProyectoFinal_Yacc.py',143),
  ('matriz -> CORIZQ expresion CORDER','matriz',3,'p_matriz','ProyectoFinal_Yacc.py',146),
  ('matriz -> <empty>','matriz',0,'p_matriz','ProyectoFinal_Yacc.py',147),
  ('var -> ID lista','var',2,'p_var','ProyectoFinal_Yacc.py',150),
  ('var -> CTE_I','var',1,'p_var','ProyectoFinal_Yacc.py',151),
  ('var -> CTE_F','var',1,'p_var','ProyectoFinal_Yacc.py',152),
  ('func_call -> ID PARIZQ args PARDER','func_call',4,'p_func_call','ProyectoFinal_Yacc.py',155),
  ('args -> expresion arg','args',2,'p_args','ProyectoFinal_Yacc.py',158),
  ('args -> <empty>','args',0,'p_args','ProyectoFinal_Yacc.py',159),
  ('arg -> COMA expresion arg','arg',3,'p_arg','ProyectoFinal_Yacc.py',162),
  ('arg -> <empty>','arg',0,'p_arg','ProyectoFinal_Yacc.py',163),
  ('bloque -> BRAIZQ estatutos BRADER','bloque',3,'p_bloque','ProyectoFinal_Yacc.py',166),
  ('pars -> tipo ID par','pars',3,'p_pars','ProyectoFinal_Yacc.py',169),
  ('pars -> <empty>','pars',0,'p_pars','ProyectoFinal_Yacc.py',170),
  ('par -> COMA tipo ID par','par',4,'p_par','ProyectoFinal_Yacc.py',172),
  ('par -> <empty>','par',0,'p_par','ProyectoFinal_Yacc.py',173),
  ('instruccion -> FORWARD PARIZQ expresion PARDER PUNTCOM','instruccion',5,'p_instruccion','ProyectoFinal_Yacc.py',176),
  ('instruccion -> BACKWARD PARIZQ expresion PARDER PUNTCOM','instruccion',5,'p_instruccion','ProyectoFinal_Yacc.py',177),
  ('instruccion -> LEFT PARIZQ expresion PARDER PUNTCOM','instruccion',5,'p_instruccion','ProyectoFinal_Yacc.py',178),
  ('instruccion -> RIGHT PARIZQ expresion PARDER PUNTCOM','instruccion',5,'p_instruccion','ProyectoFinal_Yacc.py',179),
  ('instruccion -> TURN PARIZQ expresion PARDER PUNTCOM','instruccion',5,'p_instruccion','ProyectoFinal_Yacc.py',180),
  ('instruccion -> SIZE PARIZQ expresion PARDER PUNTCOM','instruccion',5,'p_instruccion','ProyectoFinal_Yacc.py',181),
  ('instruccion -> CIRCLE PARIZQ expresion PARDER transform PUNTCOM','instruccion',6,'p_instruccion','ProyectoFinal_Yacc.py',182),
  ('instruccion -> TRIANGLE PARIZQ expresion PARDER transform PUNTCOM','instruccion',6,'p_instruccion','ProyectoFinal_Yacc.py',183),
  ('instruccion -> SQUARE PARIZQ expresion PARDER transform PUNTCOM','instruccion',6,'p_instruccion','ProyectoFinal_Yacc.py',184),
  ('instruccion -> NGON PARIZQ expresion COMA expresion PARDER transform PUNTCOM','instruccion',8,'p_instruccion','ProyectoFinal_Yacc.py',185),
  ('instruccion -> ARC PARIZQ expresion COMA expresion PARDER transform PUNTCOM','instruccion',8,'p_instruccion','ProyectoFinal_Yacc.py',186),
  ('instruccion -> UP PARIZQ PARDER PUNTCOM','instruccion',4,'p_instruccion','ProyectoFinal_Yacc.py',187),
  ('instruccion -> DOWN PARIZQ PARDER PUNTCOM','instruccion',4,'p_instruccion','ProyectoFinal_Yacc.py',188),
  ('instruccion -> COLOR PARIZQ expresion COMA expresion COMA expresion PARDER PUNTCOM','instruccion',9,'p_instruccion','ProyectoFinal_Yacc.py',189),
  ('transform -> PUNTO altera transform','transform',3,'p_transform','ProyectoFinal_Yacc.py',192),
  ('transform -> <empty>','transform',0,'p_transform','ProyectoFinal_Yacc.py',193),
  ('altera -> ROTATE PARIZQ expresion PARDER','altera',4,'p_altera','ProyectoFinal_Yacc.py',196),
  ('altera -> STRETCH PARIZQ expresion PARDER','altera',4,'p_altera','ProyectoFinal_Yacc.py',197),
  ('altera -> FILL PARIZQ PARDER','altera',3,'p_altera','ProyectoFinal_Yacc.py',198),
]
