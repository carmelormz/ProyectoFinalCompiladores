
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ARC ASIG BACKGROUND BACKWARD BRADER BRAIZQ CANVAS CIRCLE COLOR COMA CORDER CORIZQ CTE_F CTE_I CTE_STR DIF DIV DOWN ELSE FILL FLOAT FORWARD HEIGHT ID IF IGUAL IMPORT INPUT INT LEFT MAIN MAYIGUAL MAYOR MENIGUAL MENOR MOD MODULE MULT NGON OR PARDER PARIZQ PRINT PUNTCOM PUNTO REPEAT RESTA RETURN RIGHT ROTATE SIZE SQUARE STRETCH SUMA TRIANGLE TURN UP VOID WIDTHprograma : MODULE CTE_STR creaDirFunc PUNTCOM ajustes var_func tipo_main MAIN actualiza_id crea_func bloque_functipo_main : creaDirFunc : ajustes : CANVAS BRAIZQ WIDTH CTE_I PUNTCOM HEIGHT CTE_I PUNTCOM BACKGROUND CTE_I COMA CTE_I COMA CTE_I PUNTCOM BRADER\n               | IMPORT CTE_STR PUNTCOMvar_func : tipo ID actualiza_id var_o_func\n                | \n       var_o_func : PARIZQ crea_func pars PARDER bloque_func funcs\n                  | crea_var lista_dec vars_lista PUNTCOM var_funcactualiza_id : tipo : INT actualiza_tipo\n            | FLOAT actualiza_tipoactualiza_tipo : crea_var : lista_dec : CORIZQ CTE_I CORDER matriz_dec\n                 | matriz_dec : CORIZQ CTE_I CORDER\n                  | bloque_func : BRAIZQ vars_estatutos RETURN returns BRADER end_subend_sub :  vars_estatutos : vars estatutos\n                       | estatutos\n        estatutos : estatuto estatutos\n                  | \n        vars : tipo ID actualiza_id crea_var lista_dec vars_lista PUNTCOM mas_vars\n        vars_lista : COMA ID actualiza_id crea_var lista_dec vars_lista\n                   |\n        mas_vars : vars\n                 | \n        funcs : func funcs\n              |\n        func : tipo ID actualiza_id crea_func PARIZQ pars PARDER bloque_func\n             | VOID tipo_void ID actualiza_id crea_func PARIZQ pars PARDER bloque_func\n        var_func : VOID tipo_void ID actualiza_id crea_func PARIZQ pars PARDER bloque_func funcsreturns : expresion PUNTCOM\n               | PUNTCOMpars : tipo ID actualiza_id crea_var gen_dir par\n            | par : COMA tipo ID actualiza_id crea_var gen_dir par\n           | gen_dir : tipo_void : crea_func : push_oper : pop_or : pop_and : pop_rel_e : pop_suma_resta : pop_mult_div : expresion : expr pop_or or_expr\n       or_expr : OR push_oper expresion\n               | \n       expr : exp pop_and and_exp\n       and_exp : AND push_oper expr\n               | \n       exp : e pop_rel_e rel_e\n       rel_e : DIF push_oper exp\n             | MENOR push_oper exp\n             | MAYOR push_oper  exp\n             | MENIGUAL push_oper exp\n             | MAYIGUAL push_oper exp\n             | IGUAL push_oper exp\n             |\n       e : termino pop_suma_resta suma_resta\n       suma_resta : SUMA push_oper e\n                  | RESTA push_oper e\n                  | \n       termino : factor pop_mult_div mult_div \n       mult_div : MULT push_oper termino\n                | DIV push_oper termino\n                | MOD push_oper termino\n                | \n       factor : PARIZQ push_paren expresion PARDER pop_paren\n              | var\n              | RESTA var neg\n       var : ID actualiza_id push_paren var_func_call pop_paren\n       var_func_call : listaneg : var : CTE_Ivar : CTE_Fpush_paren : pop_paren : push_dim : pop_dim : lista : CORIZQ push_dim expresion CORDER matriz\n             | matriz : CORIZQ expresion CORDER pop_dim\n              | pop_dimestatuto : asignacion\n                | condicion\n                | escritura\n                | ciclo\n                | instruccion\n                | void_func_call PUNTCOM\n       bloque : BRAIZQ estatutos BRADER void_func_call : ID actualiza_id actualiza_func is_void PARIZQ args gen_era PARDER gen_gosub\n       var_func_call : PARIZQ actualiza_func args gen_era PARDER gen_gosub\n       args : expresion asig_par arg\n            |\n       arg : COMA args\n           | is_void :actualiza_func :gen_era : gen_gosub : asig_par : asignacion : ID actualiza_id lista ASIG exp_input PUNTCOMexp_input : expresionexp_input : INPUT PARIZQ PARDERcondicion : IF PARIZQ expresion fin_exp PARDER bloque else_bloque fin_cond\n       else_bloque : ELSE inicio_else bloque\n                   | fin_cond : inicio_else : fin_exp : ciclo : REPEAT push_cont PARIZQ expresion fin_exp PARDER bloque fin_repeatpush_cont : fin_repeat : escritura : PRINT PARIZQ arg_escritura PARDER PUNTCOM\n       arg_escritura : expresion fin_arg args_escritura\n                     | CTE_STR print_string args_escritura\n       args_escritura : COMA arg_escritura\n                      | fin_arg : print_string : instruccion : FORWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM\n                   | BACKWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM\n                   | LEFT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM\n                   | RIGHT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM\n                   | TURN actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM\n                   | SIZE actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM\n                   | CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM\n                   | TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM\n                   | SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM\n                   | NGON actualiza_instr PARIZQ expresion COMA expresion PARDER fin_instr2 transform PUNTCOM\n                   | ARC actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM\n                   | UP actualiza_instr PARIZQ PARDER fin_instr PUNTCOM\n                   | DOWN actualiza_instr PARIZQ PARDER fin_instr PUNTCOM\n                   | COLOR PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM\n       fill : FILL actualiza_instr PARIZQ PARDER fin_instr trans\n            | altera trans\n       trans : PUNTO altera trans\n             | \n       altera : ROTATE actualiza_instr PARIZQ expresion PARDER fin_instr1\n              | STRETCH actualiza_instr PARIZQ expresion PARDER fin_instr1transform : PUNTO fill\n                 | actualiza_instr : fin_instr : fin_instr1 : fin_instr2 : fin_color : '
    
_lr_action_items = {'MODULE':([0,],[2,]),'$end':([1,39,161,202,],[0,-1,-20,-19,]),'CTE_STR':([2,8,91,233,],[3,15,136,136,]),'PUNTCOM':([3,4,15,17,24,26,30,35,43,47,59,80,81,84,86,110,112,116,118,119,120,121,122,124,126,127,128,129,157,163,164,165,166,167,169,170,171,176,191,192,198,199,203,205,207,214,217,222,223,224,225,226,236,237,238,239,240,241,242,243,244,246,247,248,254,269,270,271,273,278,283,284,285,286,287,288,289,290,291,293,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,318,322,323,334,336,337,338,339,344,348,357,359,364,366,372,374,377,381,382,387,388,390,398,399,400,405,406,407,408,409,410,],[-3,5,22,-10,-14,32,-16,-27,79,83,89,-10,-18,117,-10,-14,-15,162,-45,-46,-47,-48,-49,-74,-10,-79,-80,-14,-16,-52,-55,-63,-67,-72,-78,-81,-16,231,-149,-149,-27,-17,-50,-53,-56,-64,-68,-75,-86,-27,274,-108,-150,-150,-150,-150,-150,-150,-150,-150,-150,-150,294,295,-26,-82,-82,-77,317,-84,328,329,330,331,332,333,-147,-147,-147,-147,-51,-54,-57,-58,-59,-60,-61,-62,-65,-66,-69,-70,-71,-73,-76,-109,-85,-88,356,362,363,-151,365,370,-105,-146,-143,-147,-152,-96,-84,-141,393,394,-105,-87,-143,-97,-149,-142,-143,-150,-150,-140,-144,-145,]),'CANVAS':([5,],[7,]),'IMPORT':([5,],[8,]),'MAIN':([6,9,16,22,28,79,107,109,152,153,159,161,194,200,202,386,395,403,],[-7,-2,23,-5,-6,-7,-31,-9,-8,-31,-31,-20,-30,-34,-19,-4,-32,-33,]),'VOID':([6,22,79,107,153,159,161,202,386,395,403,],[11,-5,11,155,155,155,-20,-19,-4,-32,-33,]),'INT':([6,22,29,34,40,46,79,107,153,159,161,202,253,317,341,368,386,395,403,],[12,-5,-43,12,12,12,12,12,12,12,-20,-19,12,12,12,12,-4,-32,-33,]),'FLOAT':([6,22,29,34,40,46,79,107,153,159,161,202,253,317,341,368,386,395,403,],[13,-5,-43,13,13,13,13,13,13,13,-20,-19,13,13,13,13,-4,-32,-33,]),'BRAIZQ':([7,23,27,33,77,113,230,282,325,353,383,396,],[14,-10,-43,40,40,40,280,280,-114,280,40,40,]),'ID':([10,11,12,13,18,19,20,40,42,44,49,51,53,54,55,56,57,58,84,89,90,91,106,123,125,132,137,138,139,140,141,142,143,144,145,146,147,148,154,155,168,172,174,193,196,204,206,208,209,210,211,212,213,215,216,218,219,220,228,231,233,245,256,257,258,259,260,261,262,263,264,265,266,267,268,272,274,279,280,294,295,296,299,316,317,321,324,327,328,329,330,331,332,333,346,347,350,352,354,355,356,362,363,365,375,391,392,393,394,],[17,-42,-13,-13,25,-11,-12,52,78,80,52,86,52,-89,-90,-91,-92,-93,126,-94,126,126,126,-81,126,-83,126,126,126,126,126,126,126,126,126,126,126,126,195,-42,126,126,126,126,251,-44,-44,-44,-44,-44,-44,-44,-44,-44,-44,-44,-44,-44,126,-119,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,-103,-107,-112,52,-137,-138,126,343,126,-29,126,-113,-118,-126,-127,-128,-129,-130,-131,-25,-28,126,-110,-95,-116,-132,-133,-134,-136,-111,126,126,-135,-139,]),'WIDTH':([14,],[21,]),'PARIZQ':([17,24,25,31,37,52,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,84,87,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,123,126,131,132,137,138,139,140,141,142,143,144,145,146,147,148,168,170,172,173,174,193,195,204,206,208,209,210,211,212,213,215,216,218,219,220,223,227,228,233,245,250,251,256,257,258,259,260,261,262,263,264,265,266,267,268,272,296,297,298,316,321,342,350,358,360,361,376,379,380,391,392,],[-10,29,-10,-43,46,-10,90,91,-117,-148,-148,-148,-148,-148,-148,-148,-148,-148,-148,-148,-148,-148,106,123,-103,123,123,137,138,139,140,141,142,143,144,145,146,147,148,149,150,123,-81,-10,-102,-83,123,123,123,123,123,123,123,123,123,123,123,123,123,-81,123,228,123,123,-10,-44,-44,-44,-44,-44,-44,-44,-44,-44,-44,-44,-44,-44,272,275,123,123,123,-43,-10,123,123,123,123,123,123,123,123,123,123,123,123,123,-103,123,341,-43,123,123,368,123,-148,-148,-148,389,391,392,123,123,]),'CORIZQ':([17,24,30,52,80,81,86,87,110,126,129,157,170,171,223,278,],[-10,-14,36,-10,-10,111,-10,132,-14,-10,-14,36,-81,36,132,321,]),'COMA':([17,24,30,35,78,80,81,86,108,110,112,118,119,120,121,122,124,126,127,128,129,135,136,151,156,157,160,163,164,165,166,167,169,170,171,177,178,189,197,198,199,203,205,207,214,217,222,223,224,249,255,269,270,271,277,278,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,320,322,323,343,369,374,385,387,388,397,398,],[-10,-14,-16,44,-10,-10,-18,-10,-14,-14,-15,-45,-46,-47,-48,-49,-74,-10,-79,-80,-14,-124,-125,193,-41,-16,201,-52,-55,-63,-67,-72,-78,-81,-16,233,233,245,253,44,-17,-50,-53,-56,-64,-68,-75,-86,44,296,300,-82,-82,-77,-106,-84,-51,-54,-57,-58,-59,-60,-61,-62,-65,-66,-69,-70,-71,-73,-76,350,-85,-88,-10,-14,-84,-41,-105,-87,253,-97,]),'CTE_I':([21,36,38,84,90,91,106,111,114,123,125,132,137,138,139,140,141,142,143,144,145,146,147,148,168,172,174,193,201,204,206,208,209,210,211,212,213,215,216,218,219,220,228,233,245,256,257,258,259,260,261,262,263,264,265,266,267,268,272,296,300,316,321,350,391,392,],[26,45,47,127,127,127,127,158,160,-81,127,-83,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,255,-44,-44,-44,-44,-44,-44,-44,-44,-44,-44,-44,-44,-44,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,-103,127,344,127,127,127,127,127,]),'PARDER':([29,34,41,46,78,82,108,118,119,120,121,122,124,126,127,128,133,134,135,136,149,150,156,163,164,165,166,167,169,170,175,177,178,179,180,181,182,183,184,185,186,187,188,190,197,203,205,207,214,217,221,222,223,228,232,234,235,252,269,270,271,272,275,276,277,278,281,292,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,319,320,322,323,340,341,343,345,349,350,367,368,369,371,373,374,384,385,387,388,389,397,398,401,402,404,],[-43,-38,77,-38,-10,113,-14,-45,-46,-47,-48,-49,-74,-10,-79,-80,-115,176,-124,-125,191,192,-41,-52,-55,-63,-67,-72,-78,-81,230,-123,-123,-115,236,237,238,239,240,241,242,243,244,246,-40,-50,-53,-56,-64,-68,269,-75,-86,-99,-120,-121,282,-37,-82,-82,-77,-103,318,-104,-106,-84,-122,338,-51,-54,-57,-58,-59,-60,-61,-62,-65,-66,-69,-70,-71,-73,-76,-99,348,-101,-85,-88,366,-38,-10,-104,-98,-99,383,-38,-14,387,-100,-84,396,-41,-105,-87,399,-40,-97,406,407,-39,]),'HEIGHT':([32,],[38,]),'RETURN':([40,48,49,50,53,54,55,56,57,58,85,88,89,231,274,279,294,295,317,324,327,328,329,330,331,332,333,346,347,352,354,355,356,362,363,365,375,393,394,],[-24,84,-24,-22,-24,-89,-90,-91,-92,-93,-21,-23,-94,-119,-107,-112,-137,-138,-29,-113,-118,-126,-127,-128,-129,-130,-131,-25,-28,-110,-95,-116,-132,-133,-134,-136,-111,-135,-139,]),'IF':([40,49,53,54,55,56,57,58,89,231,274,279,280,294,295,317,324,327,328,329,330,331,332,333,346,347,352,354,355,356,362,363,365,375,393,394,],[60,60,60,-89,-90,-91,-92,-93,-94,-119,-107,-112,60,-137,-138,-29,-113,-118,-126,-127,-128,-129,-130,-131,-25,-28,-110,-95,-116,-132,-133,-134,-136,-111,-135,-139,]),'PRINT':([40,49,53,54,55,56,57,58,89,231,274,279,280,294,295,317,324,327,328,329,330,331,332,333,346,347,352,354,355,356,362,363,365,375,393,394,],[61,61,61,-89,-90,-91,-92,-93,-94,-119,-107,-112,61,-137,-138,-29,-113,-118,-126,-127,-128,-129,-130,-131,-25,-28,-110,-95,-116,-132,-133,-134,-136,-111,-135,-139,]),'REPEAT':([40,49,53,54,55,56,57,58,89,231,274,279,280,294,295,317,324,327,328,329,330,331,332,333,346,347,352,354,355,356,362,363,365,375,393,394,],[62,62,62,-89,-90,-91,-92,-93,-94,-119,-107,-112,62,-137,-138,-29,-113,-118,-126,-127,-128,-129,-130,-131,-25,-28,-110,-95,-116,-132,-133,-134,-136,-111,-135,-139,]),'FORWARD':([40,49,53,54,55,56,57,58,89,231,274,279,280,294,295,317,324,327,328,329,330,331,332,333,346,347,352,354,355,356,362,363,365,375,393,394,],[63,63,63,-89,-90,-91,-92,-93,-94,-119,-107,-112,63,-137,-138,-29,-113,-118,-126,-127,-128,-129,-130,-131,-25,-28,-110,-95,-116,-132,-133,-134,-136,-111,-135,-139,]),'BACKWARD':([40,49,53,54,55,56,57,58,89,231,274,279,280,294,295,317,324,327,328,329,330,331,332,333,346,347,352,354,355,356,362,363,365,375,393,394,],[64,64,64,-89,-90,-91,-92,-93,-94,-119,-107,-112,64,-137,-138,-29,-113,-118,-126,-127,-128,-129,-130,-131,-25,-28,-110,-95,-116,-132,-133,-134,-136,-111,-135,-139,]),'LEFT':([40,49,53,54,55,56,57,58,89,231,274,279,280,294,295,317,324,327,328,329,330,331,332,333,346,347,352,354,355,356,362,363,365,375,393,394,],[65,65,65,-89,-90,-91,-92,-93,-94,-119,-107,-112,65,-137,-138,-29,-113,-118,-126,-127,-128,-129,-130,-131,-25,-28,-110,-95,-116,-132,-133,-134,-136,-111,-135,-139,]),'RIGHT':([40,49,53,54,55,56,57,58,89,231,274,279,280,294,295,317,324,327,328,329,330,331,332,333,346,347,352,354,355,356,362,363,365,375,393,394,],[66,66,66,-89,-90,-91,-92,-93,-94,-119,-107,-112,66,-137,-138,-29,-113,-118,-126,-127,-128,-129,-130,-131,-25,-28,-110,-95,-116,-132,-133,-134,-136,-111,-135,-139,]),'TURN':([40,49,53,54,55,56,57,58,89,231,274,279,280,294,295,317,324,327,328,329,330,331,332,333,346,347,352,354,355,356,362,363,365,375,393,394,],[67,67,67,-89,-90,-91,-92,-93,-94,-119,-107,-112,67,-137,-138,-29,-113,-118,-126,-127,-128,-129,-130,-131,-25,-28,-110,-95,-116,-132,-133,-134,-136,-111,-135,-139,]),'SIZE':([40,49,53,54,55,56,57,58,89,231,274,279,280,294,295,317,324,327,328,329,330,331,332,333,346,347,352,354,355,356,362,363,365,375,393,394,],[68,68,68,-89,-90,-91,-92,-93,-94,-119,-107,-112,68,-137,-138,-29,-113,-118,-126,-127,-128,-129,-130,-131,-25,-28,-110,-95,-116,-132,-133,-134,-136,-111,-135,-139,]),'CIRCLE':([40,49,53,54,55,56,57,58,89,231,274,279,280,294,295,317,324,327,328,329,330,331,332,333,346,347,352,354,355,356,362,363,365,375,393,394,],[69,69,69,-89,-90,-91,-92,-93,-94,-119,-107,-112,69,-137,-138,-29,-113,-118,-126,-127,-128,-129,-130,-131,-25,-28,-110,-95,-116,-132,-133,-134,-136,-111,-135,-139,]),'TRIANGLE':([40,49,53,54,55,56,57,58,89,231,274,279,280,294,295,317,324,327,328,329,330,331,332,333,346,347,352,354,355,356,362,363,365,375,393,394,],[70,70,70,-89,-90,-91,-92,-93,-94,-119,-107,-112,70,-137,-138,-29,-113,-118,-126,-127,-128,-129,-130,-131,-25,-28,-110,-95,-116,-132,-133,-134,-136,-111,-135,-139,]),'SQUARE':([40,49,53,54,55,56,57,58,89,231,274,279,280,294,295,317,324,327,328,329,330,331,332,333,346,347,352,354,355,356,362,363,365,375,393,394,],[71,71,71,-89,-90,-91,-92,-93,-94,-119,-107,-112,71,-137,-138,-29,-113,-118,-126,-127,-128,-129,-130,-131,-25,-28,-110,-95,-116,-132,-133,-134,-136,-111,-135,-139,]),'NGON':([40,49,53,54,55,56,57,58,89,231,274,279,280,294,295,317,324,327,328,329,330,331,332,333,346,347,352,354,355,356,362,363,365,375,393,394,],[72,72,72,-89,-90,-91,-92,-93,-94,-119,-107,-112,72,-137,-138,-29,-113,-118,-126,-127,-128,-129,-130,-131,-25,-28,-110,-95,-116,-132,-133,-134,-136,-111,-135,-139,]),'ARC':([40,49,53,54,55,56,57,58,89,231,274,279,280,294,295,317,324,327,328,329,330,331,332,333,346,347,352,354,355,356,362,363,365,375,393,394,],[73,73,73,-89,-90,-91,-92,-93,-94,-119,-107,-112,73,-137,-138,-29,-113,-118,-126,-127,-128,-129,-130,-131,-25,-28,-110,-95,-116,-132,-133,-134,-136,-111,-135,-139,]),'UP':([40,49,53,54,55,56,57,58,89,231,274,279,280,294,295,317,324,327,328,329,330,331,332,333,346,347,352,354,355,356,362,363,365,375,393,394,],[74,74,74,-89,-90,-91,-92,-93,-94,-119,-107,-112,74,-137,-138,-29,-113,-118,-126,-127,-128,-129,-130,-131,-25,-28,-110,-95,-116,-132,-133,-134,-136,-111,-135,-139,]),'DOWN':([40,49,53,54,55,56,57,58,89,231,274,279,280,294,295,317,324,327,328,329,330,331,332,333,346,347,352,354,355,356,362,363,365,375,393,394,],[75,75,75,-89,-90,-91,-92,-93,-94,-119,-107,-112,75,-137,-138,-29,-113,-118,-126,-127,-128,-129,-130,-131,-25,-28,-110,-95,-116,-132,-133,-134,-136,-111,-135,-139,]),'COLOR':([40,49,53,54,55,56,57,58,89,231,274,279,280,294,295,317,324,327,328,329,330,331,332,333,346,347,352,354,355,356,362,363,365,375,393,394,],[76,76,76,-89,-90,-91,-92,-93,-94,-119,-107,-112,76,-137,-138,-29,-113,-118,-126,-127,-128,-129,-130,-131,-25,-28,-110,-95,-116,-132,-133,-134,-136,-111,-135,-139,]),'CORDER':([45,118,119,120,121,122,124,126,127,128,158,163,164,165,166,167,169,170,203,205,207,214,217,222,223,229,269,270,271,278,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,322,323,351,374,387,388,398,],[81,-45,-46,-47,-48,-49,-74,-10,-79,-80,199,-52,-55,-63,-67,-72,-78,-81,-50,-53,-56,-64,-68,-75,-86,278,-82,-82,-77,-84,-51,-54,-57,-58,-59,-60,-61,-62,-65,-66,-69,-70,-71,-73,-76,-85,-88,374,-84,-105,-87,-97,]),'ASIG':([52,87,130,278,322,323,374,388,],[-10,-86,172,-84,-85,-88,-84,-87,]),'BRADER':([53,54,55,56,57,58,88,89,115,117,162,231,274,279,280,294,295,324,326,327,328,329,330,331,332,333,352,354,355,356,362,363,365,370,375,393,394,],[-24,-89,-90,-91,-92,-93,-23,-94,161,-36,-35,-119,-107,-112,-24,-137,-138,-113,354,-118,-126,-127,-128,-129,-130,-131,-110,-95,-116,-132,-133,-134,-136,386,-111,-135,-139,]),'BACKGROUND':([83,],[114,]),'RESTA':([84,90,91,106,121,122,123,124,126,127,128,132,137,138,139,140,141,142,143,144,145,146,147,148,166,167,168,169,170,172,174,193,204,206,208,209,210,211,212,213,215,216,217,218,219,220,222,223,228,233,245,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,278,296,311,312,313,314,315,316,321,322,323,350,374,387,388,391,392,398,],[125,125,125,125,-48,-49,-81,-74,-10,-79,-80,-83,125,125,125,125,125,125,125,125,125,125,125,125,216,-72,125,-78,-81,125,125,125,-44,-44,-44,-44,-44,-44,-44,-44,-44,-44,-68,-44,-44,-44,-75,-86,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,-82,-82,-77,-103,-84,125,-69,-70,-71,-73,-76,125,125,-85,-88,125,-84,-105,-87,125,125,-97,]),'CTE_F':([84,90,91,106,123,125,132,137,138,139,140,141,142,143,144,145,146,147,148,168,172,174,193,204,206,208,209,210,211,212,213,215,216,218,219,220,228,233,245,256,257,258,259,260,261,262,263,264,265,266,267,268,272,296,316,321,350,391,392,],[128,128,128,128,-81,128,-83,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,-44,-44,-44,-44,-44,-44,-44,-44,-44,-44,-44,-44,-44,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,-103,128,128,128,128,128,128,]),'OR':([118,119,120,121,122,124,126,127,128,163,164,165,166,167,169,170,205,207,214,217,222,223,269,270,271,278,302,303,304,305,306,307,308,309,310,311,312,313,314,315,322,323,374,387,388,398,],[-45,-46,-47,-48,-49,-74,-10,-79,-80,204,-55,-63,-67,-72,-78,-81,-53,-56,-64,-68,-75,-86,-82,-82,-77,-84,-54,-57,-58,-59,-60,-61,-62,-65,-66,-69,-70,-71,-73,-76,-85,-88,-84,-105,-87,-97,]),'AND':([119,120,121,122,124,126,127,128,164,165,166,167,169,170,207,214,217,222,223,269,270,271,278,303,304,305,306,307,308,309,310,311,312,313,314,315,322,323,374,387,388,398,],[-46,-47,-48,-49,-74,-10,-79,-80,206,-63,-67,-72,-78,-81,-56,-64,-68,-75,-86,-82,-82,-77,-84,-57,-58,-59,-60,-61,-62,-65,-66,-69,-70,-71,-73,-76,-85,-88,-84,-105,-87,-97,]),'DIF':([120,121,122,124,126,127,128,165,166,167,169,170,214,217,222,223,269,270,271,278,309,310,311,312,313,314,315,322,323,374,387,388,398,],[-47,-48,-49,-74,-10,-79,-80,208,-67,-72,-78,-81,-64,-68,-75,-86,-82,-82,-77,-84,-65,-66,-69,-70,-71,-73,-76,-85,-88,-84,-105,-87,-97,]),'MENOR':([120,121,122,124,126,127,128,165,166,167,169,170,214,217,222,223,269,270,271,278,309,310,311,312,313,314,315,322,323,374,387,388,398,],[-47,-48,-49,-74,-10,-79,-80,209,-67,-72,-78,-81,-64,-68,-75,-86,-82,-82,-77,-84,-65,-66,-69,-70,-71,-73,-76,-85,-88,-84,-105,-87,-97,]),'MAYOR':([120,121,122,124,126,127,128,165,166,167,169,170,214,217,222,223,269,270,271,278,309,310,311,312,313,314,315,322,323,374,387,388,398,],[-47,-48,-49,-74,-10,-79,-80,210,-67,-72,-78,-81,-64,-68,-75,-86,-82,-82,-77,-84,-65,-66,-69,-70,-71,-73,-76,-85,-88,-84,-105,-87,-97,]),'MENIGUAL':([120,121,122,124,126,127,128,165,166,167,169,170,214,217,222,223,269,270,271,278,309,310,311,312,313,314,315,322,323,374,387,388,398,],[-47,-48,-49,-74,-10,-79,-80,211,-67,-72,-78,-81,-64,-68,-75,-86,-82,-82,-77,-84,-65,-66,-69,-70,-71,-73,-76,-85,-88,-84,-105,-87,-97,]),'MAYIGUAL':([120,121,122,124,126,127,128,165,166,167,169,170,214,217,222,223,269,270,271,278,309,310,311,312,313,314,315,322,323,374,387,388,398,],[-47,-48,-49,-74,-10,-79,-80,212,-67,-72,-78,-81,-64,-68,-75,-86,-82,-82,-77,-84,-65,-66,-69,-70,-71,-73,-76,-85,-88,-84,-105,-87,-97,]),'IGUAL':([120,121,122,124,126,127,128,165,166,167,169,170,214,217,222,223,269,270,271,278,309,310,311,312,313,314,315,322,323,374,387,388,398,],[-47,-48,-49,-74,-10,-79,-80,213,-67,-72,-78,-81,-64,-68,-75,-86,-82,-82,-77,-84,-65,-66,-69,-70,-71,-73,-76,-85,-88,-84,-105,-87,-97,]),'SUMA':([121,122,124,126,127,128,166,167,169,170,217,222,223,269,270,271,278,311,312,313,314,315,322,323,374,387,388,398,],[-48,-49,-74,-10,-79,-80,215,-72,-78,-81,-68,-75,-86,-82,-82,-77,-84,-69,-70,-71,-73,-76,-85,-88,-84,-105,-87,-97,]),'MULT':([122,124,126,127,128,167,169,170,222,223,269,270,271,278,314,315,322,323,374,387,388,398,],[-49,-74,-10,-79,-80,218,-78,-81,-75,-86,-82,-82,-77,-84,-73,-76,-85,-88,-84,-105,-87,-97,]),'DIV':([122,124,126,127,128,167,169,170,222,223,269,270,271,278,314,315,322,323,374,387,388,398,],[-49,-74,-10,-79,-80,219,-78,-81,-75,-86,-82,-82,-77,-84,-73,-76,-85,-88,-84,-105,-87,-97,]),'MOD':([122,124,126,127,128,167,169,170,222,223,269,270,271,278,314,315,322,323,374,387,388,398,],[-49,-74,-10,-79,-80,220,-78,-81,-75,-86,-82,-82,-77,-84,-73,-76,-85,-88,-84,-105,-87,-97,]),'INPUT':([172,],[227,]),'PUNTO':([242,243,244,246,289,290,291,293,338,359,364,390,399,405,406,407,409,410,],[-150,-150,-150,-150,335,335,335,335,-151,378,335,378,-149,378,-150,-150,-144,-145,]),'ELSE':([279,354,],[325,-95,]),'FILL':([335,],[358,]),'ROTATE':([335,378,],[360,360,]),'STRETCH':([335,378,],[361,361,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'creaDirFunc':([3,],[4,]),'ajustes':([5,],[6,]),'var_func':([6,79,],[9,109,]),'tipo':([6,34,40,46,79,107,153,159,253,317,341,368,],[10,42,51,42,10,154,154,154,299,51,42,42,]),'tipo_main':([9,],[16,]),'tipo_void':([11,155,],[18,196,]),'actualiza_tipo':([12,13,],[19,20,]),'actualiza_id':([17,23,25,52,78,80,86,126,195,251,343,],[24,27,31,87,108,110,129,170,250,298,369,]),'var_o_func':([24,],[28,]),'crea_var':([24,108,110,129,369,],[30,156,157,171,385,]),'crea_func':([27,29,31,250,298,],[33,34,37,297,342,]),'lista_dec':([30,157,171,],[35,198,224,]),'bloque_func':([33,77,113,383,396,],[39,107,159,395,403,]),'pars':([34,46,341,368,],[41,82,367,384,]),'vars_lista':([35,198,224,],[43,254,273,]),'vars_estatutos':([40,],[48,]),'vars':([40,317,],[49,347,]),'estatutos':([40,49,53,280,],[50,85,88,326,]),'estatuto':([40,49,53,280,],[53,53,53,53,]),'asignacion':([40,49,53,280,],[54,54,54,54,]),'condicion':([40,49,53,280,],[55,55,55,55,]),'escritura':([40,49,53,280,],[56,56,56,56,]),'ciclo':([40,49,53,280,],[57,57,57,57,]),'instruccion':([40,49,53,280,],[58,58,58,58,]),'void_func_call':([40,49,53,280,],[59,59,59,59,]),'push_cont':([62,],[92,]),'actualiza_instr':([63,64,65,66,67,68,69,70,71,72,73,74,75,358,360,361,],[93,94,95,96,97,98,99,100,101,102,103,104,105,376,379,380,]),'matriz_dec':([81,],[112,]),'returns':([84,],[115,]),'expresion':([84,90,91,106,137,138,139,140,141,142,143,144,145,146,147,148,168,172,174,193,228,233,245,256,296,316,321,350,391,392,],[116,133,135,151,179,180,181,182,183,184,185,186,187,188,189,190,221,226,229,249,277,135,292,301,340,277,351,277,401,402,]),'expr':([84,90,91,106,137,138,139,140,141,142,143,144,145,146,147,148,168,172,174,193,228,233,245,256,257,296,316,321,350,391,392,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,302,118,118,118,118,118,118,]),'exp':([84,90,91,106,137,138,139,140,141,142,143,144,145,146,147,148,168,172,174,193,228,233,245,256,257,258,259,260,261,262,263,296,316,321,350,391,392,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,303,304,305,306,307,308,119,119,119,119,119,119,]),'e':([84,90,91,106,137,138,139,140,141,142,143,144,145,146,147,148,168,172,174,193,228,233,245,256,257,258,259,260,261,262,263,264,265,296,316,321,350,391,392,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,309,310,120,120,120,120,120,120,]),'termino':([84,90,91,106,137,138,139,140,141,142,143,144,145,146,147,148,168,172,174,193,228,233,245,256,257,258,259,260,261,262,263,264,265,266,267,268,296,316,321,350,391,392,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,311,312,313,121,121,121,121,121,121,]),'factor':([84,90,91,106,137,138,139,140,141,142,143,144,145,146,147,148,168,172,174,193,228,233,245,256,257,258,259,260,261,262,263,264,265,266,267,268,296,316,321,350,391,392,],[122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,]),'var':([84,90,91,106,125,137,138,139,140,141,142,143,144,145,146,147,148,168,172,174,193,228,233,245,256,257,258,259,260,261,262,263,264,265,266,267,268,296,316,321,350,391,392,],[124,124,124,124,169,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,]),'lista':([87,223,],[130,271,]),'actualiza_func':([87,272,],[131,316,]),'arg_escritura':([91,233,],[134,281,]),'funcs':([107,153,159,],[152,194,200,]),'func':([107,153,159,],[153,153,153,]),'pop_or':([118,],[163,]),'pop_and':([119,],[164,]),'pop_rel_e':([120,],[165,]),'pop_suma_resta':([121,],[166,]),'pop_mult_div':([122,],[167,]),'push_paren':([123,170,],[168,223,]),'is_void':([131,],[173,]),'push_dim':([132,],[174,]),'fin_exp':([133,179,],[175,235,]),'fin_arg':([135,],[177,]),'print_string':([136,],[178,]),'gen_dir':([156,385,],[197,397,]),'end_sub':([161,],[202,]),'or_expr':([163,],[203,]),'and_exp':([164,],[205,]),'rel_e':([165,],[207,]),'suma_resta':([166,],[214,]),'mult_div':([167,],[217,]),'neg':([169,],[222,]),'exp_input':([172,],[225,]),'args_escritura':([177,178,],[232,234,]),'fin_instr':([191,192,399,],[247,248,405,]),'par':([197,397,],[252,404,]),'push_oper':([204,206,208,209,210,211,212,213,215,216,218,219,220,],[256,257,258,259,260,261,262,263,264,265,266,267,268,]),'var_func_call':([223,],[270,]),'args':([228,316,350,],[276,345,373,]),'bloque':([230,282,353,],[279,327,375,]),'fin_instr1':([236,237,238,239,240,241,242,243,244,246,406,407,],[283,284,285,286,287,288,289,290,291,293,409,410,]),'pop_paren':([269,270,],[314,315,]),'gen_era':([276,345,],[319,371,]),'asig_par':([277,],[320,]),'matriz':([278,],[322,]),'pop_dim':([278,374,],[323,388,]),'else_bloque':([279,],[324,]),'transform':([289,290,291,293,364,],[334,336,337,339,381,]),'mas_vars':([317,],[346,]),'arg':([320,],[349,]),'fin_cond':([324,],[352,]),'inicio_else':([325,],[353,]),'fin_repeat':([327,],[355,]),'fill':([335,],[357,]),'altera':([335,378,],[359,390,]),'fin_instr2':([338,],[364,]),'gen_gosub':([348,387,],[372,398,]),'trans':([359,390,405,],[377,400,408,]),'fin_color':([366,],[382,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> MODULE CTE_STR creaDirFunc PUNTCOM ajustes var_func tipo_main MAIN actualiza_id crea_func bloque_func','programa',11,'p_programa','ProyectoFinal_Yacc.py',50),
  ('tipo_main -> <empty>','tipo_main',0,'p_tipo_main','ProyectoFinal_Yacc.py',54),
  ('creaDirFunc -> <empty>','creaDirFunc',0,'p_creaDirFunc','ProyectoFinal_Yacc.py',64),
  ('ajustes -> CANVAS BRAIZQ WIDTH CTE_I PUNTCOM HEIGHT CTE_I PUNTCOM BACKGROUND CTE_I COMA CTE_I COMA CTE_I PUNTCOM BRADER','ajustes',16,'p_ajustes','ProyectoFinal_Yacc.py',85),
  ('ajustes -> IMPORT CTE_STR PUNTCOM','ajustes',3,'p_ajustes','ProyectoFinal_Yacc.py',86),
  ('var_func -> tipo ID actualiza_id var_o_func','var_func',4,'p_var_func','ProyectoFinal_Yacc.py',102),
  ('var_func -> <empty>','var_func',0,'p_var_func','ProyectoFinal_Yacc.py',103),
  ('var_o_func -> PARIZQ crea_func pars PARDER bloque_func funcs','var_o_func',6,'p_var_func','ProyectoFinal_Yacc.py',104),
  ('var_o_func -> crea_var lista_dec vars_lista PUNTCOM var_func','var_o_func',5,'p_var_func','ProyectoFinal_Yacc.py',105),
  ('actualiza_id -> <empty>','actualiza_id',0,'p_actualiza_id','ProyectoFinal_Yacc.py',109),
  ('tipo -> INT actualiza_tipo','tipo',2,'p_tipo','ProyectoFinal_Yacc.py',116),
  ('tipo -> FLOAT actualiza_tipo','tipo',2,'p_tipo','ProyectoFinal_Yacc.py',117),
  ('actualiza_tipo -> <empty>','actualiza_tipo',0,'p_actualiza_tipo','ProyectoFinal_Yacc.py',122),
  ('crea_var -> <empty>','crea_var',0,'p_crea_var','ProyectoFinal_Yacc.py',128),
  ('lista_dec -> CORIZQ CTE_I CORDER matriz_dec','lista_dec',4,'p_lista_dec','ProyectoFinal_Yacc.py',138),
  ('lista_dec -> <empty>','lista_dec',0,'p_lista_dec','ProyectoFinal_Yacc.py',139),
  ('matriz_dec -> CORIZQ CTE_I CORDER','matriz_dec',3,'p_matriz_dec','ProyectoFinal_Yacc.py',175),
  ('matriz_dec -> <empty>','matriz_dec',0,'p_matriz_dec','ProyectoFinal_Yacc.py',176),
  ('bloque_func -> BRAIZQ vars_estatutos RETURN returns BRADER end_sub','bloque_func',6,'p_bloque_func','ProyectoFinal_Yacc.py',186),
  ('end_sub -> <empty>','end_sub',0,'p_end_sub','ProyectoFinal_Yacc.py',192),
  ('vars_estatutos -> vars estatutos','vars_estatutos',2,'p_vars_estatutos','ProyectoFinal_Yacc.py',203),
  ('vars_estatutos -> estatutos','vars_estatutos',1,'p_vars_estatutos','ProyectoFinal_Yacc.py',204),
  ('estatutos -> estatuto estatutos','estatutos',2,'p_vars_estatutos','ProyectoFinal_Yacc.py',205),
  ('estatutos -> <empty>','estatutos',0,'p_vars_estatutos','ProyectoFinal_Yacc.py',206),
  ('vars -> tipo ID actualiza_id crea_var lista_dec vars_lista PUNTCOM mas_vars','vars',8,'p_vars_estatutos','ProyectoFinal_Yacc.py',207),
  ('vars_lista -> COMA ID actualiza_id crea_var lista_dec vars_lista','vars_lista',6,'p_vars_estatutos','ProyectoFinal_Yacc.py',208),
  ('vars_lista -> <empty>','vars_lista',0,'p_vars_estatutos','ProyectoFinal_Yacc.py',209),
  ('mas_vars -> vars','mas_vars',1,'p_vars_estatutos','ProyectoFinal_Yacc.py',210),
  ('mas_vars -> <empty>','mas_vars',0,'p_vars_estatutos','ProyectoFinal_Yacc.py',211),
  ('funcs -> func funcs','funcs',2,'p_vars_estatutos','ProyectoFinal_Yacc.py',212),
  ('funcs -> <empty>','funcs',0,'p_vars_estatutos','ProyectoFinal_Yacc.py',213),
  ('func -> tipo ID actualiza_id crea_func PARIZQ pars PARDER bloque_func','func',8,'p_vars_estatutos','ProyectoFinal_Yacc.py',214),
  ('func -> VOID tipo_void ID actualiza_id crea_func PARIZQ pars PARDER bloque_func','func',9,'p_vars_estatutos','ProyectoFinal_Yacc.py',215),
  ('var_func -> VOID tipo_void ID actualiza_id crea_func PARIZQ pars PARDER bloque_func funcs','var_func',10,'p_vars_estatutos','ProyectoFinal_Yacc.py',216),
  ('returns -> expresion PUNTCOM','returns',2,'p_returns','ProyectoFinal_Yacc.py',220),
  ('returns -> PUNTCOM','returns',1,'p_returns','ProyectoFinal_Yacc.py',221),
  ('pars -> tipo ID actualiza_id crea_var gen_dir par','pars',6,'p_pars','ProyectoFinal_Yacc.py',230),
  ('pars -> <empty>','pars',0,'p_pars','ProyectoFinal_Yacc.py',231),
  ('par -> COMA tipo ID actualiza_id crea_var gen_dir par','par',7,'p_par','ProyectoFinal_Yacc.py',238),
  ('par -> <empty>','par',0,'p_par','ProyectoFinal_Yacc.py',239),
  ('gen_dir -> <empty>','gen_dir',0,'p_gen_dir','ProyectoFinal_Yacc.py',246),
  ('tipo_void -> <empty>','tipo_void',0,'p_tipo_void','ProyectoFinal_Yacc.py',253),
  ('crea_func -> <empty>','crea_func',0,'p_crea_func','ProyectoFinal_Yacc.py',259),
  ('push_oper -> <empty>','push_oper',0,'p_push_oper','ProyectoFinal_Yacc.py',274),
  ('pop_or -> <empty>','pop_or',0,'p_pop_or','ProyectoFinal_Yacc.py',309),
  ('pop_and -> <empty>','pop_and',0,'p_pop_and','ProyectoFinal_Yacc.py',314),
  ('pop_rel_e -> <empty>','pop_rel_e',0,'p_pop_rel_e','ProyectoFinal_Yacc.py',319),
  ('pop_suma_resta -> <empty>','pop_suma_resta',0,'p_pop_suma_resta','ProyectoFinal_Yacc.py',324),
  ('pop_mult_div -> <empty>','pop_mult_div',0,'p_pop_mult_div','ProyectoFinal_Yacc.py',329),
  ('expresion -> expr pop_or or_expr','expresion',3,'p_expresion','ProyectoFinal_Yacc.py',334),
  ('or_expr -> OR push_oper expresion','or_expr',3,'p_expresion','ProyectoFinal_Yacc.py',335),
  ('or_expr -> <empty>','or_expr',0,'p_expresion','ProyectoFinal_Yacc.py',336),
  ('expr -> exp pop_and and_exp','expr',3,'p_expresion','ProyectoFinal_Yacc.py',337),
  ('and_exp -> AND push_oper expr','and_exp',3,'p_expresion','ProyectoFinal_Yacc.py',338),
  ('and_exp -> <empty>','and_exp',0,'p_expresion','ProyectoFinal_Yacc.py',339),
  ('exp -> e pop_rel_e rel_e','exp',3,'p_expresion','ProyectoFinal_Yacc.py',340),
  ('rel_e -> DIF push_oper exp','rel_e',3,'p_expresion','ProyectoFinal_Yacc.py',341),
  ('rel_e -> MENOR push_oper exp','rel_e',3,'p_expresion','ProyectoFinal_Yacc.py',342),
  ('rel_e -> MAYOR push_oper exp','rel_e',3,'p_expresion','ProyectoFinal_Yacc.py',343),
  ('rel_e -> MENIGUAL push_oper exp','rel_e',3,'p_expresion','ProyectoFinal_Yacc.py',344),
  ('rel_e -> MAYIGUAL push_oper exp','rel_e',3,'p_expresion','ProyectoFinal_Yacc.py',345),
  ('rel_e -> IGUAL push_oper exp','rel_e',3,'p_expresion','ProyectoFinal_Yacc.py',346),
  ('rel_e -> <empty>','rel_e',0,'p_expresion','ProyectoFinal_Yacc.py',347),
  ('e -> termino pop_suma_resta suma_resta','e',3,'p_expresion','ProyectoFinal_Yacc.py',348),
  ('suma_resta -> SUMA push_oper e','suma_resta',3,'p_expresion','ProyectoFinal_Yacc.py',349),
  ('suma_resta -> RESTA push_oper e','suma_resta',3,'p_expresion','ProyectoFinal_Yacc.py',350),
  ('suma_resta -> <empty>','suma_resta',0,'p_expresion','ProyectoFinal_Yacc.py',351),
  ('termino -> factor pop_mult_div mult_div','termino',3,'p_expresion','ProyectoFinal_Yacc.py',352),
  ('mult_div -> MULT push_oper termino','mult_div',3,'p_expresion','ProyectoFinal_Yacc.py',353),
  ('mult_div -> DIV push_oper termino','mult_div',3,'p_expresion','ProyectoFinal_Yacc.py',354),
  ('mult_div -> MOD push_oper termino','mult_div',3,'p_expresion','ProyectoFinal_Yacc.py',355),
  ('mult_div -> <empty>','mult_div',0,'p_expresion','ProyectoFinal_Yacc.py',356),
  ('factor -> PARIZQ push_paren expresion PARDER pop_paren','factor',5,'p_expresion','ProyectoFinal_Yacc.py',357),
  ('factor -> var','factor',1,'p_expresion','ProyectoFinal_Yacc.py',358),
  ('factor -> RESTA var neg','factor',3,'p_expresion','ProyectoFinal_Yacc.py',359),
  ('var -> ID actualiza_id push_paren var_func_call pop_paren','var',5,'p_expresion','ProyectoFinal_Yacc.py',360),
  ('var_func_call -> lista','var_func_call',1,'p_expresion','ProyectoFinal_Yacc.py',361),
  ('neg -> <empty>','neg',0,'p_neg','ProyectoFinal_Yacc.py',365),
  ('var -> CTE_I','var',1,'p_var_int','ProyectoFinal_Yacc.py',381),
  ('var -> CTE_F','var',1,'p_var_float','ProyectoFinal_Yacc.py',390),
  ('push_paren -> <empty>','push_paren',0,'p_push_paren','ProyectoFinal_Yacc.py',398),
  ('pop_paren -> <empty>','pop_paren',0,'p_pop_paren','ProyectoFinal_Yacc.py',403),
  ('push_dim -> <empty>','push_dim',0,'p_push_dim','ProyectoFinal_Yacc.py',411),
  ('pop_dim -> <empty>','pop_dim',0,'p_pop_dim','ProyectoFinal_Yacc.py',417),
  ('lista -> CORIZQ push_dim expresion CORDER matriz','lista',5,'p_lista','ProyectoFinal_Yacc.py',423),
  ('lista -> <empty>','lista',0,'p_lista','ProyectoFinal_Yacc.py',424),
  ('matriz -> CORIZQ expresion CORDER pop_dim','matriz',4,'p_matriz','ProyectoFinal_Yacc.py',508),
  ('matriz -> pop_dim','matriz',1,'p_matriz','ProyectoFinal_Yacc.py',509),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','ProyectoFinal_Yacc.py',546),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','ProyectoFinal_Yacc.py',547),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','ProyectoFinal_Yacc.py',548),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','ProyectoFinal_Yacc.py',549),
  ('estatuto -> instruccion','estatuto',1,'p_estatuto','ProyectoFinal_Yacc.py',550),
  ('estatuto -> void_func_call PUNTCOM','estatuto',2,'p_estatuto','ProyectoFinal_Yacc.py',551),
  ('bloque -> BRAIZQ estatutos BRADER','bloque',3,'p_estatuto','ProyectoFinal_Yacc.py',552),
  ('void_func_call -> ID actualiza_id actualiza_func is_void PARIZQ args gen_era PARDER gen_gosub','void_func_call',9,'p_func_call','ProyectoFinal_Yacc.py',556),
  ('var_func_call -> PARIZQ actualiza_func args gen_era PARDER gen_gosub','var_func_call',6,'p_func_call','ProyectoFinal_Yacc.py',557),
  ('args -> expresion asig_par arg','args',3,'p_func_call','ProyectoFinal_Yacc.py',558),
  ('args -> <empty>','args',0,'p_func_call','ProyectoFinal_Yacc.py',559),
  ('arg -> COMA args','arg',2,'p_func_call','ProyectoFinal_Yacc.py',560),
  ('arg -> <empty>','arg',0,'p_func_call','ProyectoFinal_Yacc.py',561),
  ('is_void -> <empty>','is_void',0,'p_is_void','ProyectoFinal_Yacc.py',565),
  ('actualiza_func -> <empty>','actualiza_func',0,'p_actualiza_func','ProyectoFinal_Yacc.py',574),
  ('gen_era -> <empty>','gen_era',0,'p_gen_era','ProyectoFinal_Yacc.py',585),
  ('gen_gosub -> <empty>','gen_gosub',0,'p_gen_gosub','ProyectoFinal_Yacc.py',600),
  ('asig_par -> <empty>','asig_par',0,'p_asig_par','ProyectoFinal_Yacc.py',622),
  ('asignacion -> ID actualiza_id lista ASIG exp_input PUNTCOM','asignacion',6,'p_asignacion','ProyectoFinal_Yacc.py',644),
  ('exp_input -> expresion','exp_input',1,'p_exp_input','ProyectoFinal_Yacc.py',669),
  ('exp_input -> INPUT PARIZQ PARDER','exp_input',3,'p_input','ProyectoFinal_Yacc.py',672),
  ('condicion -> IF PARIZQ expresion fin_exp PARDER bloque else_bloque fin_cond','condicion',8,'p_condicion','ProyectoFinal_Yacc.py',677),
  ('else_bloque -> ELSE inicio_else bloque','else_bloque',3,'p_condicion','ProyectoFinal_Yacc.py',678),
  ('else_bloque -> <empty>','else_bloque',0,'p_condicion','ProyectoFinal_Yacc.py',679),
  ('fin_cond -> <empty>','fin_cond',0,'p_fin_cond','ProyectoFinal_Yacc.py',683),
  ('inicio_else -> <empty>','inicio_else',0,'p_inicio_else','ProyectoFinal_Yacc.py',690),
  ('fin_exp -> <empty>','fin_exp',0,'p_fin_exp','ProyectoFinal_Yacc.py',700),
  ('ciclo -> REPEAT push_cont PARIZQ expresion fin_exp PARDER bloque fin_repeat','ciclo',8,'p_ciclo','ProyectoFinal_Yacc.py',714),
  ('push_cont -> <empty>','push_cont',0,'p_push_cont','ProyectoFinal_Yacc.py',718),
  ('fin_repeat -> <empty>','fin_repeat',0,'p_fin_repeat','ProyectoFinal_Yacc.py',725),
  ('escritura -> PRINT PARIZQ arg_escritura PARDER PUNTCOM','escritura',5,'p_escritura','ProyectoFinal_Yacc.py',735),
  ('arg_escritura -> expresion fin_arg args_escritura','arg_escritura',3,'p_escritura','ProyectoFinal_Yacc.py',736),
  ('arg_escritura -> CTE_STR print_string args_escritura','arg_escritura',3,'p_escritura','ProyectoFinal_Yacc.py',737),
  ('args_escritura -> COMA arg_escritura','args_escritura',2,'p_escritura','ProyectoFinal_Yacc.py',738),
  ('args_escritura -> <empty>','args_escritura',0,'p_escritura','ProyectoFinal_Yacc.py',739),
  ('fin_arg -> <empty>','fin_arg',0,'p_fin_arg','ProyectoFinal_Yacc.py',743),
  ('print_string -> <empty>','print_string',0,'p_print_string','ProyectoFinal_Yacc.py',751),
  ('instruccion -> FORWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM','instruccion',7,'p_instruccion','ProyectoFinal_Yacc.py',757),
  ('instruccion -> BACKWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM','instruccion',7,'p_instruccion','ProyectoFinal_Yacc.py',758),
  ('instruccion -> LEFT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM','instruccion',7,'p_instruccion','ProyectoFinal_Yacc.py',759),
  ('instruccion -> RIGHT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM','instruccion',7,'p_instruccion','ProyectoFinal_Yacc.py',760),
  ('instruccion -> TURN actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM','instruccion',7,'p_instruccion','ProyectoFinal_Yacc.py',761),
  ('instruccion -> SIZE actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM','instruccion',7,'p_instruccion','ProyectoFinal_Yacc.py',762),
  ('instruccion -> CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM','instruccion',8,'p_instruccion','ProyectoFinal_Yacc.py',763),
  ('instruccion -> TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM','instruccion',8,'p_instruccion','ProyectoFinal_Yacc.py',764),
  ('instruccion -> SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM','instruccion',8,'p_instruccion','ProyectoFinal_Yacc.py',765),
  ('instruccion -> NGON actualiza_instr PARIZQ expresion COMA expresion PARDER fin_instr2 transform PUNTCOM','instruccion',10,'p_instruccion','ProyectoFinal_Yacc.py',766),
  ('instruccion -> ARC actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM','instruccion',8,'p_instruccion','ProyectoFinal_Yacc.py',767),
  ('instruccion -> UP actualiza_instr PARIZQ PARDER fin_instr PUNTCOM','instruccion',6,'p_instruccion','ProyectoFinal_Yacc.py',768),
  ('instruccion -> DOWN actualiza_instr PARIZQ PARDER fin_instr PUNTCOM','instruccion',6,'p_instruccion','ProyectoFinal_Yacc.py',769),
  ('instruccion -> COLOR PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM','instruccion',10,'p_instruccion','ProyectoFinal_Yacc.py',770),
  ('fill -> FILL actualiza_instr PARIZQ PARDER fin_instr trans','fill',6,'p_instruccion','ProyectoFinal_Yacc.py',771),
  ('fill -> altera trans','fill',2,'p_instruccion','ProyectoFinal_Yacc.py',772),
  ('trans -> PUNTO altera trans','trans',3,'p_instruccion','ProyectoFinal_Yacc.py',773),
  ('trans -> <empty>','trans',0,'p_instruccion','ProyectoFinal_Yacc.py',774),
  ('altera -> ROTATE actualiza_instr PARIZQ expresion PARDER fin_instr1','altera',6,'p_instruccion','ProyectoFinal_Yacc.py',775),
  ('altera -> STRETCH actualiza_instr PARIZQ expresion PARDER fin_instr1','altera',6,'p_instruccion','ProyectoFinal_Yacc.py',776),
  ('transform -> PUNTO fill','transform',2,'p_dibuja','ProyectoFinal_Yacc.py',780),
  ('transform -> <empty>','transform',0,'p_dibuja','ProyectoFinal_Yacc.py',781),
  ('actualiza_instr -> <empty>','actualiza_instr',0,'p_actualiza_instr','ProyectoFinal_Yacc.py',786),
  ('fin_instr -> <empty>','fin_instr',0,'p_fin_instr','ProyectoFinal_Yacc.py',792),
  ('fin_instr1 -> <empty>','fin_instr1',0,'p_fin_instr1','ProyectoFinal_Yacc.py',799),
  ('fin_instr2 -> <empty>','fin_instr2',0,'p_fin_instr2','ProyectoFinal_Yacc.py',808),
  ('fin_color -> <empty>','fin_color',0,'p_fin_color','ProyectoFinal_Yacc.py',818),
]
