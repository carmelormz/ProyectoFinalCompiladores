
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftSUMARESTAleftMULTDIVMODAND ARC ASIG BACKGROUND BACKWARD BRADER BRAIZQ CANVAS CIRCLE COLOR COMA CORDER CORIZQ CTE_F CTE_I CTE_STR DIF DIV DOWN ELSE FILL FLOAT FORWARD HEIGHT ID IF IGUAL IMPORT INPUT INT LEFT MAIN MAYIGUAL MAYOR MENIGUAL MENOR MOD MODULE MULT NGON OR PARDER PARIZQ PRINT PUNTCOM PUNTO REPEAT RESTA RETURN RIGHT ROTATE SIZE SQUARE STRETCH SUMA TRIANGLE TURN UP VOID WIDTHprograma : MODULE ID creaDirFunc PUNTCOM ajustes var_func tipo_main MAIN actualiza_id crea_func bloque_functipo_main : creaDirFunc : ajustes : CANVAS BRAIZQ WIDTH CTE_I PUNTCOM HEIGHT CTE_I PUNTCOM BACKGROUND CTE_F COMA CTE_F COMA CTE_F PUNTCOM BRADER\n               | IMPORT CTE_STRvar_func : tipo ID actualiza_id var_o_func\n                | actualiza_id : var_o_func : PARIZQ crea_func pars PARDER bloque_func funcs\n                  | crea_var lista_dec vars_lista PUNTCOM var_funccrea_var : lista_dec : CORIZQ CTE_I CORDER matriz_dec\n                 | matriz_dec : CORIZQ CTE_I CORDER\n                  | bloque_func : BRAIZQ vars_estatutos RETURN returns BRADER end_subend_sub :  vars_estatutos : vars estatutos\n                       | estatutos\n        estatutos : estatuto estatutos\n                  | \n        vars : tipo ID actualiza_id crea_var lista_dec vars_lista PUNTCOM mas_vars\n        vars_lista : COMA ID actualiza_id crea_var lista_dec vars_lista\n                   |\n        mas_vars : vars\n                 | \n        funcs : func funcs\n              |\n        func : tipo ID actualiza_id crea_func PARIZQ pars PARDER bloque_func\n             | VOID tipo_void ID actualiza_id crea_func PARIZQ pars PARDER bloque_func\n        var_func : VOID tipo_void ID actualiza_id crea_func PARIZQ pars PARDER bloque_func funcsreturns : expresion PUNTCOM\n               | PUNTCOMpars : tipo ID actualiza_id crea_var gen_dir par\n            | par : COMA tipo ID actualiza_id crea_var gen_dir par\n           | gen_dir : tipo_void : crea_func : push_oper : pop_or : pop_and : pop_rel_e : pop_suma_resta : pop_mult_div : expresion : expr or_expr\n       or_expr : OR push_oper expresion pop_or\n               | \n       expr : exp and_exp\n       and_exp : AND push_oper expr pop_and\n               | \n       exp : e rel_e\n       rel_e : DIF push_oper exp pop_rel_e\n             | MENOR push_oper exp pop_rel_e\n             | MAYOR push_oper  exp pop_rel_e\n             | MENIGUAL push_oper exp pop_rel_e\n             | MAYIGUAL push_oper exp pop_rel_e\n             | IGUAL push_oper exp pop_rel_e\n             |\n       e : termino suma_resta\n       suma_resta : SUMA push_oper e pop_suma_resta\n                  | RESTA push_oper e pop_suma_resta\n                  | \n       termino : factor mult_div \n       mult_div : MULT push_oper termino pop_mult_div\n                | DIV push_oper termino pop_mult_div\n                | MOD push_oper termino pop_mult_div\n                | factor : PARIZQ push_paren e PARDER pop_paren\n              | var\n              | RESTA neg_push var neg_popneg_push : neg_pop : var : ID actualiza_id var_func_callvar : CTE_Ivar : CTE_Fvar : errorpush_dim : pop_dim : lista : CORIZQ push_dim expresion CORDER matriz\n             | matriz : CORIZQ expresion CORDER pop_dim\n              | pop_dimvar_func_call : listapush_paren : pop_paren : estatuto : asignacion\n                | condicion\n                | escritura\n                | ciclo\n                | instruccion\n                | func_call PUNTCOM\n       bloque : BRAIZQ estatutos BRADER func_call : ID actualiza_id actualiza_func PARIZQ args gen_era PARDER gen_gosub\n       var_func_call : PARIZQ actualiza_func args gen_era PARDER gen_gosubactualiza_func :gen_era : gen_gosub : args : expresion asig_par arg\n            |\n       arg : COMA args\n           | asig_par : asignacion : ID actualiza_id lista ASIG exp_input PUNTCOMexp_input : expresion\n                 | INPUT PARIZQ PARDERcondicion : IF PARIZQ expresion fin_exp PARDER bloque else_bloque fin_cond\n       else_bloque : ELSE inicio_else bloque\n                   | fin_cond : inicio_else : fin_exp : ciclo : REPEAT push_cont PARIZQ expresion fin_exp PARDER bloque fin_repeatpush_cont : fin_repeat : escritura : PRINT PARIZQ arg_escritura PARDER PUNTCOM\n       arg_escritura : expresion fin_arg args_escritura\n                     | CTE_STR print_string args_escritura\n       args_escritura : COMA arg_escritura\n                      | fin_arg : print_string : tipo : INT actualiza_tipo\n            | FLOAT actualiza_tipoactualiza_tipo : instruccion : FORWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM\n                   | BACKWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM\n                   | LEFT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM\n                   | RIGHT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM\n                   | TURN actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM\n                   | SIZE actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM\n                   | CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM\n                   | TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM\n                   | SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM\n                   | NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM\n                   | ARC actualiza_instr PARIZQ expresion PARDER fin_instr1 trans PUNTCOM\n                   | UP actualiza_instr PARIZQ PARDER fin_instr PUNTCOM\n                   | DOWN actualiza_instr PARIZQ PARDER fin_instr PUNTCOM\n                   | COLOR PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM\n       transform : fill trans\n                 |\n       fill : PUNTO FILL actualiza_instr PARIZQ PARDER fin_instr\n       trans : PUNTO altera trans\n             | \n       altera : ROTATE actualiza_instr PARIZQ expresion PARDER fin_instr1\n              | STRETCH actualiza_instr PARIZQ expresion PARDER fin_instr1actualiza_instr : fin_instr : fin_instr1 : fin_instr2 : fin_color : '
    
_lr_action_items = {'MODULE':([0,],[2,]),'$end':([1,38,161,215,],[0,-1,-17,-16,]),'ID':([2,10,11,12,13,18,19,20,39,41,43,48,50,52,53,54,55,56,57,83,88,89,90,105,122,124,132,137,138,139,140,141,142,143,144,145,146,147,148,154,155,164,166,168,169,170,171,172,173,175,176,178,179,180,181,182,185,186,187,206,209,216,217,218,219,220,221,222,223,224,225,226,227,228,233,242,244,282,284,289,290,304,305,306,309,326,330,331,334,337,338,339,340,341,342,343,358,359,363,365,366,367,370,371,372,373,384,397,398,399,],[3,17,-39,-126,-126,24,-124,-125,51,77,79,51,85,51,-88,-89,-90,-91,-92,125,-93,125,125,125,-86,-73,-79,125,125,125,125,125,125,125,125,125,125,125,125,208,-39,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,125,125,125,125,125,125,262,125,125,125,125,125,125,125,125,125,125,125,125,125,-97,-117,125,125,-105,-110,51,-138,-139,125,355,-26,125,125,-111,-116,-127,-128,-129,-130,-131,-132,-22,-25,-108,-94,-114,-133,-134,-135,-136,-137,-109,125,125,-140,]),'PUNTCOM':([3,4,17,23,25,29,34,42,46,58,79,80,83,85,109,111,115,117,118,119,120,121,123,125,126,127,128,129,157,163,165,167,174,177,183,184,189,204,205,211,212,230,231,232,234,235,236,247,248,249,250,251,252,253,254,255,256,257,258,259,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,283,288,293,294,295,296,297,298,299,300,301,302,303,311,312,313,314,315,316,317,318,319,320,321,322,323,324,327,328,332,333,344,345,347,348,349,350,356,360,368,374,377,382,383,386,389,394,395,403,408,409,410,411,412,],[-3,5,-8,-11,31,-13,-24,78,82,88,-8,-15,116,-8,-11,-12,162,-49,-52,-60,-64,-69,-71,-8,-76,-77,-78,-11,-13,-47,-50,-53,-61,-65,-82,-13,242,-149,-149,-24,-14,-74,-75,-85,-24,284,-106,-150,-150,-150,-150,-150,-150,-150,-150,-150,-150,-150,304,305,-23,-42,-43,-44,-44,-44,-44,-44,-44,-45,-45,-46,-46,-46,-87,-72,326,-80,338,339,340,341,342,343,-142,-142,-142,-142,-145,-48,-51,-54,-55,-56,-57,-58,-59,-62,-63,-66,-67,-68,-70,-107,-99,-81,-84,367,-145,370,371,372,373,381,-95,-141,-145,-152,-99,-80,-144,399,-96,-83,-149,-143,-150,-150,-146,-147,]),'CANVAS':([5,],[7,]),'IMPORT':([5,],[8,]),'MAIN':([6,9,15,16,27,78,106,108,152,153,159,161,207,213,215,393,400,406,],[-7,-2,-5,22,-6,-7,-28,-10,-9,-28,-28,-17,-27,-31,-16,-4,-29,-30,]),'VOID':([6,15,78,106,153,159,161,215,393,400,406,],[11,-5,11,155,155,155,-17,-16,-4,-29,-30,]),'INT':([6,15,28,33,39,45,78,106,153,159,161,215,264,326,353,379,393,400,406,],[12,-5,-40,12,12,12,12,12,12,12,-17,-16,12,12,12,12,-4,-29,-30,]),'FLOAT':([6,15,28,33,39,45,78,106,153,159,161,215,264,326,353,379,393,400,406,],[13,-5,-40,13,13,13,13,13,13,13,-17,-16,13,13,13,13,-4,-29,-30,]),'BRAIZQ':([7,22,26,32,76,112,241,292,335,364,390,401,],[14,-8,-40,39,39,39,290,290,-112,290,39,39,]),'CTE_STR':([8,90,244,],[15,136,136,]),'WIDTH':([14,],[21,]),'PARIZQ':([17,23,24,30,36,51,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,83,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,122,125,131,132,137,138,139,140,141,142,143,144,145,146,147,148,164,166,168,169,170,171,172,173,175,176,178,179,180,181,183,185,186,187,206,208,216,217,218,219,220,221,222,223,224,225,226,227,228,233,237,244,261,262,282,306,307,308,330,331,354,369,375,376,385,387,388,397,398,],[-8,28,-8,-40,45,-8,89,90,-115,-148,-148,-148,-148,-148,-148,-148,-148,-148,-148,-148,-148,-148,105,122,-97,122,122,137,138,139,140,141,142,143,144,145,146,147,148,149,150,122,-86,-8,186,-79,122,122,122,122,122,122,122,122,122,122,122,122,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,122,233,122,122,122,122,-8,122,122,122,122,122,122,122,122,122,122,122,122,122,-97,285,122,-40,-8,122,122,353,-40,122,122,379,-148,-148,-148,396,397,398,122,122,]),'CORIZQ':([17,23,29,51,79,80,85,86,109,125,129,157,183,184,288,],[-8,-11,35,-8,-8,110,-8,132,-11,-8,-11,35,132,35,331,]),'COMA':([17,23,29,34,77,79,80,85,107,109,111,117,118,119,120,121,123,125,126,127,128,129,135,136,151,156,157,160,163,165,167,174,177,183,184,190,191,210,211,212,230,231,232,234,239,260,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,287,288,311,312,313,314,315,316,317,318,319,320,321,322,323,324,332,333,355,380,382,383,392,394,395,402,],[-8,-11,-13,43,-8,-8,-15,-8,-11,-11,-12,-49,-52,-60,-64,-69,-71,-8,-76,-77,-78,-11,-122,-123,206,-38,-13,214,-47,-50,-53,-61,-65,-82,-13,244,244,264,43,-14,-74,-75,-85,43,-104,306,310,-42,-43,-44,-44,-44,-44,-44,-44,-45,-45,-46,-46,-46,-87,-72,330,-80,-48,-51,-54,-55,-56,-57,-58,-59,-62,-63,-66,-67,-68,-70,-81,-84,-8,-11,-99,-80,-38,-96,-83,264,]),'CTE_I':([21,35,37,83,89,90,105,110,122,124,132,137,138,139,140,141,142,143,144,145,146,147,148,164,166,168,169,170,171,172,173,175,176,178,179,180,181,182,185,186,187,206,216,217,218,219,220,221,222,223,224,225,226,227,228,233,244,282,306,330,331,397,398,],[25,44,46,126,126,126,126,158,-86,-73,-79,126,126,126,126,126,126,126,126,126,126,126,126,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,-97,126,126,126,126,126,126,126,]),'PARDER':([28,33,40,45,77,81,107,117,118,119,120,121,123,125,126,127,128,133,134,135,136,149,150,156,163,165,167,174,177,183,186,188,190,191,192,193,194,195,196,197,198,199,200,201,202,203,210,229,230,231,232,233,238,239,243,245,246,263,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,285,286,287,288,291,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,329,330,332,333,352,353,355,357,361,378,379,380,382,383,391,392,394,395,396,402,404,405,407,],[-40,-35,76,-35,-8,112,-11,-49,-52,-60,-64,-69,-71,-8,-76,-77,-78,-113,189,-122,-123,204,205,-38,-47,-50,-53,-61,-65,-82,-101,241,-121,-121,-113,247,248,249,250,251,252,253,254,255,256,257,-37,280,-74,-75,-85,-97,-98,-104,-118,-119,292,-34,-42,-43,-44,-44,-44,-44,-44,-44,-45,-45,-46,-46,-46,-87,-72,-101,327,328,-103,-80,-120,-48,-51,-54,-55,-56,-57,-58,-59,-62,-63,-66,-67,-68,-70,-98,-100,-101,-81,-84,377,-35,-8,382,-102,390,-35,-11,-99,-80,401,-38,-96,-83,403,-37,409,410,-36,]),'HEIGHT':([31,],[37,]),'RETURN':([39,47,48,49,52,53,54,55,56,57,84,87,88,242,284,289,304,305,326,334,337,338,339,340,341,342,343,358,359,363,365,366,367,370,371,372,373,384,399,],[-21,83,-21,-19,-21,-88,-89,-90,-91,-92,-18,-20,-93,-117,-105,-110,-138,-139,-26,-111,-116,-127,-128,-129,-130,-131,-132,-22,-25,-108,-94,-114,-133,-134,-135,-136,-137,-109,-140,]),'IF':([39,48,52,53,54,55,56,57,88,242,284,289,290,304,305,326,334,337,338,339,340,341,342,343,358,359,363,365,366,367,370,371,372,373,384,399,],[59,59,59,-88,-89,-90,-91,-92,-93,-117,-105,-110,59,-138,-139,-26,-111,-116,-127,-128,-129,-130,-131,-132,-22,-25,-108,-94,-114,-133,-134,-135,-136,-137,-109,-140,]),'PRINT':([39,48,52,53,54,55,56,57,88,242,284,289,290,304,305,326,334,337,338,339,340,341,342,343,358,359,363,365,366,367,370,371,372,373,384,399,],[60,60,60,-88,-89,-90,-91,-92,-93,-117,-105,-110,60,-138,-139,-26,-111,-116,-127,-128,-129,-130,-131,-132,-22,-25,-108,-94,-114,-133,-134,-135,-136,-137,-109,-140,]),'REPEAT':([39,48,52,53,54,55,56,57,88,242,284,289,290,304,305,326,334,337,338,339,340,341,342,343,358,359,363,365,366,367,370,371,372,373,384,399,],[61,61,61,-88,-89,-90,-91,-92,-93,-117,-105,-110,61,-138,-139,-26,-111,-116,-127,-128,-129,-130,-131,-132,-22,-25,-108,-94,-114,-133,-134,-135,-136,-137,-109,-140,]),'FORWARD':([39,48,52,53,54,55,56,57,88,242,284,289,290,304,305,326,334,337,338,339,340,341,342,343,358,359,363,365,366,367,370,371,372,373,384,399,],[62,62,62,-88,-89,-90,-91,-92,-93,-117,-105,-110,62,-138,-139,-26,-111,-116,-127,-128,-129,-130,-131,-132,-22,-25,-108,-94,-114,-133,-134,-135,-136,-137,-109,-140,]),'BACKWARD':([39,48,52,53,54,55,56,57,88,242,284,289,290,304,305,326,334,337,338,339,340,341,342,343,358,359,363,365,366,367,370,371,372,373,384,399,],[63,63,63,-88,-89,-90,-91,-92,-93,-117,-105,-110,63,-138,-139,-26,-111,-116,-127,-128,-129,-130,-131,-132,-22,-25,-108,-94,-114,-133,-134,-135,-136,-137,-109,-140,]),'LEFT':([39,48,52,53,54,55,56,57,88,242,284,289,290,304,305,326,334,337,338,339,340,341,342,343,358,359,363,365,366,367,370,371,372,373,384,399,],[64,64,64,-88,-89,-90,-91,-92,-93,-117,-105,-110,64,-138,-139,-26,-111,-116,-127,-128,-129,-130,-131,-132,-22,-25,-108,-94,-114,-133,-134,-135,-136,-137,-109,-140,]),'RIGHT':([39,48,52,53,54,55,56,57,88,242,284,289,290,304,305,326,334,337,338,339,340,341,342,343,358,359,363,365,366,367,370,371,372,373,384,399,],[65,65,65,-88,-89,-90,-91,-92,-93,-117,-105,-110,65,-138,-139,-26,-111,-116,-127,-128,-129,-130,-131,-132,-22,-25,-108,-94,-114,-133,-134,-135,-136,-137,-109,-140,]),'TURN':([39,48,52,53,54,55,56,57,88,242,284,289,290,304,305,326,334,337,338,339,340,341,342,343,358,359,363,365,366,367,370,371,372,373,384,399,],[66,66,66,-88,-89,-90,-91,-92,-93,-117,-105,-110,66,-138,-139,-26,-111,-116,-127,-128,-129,-130,-131,-132,-22,-25,-108,-94,-114,-133,-134,-135,-136,-137,-109,-140,]),'SIZE':([39,48,52,53,54,55,56,57,88,242,284,289,290,304,305,326,334,337,338,339,340,341,342,343,358,359,363,365,366,367,370,371,372,373,384,399,],[67,67,67,-88,-89,-90,-91,-92,-93,-117,-105,-110,67,-138,-139,-26,-111,-116,-127,-128,-129,-130,-131,-132,-22,-25,-108,-94,-114,-133,-134,-135,-136,-137,-109,-140,]),'CIRCLE':([39,48,52,53,54,55,56,57,88,242,284,289,290,304,305,326,334,337,338,339,340,341,342,343,358,359,363,365,366,367,370,371,372,373,384,399,],[68,68,68,-88,-89,-90,-91,-92,-93,-117,-105,-110,68,-138,-139,-26,-111,-116,-127,-128,-129,-130,-131,-132,-22,-25,-108,-94,-114,-133,-134,-135,-136,-137,-109,-140,]),'TRIANGLE':([39,48,52,53,54,55,56,57,88,242,284,289,290,304,305,326,334,337,338,339,340,341,342,343,358,359,363,365,366,367,370,371,372,373,384,399,],[69,69,69,-88,-89,-90,-91,-92,-93,-117,-105,-110,69,-138,-139,-26,-111,-116,-127,-128,-129,-130,-131,-132,-22,-25,-108,-94,-114,-133,-134,-135,-136,-137,-109,-140,]),'SQUARE':([39,48,52,53,54,55,56,57,88,242,284,289,290,304,305,326,334,337,338,339,340,341,342,343,358,359,363,365,366,367,370,371,372,373,384,399,],[70,70,70,-88,-89,-90,-91,-92,-93,-117,-105,-110,70,-138,-139,-26,-111,-116,-127,-128,-129,-130,-131,-132,-22,-25,-108,-94,-114,-133,-134,-135,-136,-137,-109,-140,]),'NGON':([39,48,52,53,54,55,56,57,88,242,284,289,290,304,305,326,334,337,338,339,340,341,342,343,358,359,363,365,366,367,370,371,372,373,384,399,],[71,71,71,-88,-89,-90,-91,-92,-93,-117,-105,-110,71,-138,-139,-26,-111,-116,-127,-128,-129,-130,-131,-132,-22,-25,-108,-94,-114,-133,-134,-135,-136,-137,-109,-140,]),'ARC':([39,48,52,53,54,55,56,57,88,242,284,289,290,304,305,326,334,337,338,339,340,341,342,343,358,359,363,365,366,367,370,371,372,373,384,399,],[72,72,72,-88,-89,-90,-91,-92,-93,-117,-105,-110,72,-138,-139,-26,-111,-116,-127,-128,-129,-130,-131,-132,-22,-25,-108,-94,-114,-133,-134,-135,-136,-137,-109,-140,]),'UP':([39,48,52,53,54,55,56,57,88,242,284,289,290,304,305,326,334,337,338,339,340,341,342,343,358,359,363,365,366,367,370,371,372,373,384,399,],[73,73,73,-88,-89,-90,-91,-92,-93,-117,-105,-110,73,-138,-139,-26,-111,-116,-127,-128,-129,-130,-131,-132,-22,-25,-108,-94,-114,-133,-134,-135,-136,-137,-109,-140,]),'DOWN':([39,48,52,53,54,55,56,57,88,242,284,289,290,304,305,326,334,337,338,339,340,341,342,343,358,359,363,365,366,367,370,371,372,373,384,399,],[74,74,74,-88,-89,-90,-91,-92,-93,-117,-105,-110,74,-138,-139,-26,-111,-116,-127,-128,-129,-130,-131,-132,-22,-25,-108,-94,-114,-133,-134,-135,-136,-137,-109,-140,]),'COLOR':([39,48,52,53,54,55,56,57,88,242,284,289,290,304,305,326,334,337,338,339,340,341,342,343,358,359,363,365,366,367,370,371,372,373,384,399,],[75,75,75,-88,-89,-90,-91,-92,-93,-117,-105,-110,75,-138,-139,-26,-111,-116,-127,-128,-129,-130,-131,-132,-22,-25,-108,-94,-114,-133,-134,-135,-136,-137,-109,-140,]),'CORDER':([44,117,118,119,120,121,123,125,126,127,128,158,163,165,167,174,177,183,230,231,232,240,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,288,311,312,313,314,315,316,317,318,319,320,321,322,323,324,332,333,362,382,383,394,395,],[80,-49,-52,-60,-64,-69,-71,-8,-76,-77,-78,212,-47,-50,-53,-61,-65,-82,-74,-75,-85,288,-42,-43,-44,-44,-44,-44,-44,-44,-45,-45,-46,-46,-46,-87,-72,-80,-48,-51,-54,-55,-56,-57,-58,-59,-62,-63,-66,-67,-68,-70,-81,-84,383,-99,-80,-96,-83,]),'ASIG':([51,86,130,288,332,333,383,395,],[-8,-82,185,-80,-81,-84,-80,-83,]),'BRADER':([52,53,54,55,56,57,87,88,114,116,162,242,284,289,290,304,305,334,336,337,338,339,340,341,342,343,363,365,366,367,370,371,372,373,381,384,399,],[-21,-88,-89,-90,-91,-92,-20,-93,161,-33,-32,-117,-105,-110,-21,-138,-139,-111,365,-116,-127,-128,-129,-130,-131,-132,-108,-94,-114,-133,-134,-135,-136,-137,393,-109,-140,]),'BACKGROUND':([82,],[113,]),'RESTA':([83,89,90,105,120,121,122,123,125,126,127,128,132,137,138,139,140,141,142,143,144,145,146,147,148,164,166,168,169,170,171,172,173,175,176,177,178,179,180,181,183,185,186,187,206,216,217,218,219,220,221,222,223,224,225,226,227,228,230,231,232,233,244,277,278,279,280,281,282,288,306,321,322,323,324,330,331,332,333,382,383,394,395,397,398,],[124,124,124,124,176,-69,-86,-71,-8,-76,-77,-78,-79,124,124,124,124,124,124,124,124,124,124,124,124,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-65,-41,-41,-41,124,-82,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,-74,-75,-85,-97,124,-46,-46,-46,-87,-72,124,-80,124,-66,-67,-68,-70,124,124,-81,-84,-99,-80,-96,-83,124,124,]),'CTE_F':([83,89,90,105,113,122,124,132,137,138,139,140,141,142,143,144,145,146,147,148,164,166,168,169,170,171,172,173,175,176,178,179,180,181,182,185,186,187,206,214,216,217,218,219,220,221,222,223,224,225,226,227,228,233,244,282,306,310,330,331,397,398,],[127,127,127,127,160,-86,-73,-79,127,127,127,127,127,127,127,127,127,127,127,127,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,127,127,127,127,127,127,266,127,127,127,127,127,127,127,127,127,127,127,127,127,-97,127,127,127,356,127,127,127,127,]),'error':([83,89,90,105,122,124,132,137,138,139,140,141,142,143,144,145,146,147,148,164,166,168,169,170,171,172,173,175,176,178,179,180,181,182,185,186,187,206,216,217,218,219,220,221,222,223,224,225,226,227,228,233,244,282,306,330,331,397,398,],[128,128,128,128,-86,-73,-79,128,128,128,128,128,128,128,128,128,128,128,128,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,-97,128,128,128,128,128,128,128,]),'OR':([117,118,119,120,121,123,125,126,127,128,165,167,174,177,183,230,231,232,268,269,270,271,272,273,274,275,276,277,278,279,280,281,288,312,313,314,315,316,317,318,319,320,321,322,323,324,332,333,382,383,394,395,],[164,-52,-60,-64,-69,-71,-8,-76,-77,-78,-50,-53,-61,-65,-82,-74,-75,-85,-43,-44,-44,-44,-44,-44,-44,-45,-45,-46,-46,-46,-87,-72,-80,-51,-54,-55,-56,-57,-58,-59,-62,-63,-66,-67,-68,-70,-81,-84,-99,-80,-96,-83,]),'AND':([118,119,120,121,123,125,126,127,128,167,174,177,183,230,231,232,269,270,271,272,273,274,275,276,277,278,279,280,281,288,313,314,315,316,317,318,319,320,321,322,323,324,332,333,382,383,394,395,],[166,-60,-64,-69,-71,-8,-76,-77,-78,-53,-61,-65,-82,-74,-75,-85,-44,-44,-44,-44,-44,-44,-45,-45,-46,-46,-46,-87,-72,-80,-54,-55,-56,-57,-58,-59,-62,-63,-66,-67,-68,-70,-81,-84,-99,-80,-96,-83,]),'DIF':([119,120,121,123,125,126,127,128,174,177,183,230,231,232,275,276,277,278,279,280,281,288,319,320,321,322,323,324,332,333,382,383,394,395,],[168,-64,-69,-71,-8,-76,-77,-78,-61,-65,-82,-74,-75,-85,-45,-45,-46,-46,-46,-87,-72,-80,-62,-63,-66,-67,-68,-70,-81,-84,-99,-80,-96,-83,]),'MENOR':([119,120,121,123,125,126,127,128,174,177,183,230,231,232,275,276,277,278,279,280,281,288,319,320,321,322,323,324,332,333,382,383,394,395,],[169,-64,-69,-71,-8,-76,-77,-78,-61,-65,-82,-74,-75,-85,-45,-45,-46,-46,-46,-87,-72,-80,-62,-63,-66,-67,-68,-70,-81,-84,-99,-80,-96,-83,]),'MAYOR':([119,120,121,123,125,126,127,128,174,177,183,230,231,232,275,276,277,278,279,280,281,288,319,320,321,322,323,324,332,333,382,383,394,395,],[170,-64,-69,-71,-8,-76,-77,-78,-61,-65,-82,-74,-75,-85,-45,-45,-46,-46,-46,-87,-72,-80,-62,-63,-66,-67,-68,-70,-81,-84,-99,-80,-96,-83,]),'MENIGUAL':([119,120,121,123,125,126,127,128,174,177,183,230,231,232,275,276,277,278,279,280,281,288,319,320,321,322,323,324,332,333,382,383,394,395,],[171,-64,-69,-71,-8,-76,-77,-78,-61,-65,-82,-74,-75,-85,-45,-45,-46,-46,-46,-87,-72,-80,-62,-63,-66,-67,-68,-70,-81,-84,-99,-80,-96,-83,]),'MAYIGUAL':([119,120,121,123,125,126,127,128,174,177,183,230,231,232,275,276,277,278,279,280,281,288,319,320,321,322,323,324,332,333,382,383,394,395,],[172,-64,-69,-71,-8,-76,-77,-78,-61,-65,-82,-74,-75,-85,-45,-45,-46,-46,-46,-87,-72,-80,-62,-63,-66,-67,-68,-70,-81,-84,-99,-80,-96,-83,]),'IGUAL':([119,120,121,123,125,126,127,128,174,177,183,230,231,232,275,276,277,278,279,280,281,288,319,320,321,322,323,324,332,333,382,383,394,395,],[173,-64,-69,-71,-8,-76,-77,-78,-61,-65,-82,-74,-75,-85,-45,-45,-46,-46,-46,-87,-72,-80,-62,-63,-66,-67,-68,-70,-81,-84,-99,-80,-96,-83,]),'SUMA':([120,121,123,125,126,127,128,177,183,230,231,232,277,278,279,280,281,288,321,322,323,324,332,333,382,383,394,395,],[175,-69,-71,-8,-76,-77,-78,-65,-82,-74,-75,-85,-46,-46,-46,-87,-72,-80,-66,-67,-68,-70,-81,-84,-99,-80,-96,-83,]),'MULT':([121,123,125,126,127,128,183,230,231,232,280,281,288,324,332,333,382,383,394,395,],[178,-71,-8,-76,-77,-78,-82,-74,-75,-85,-87,-72,-80,-70,-81,-84,-99,-80,-96,-83,]),'DIV':([121,123,125,126,127,128,183,230,231,232,280,281,288,324,332,333,382,383,394,395,],[179,-71,-8,-76,-77,-78,-82,-74,-75,-85,-87,-72,-80,-70,-81,-84,-99,-80,-96,-83,]),'MOD':([121,123,125,126,127,128,183,230,231,232,280,281,288,324,332,333,382,383,394,395,],[180,-71,-8,-76,-77,-78,-82,-74,-75,-85,-87,-72,-80,-70,-81,-84,-99,-80,-96,-83,]),'INPUT':([185,],[237,]),'PUNTO':([253,254,255,256,257,299,300,301,302,303,345,374,403,408,409,410,411,412,],[-150,-150,-150,-150,-150,346,346,346,346,351,351,351,-149,-143,-150,-150,-146,-147,]),'ELSE':([289,365,],[335,-94,]),'FILL':([346,],[369,]),'ROTATE':([351,],[375,]),'STRETCH':([351,],[376,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'creaDirFunc':([3,],[4,]),'ajustes':([5,],[6,]),'var_func':([6,78,],[9,108,]),'tipo':([6,33,39,45,78,106,153,159,264,326,353,379,],[10,41,50,41,10,154,154,154,309,50,41,41,]),'tipo_main':([9,],[16,]),'tipo_void':([11,155,],[18,209,]),'actualiza_tipo':([12,13,],[19,20,]),'actualiza_id':([17,22,24,51,77,79,85,125,208,262,355,],[23,26,30,86,107,109,129,183,261,308,380,]),'var_o_func':([23,],[27,]),'crea_var':([23,107,109,129,380,],[29,156,157,184,392,]),'crea_func':([26,28,30,261,308,],[32,33,36,307,354,]),'lista_dec':([29,157,184,],[34,211,234,]),'bloque_func':([32,76,112,390,401,],[38,106,159,400,406,]),'pars':([33,45,353,379,],[40,81,378,391,]),'vars_lista':([34,211,234,],[42,265,283,]),'vars_estatutos':([39,],[47,]),'vars':([39,326,],[48,359,]),'estatutos':([39,48,52,290,],[49,84,87,336,]),'estatuto':([39,48,52,290,],[52,52,52,52,]),'asignacion':([39,48,52,290,],[53,53,53,53,]),'condicion':([39,48,52,290,],[54,54,54,54,]),'escritura':([39,48,52,290,],[55,55,55,55,]),'ciclo':([39,48,52,290,],[56,56,56,56,]),'instruccion':([39,48,52,290,],[57,57,57,57,]),'func_call':([39,48,52,290,],[58,58,58,58,]),'push_cont':([61,],[91,]),'actualiza_instr':([62,63,64,65,66,67,68,69,70,71,72,73,74,369,375,376,],[92,93,94,95,96,97,98,99,100,101,102,103,104,385,387,388,]),'matriz_dec':([80,],[111,]),'returns':([83,],[114,]),'expresion':([83,89,90,105,137,138,139,140,141,142,143,144,145,146,147,148,185,186,187,206,216,244,282,306,330,331,397,398,],[115,133,135,151,192,193,194,195,196,197,198,199,200,201,202,203,236,239,240,260,267,135,239,352,239,362,404,405,]),'expr':([83,89,90,105,137,138,139,140,141,142,143,144,145,146,147,148,185,186,187,206,216,217,244,282,306,330,331,397,398,],[117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,268,117,117,117,117,117,117,117,]),'exp':([83,89,90,105,137,138,139,140,141,142,143,144,145,146,147,148,185,186,187,206,216,217,218,219,220,221,222,223,244,282,306,330,331,397,398,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,269,270,271,272,273,274,118,118,118,118,118,118,118,]),'e':([83,89,90,105,137,138,139,140,141,142,143,144,145,146,147,148,181,185,186,187,206,216,217,218,219,220,221,222,223,224,225,244,282,306,330,331,397,398,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,229,119,119,119,119,119,119,119,119,119,119,119,119,275,276,119,119,119,119,119,119,119,]),'termino':([83,89,90,105,137,138,139,140,141,142,143,144,145,146,147,148,181,185,186,187,206,216,217,218,219,220,221,222,223,224,225,226,227,228,244,282,306,330,331,397,398,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,277,278,279,120,120,120,120,120,120,120,]),'factor':([83,89,90,105,137,138,139,140,141,142,143,144,145,146,147,148,181,185,186,187,206,216,217,218,219,220,221,222,223,224,225,226,227,228,244,282,306,330,331,397,398,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,]),'var':([83,89,90,105,137,138,139,140,141,142,143,144,145,146,147,148,181,182,185,186,187,206,216,217,218,219,220,221,222,223,224,225,226,227,228,244,282,306,330,331,397,398,],[123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,230,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,]),'lista':([86,183,],[130,232,]),'actualiza_func':([86,233,],[131,282,]),'arg_escritura':([90,244,],[134,291,]),'funcs':([106,153,159,],[152,207,213,]),'func':([106,153,159,],[153,153,153,]),'or_expr':([117,],[163,]),'and_exp':([118,],[165,]),'rel_e':([119,],[167,]),'suma_resta':([120,],[174,]),'mult_div':([121,],[177,]),'push_paren':([122,],[181,]),'neg_push':([124,],[182,]),'push_dim':([132,],[187,]),'fin_exp':([133,192,],[188,246,]),'fin_arg':([135,],[190,]),'print_string':([136,],[191,]),'gen_dir':([156,392,],[210,402,]),'end_sub':([161,],[215,]),'push_oper':([164,166,168,169,170,171,172,173,175,176,178,179,180,],[216,217,218,219,220,221,222,223,224,225,226,227,228,]),'var_func_call':([183,],[231,]),'exp_input':([185,],[235,]),'args':([186,282,330,],[238,325,361,]),'args_escritura':([190,191,],[243,245,]),'fin_instr':([204,205,403,],[258,259,408,]),'par':([210,402,],[263,407,]),'neg_pop':([230,],[281,]),'gen_era':([238,325,],[286,357,]),'asig_par':([239,],[287,]),'bloque':([241,292,364,],[289,337,384,]),'fin_instr1':([247,248,249,250,251,252,253,254,255,256,257,409,410,],[293,294,295,296,297,298,299,300,301,302,303,411,412,]),'pop_or':([267,],[311,]),'pop_and':([268,],[312,]),'pop_rel_e':([269,270,271,272,273,274,],[313,314,315,316,317,318,]),'pop_suma_resta':([275,276,],[319,320,]),'pop_mult_div':([277,278,279,],[321,322,323,]),'pop_paren':([280,],[324,]),'arg':([287,],[329,]),'matriz':([288,],[332,]),'pop_dim':([288,383,],[333,395,]),'else_bloque':([289,],[334,]),'transform':([299,300,301,302,],[344,347,348,349,]),'fill':([299,300,301,302,],[345,345,345,345,]),'trans':([303,345,374,],[350,368,386,]),'mas_vars':([326,],[358,]),'gen_gosub':([328,382,],[360,394,]),'fin_cond':([334,],[363,]),'inicio_else':([335,],[364,]),'fin_repeat':([337,],[366,]),'altera':([351,],[374,]),'fin_color':([377,],[389,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> MODULE ID creaDirFunc PUNTCOM ajustes var_func tipo_main MAIN actualiza_id crea_func bloque_func','programa',11,'p_programa','ProyectoFinal_Yacc.py',39),
  ('tipo_main -> <empty>','tipo_main',0,'p_tipo_main','ProyectoFinal_Yacc.py',42),
  ('creaDirFunc -> <empty>','creaDirFunc',0,'p_creaDirFunc','ProyectoFinal_Yacc.py',51),
  ('ajustes -> CANVAS BRAIZQ WIDTH CTE_I PUNTCOM HEIGHT CTE_I PUNTCOM BACKGROUND CTE_F COMA CTE_F COMA CTE_F PUNTCOM BRADER','ajustes',16,'p_ajustes','ProyectoFinal_Yacc.py',69),
  ('ajustes -> IMPORT CTE_STR','ajustes',2,'p_ajustes','ProyectoFinal_Yacc.py',70),
  ('var_func -> tipo ID actualiza_id var_o_func','var_func',4,'p_var_func','ProyectoFinal_Yacc.py',85),
  ('var_func -> <empty>','var_func',0,'p_var_func','ProyectoFinal_Yacc.py',86),
  ('actualiza_id -> <empty>','actualiza_id',0,'p_actualiza_id','ProyectoFinal_Yacc.py',89),
  ('var_o_func -> PARIZQ crea_func pars PARDER bloque_func funcs','var_o_func',6,'p_var_o_func','ProyectoFinal_Yacc.py',95),
  ('var_o_func -> crea_var lista_dec vars_lista PUNTCOM var_func','var_o_func',5,'p_var_o_func','ProyectoFinal_Yacc.py',96),
  ('crea_var -> <empty>','crea_var',0,'p_crea_var','ProyectoFinal_Yacc.py',99),
  ('lista_dec -> CORIZQ CTE_I CORDER matriz_dec','lista_dec',4,'p_lista_dec','ProyectoFinal_Yacc.py',108),
  ('lista_dec -> <empty>','lista_dec',0,'p_lista_dec','ProyectoFinal_Yacc.py',109),
  ('matriz_dec -> CORIZQ CTE_I CORDER','matriz_dec',3,'p_matriz_dec','ProyectoFinal_Yacc.py',142),
  ('matriz_dec -> <empty>','matriz_dec',0,'p_matriz_dec','ProyectoFinal_Yacc.py',143),
  ('bloque_func -> BRAIZQ vars_estatutos RETURN returns BRADER end_sub','bloque_func',6,'p_bloque_func','ProyectoFinal_Yacc.py',152),
  ('end_sub -> <empty>','end_sub',0,'p_end_sub','ProyectoFinal_Yacc.py',157),
  ('vars_estatutos -> vars estatutos','vars_estatutos',2,'p_vars_estatutos','ProyectoFinal_Yacc.py',167),
  ('vars_estatutos -> estatutos','vars_estatutos',1,'p_vars_estatutos','ProyectoFinal_Yacc.py',168),
  ('estatutos -> estatuto estatutos','estatutos',2,'p_vars_estatutos','ProyectoFinal_Yacc.py',169),
  ('estatutos -> <empty>','estatutos',0,'p_vars_estatutos','ProyectoFinal_Yacc.py',170),
  ('vars -> tipo ID actualiza_id crea_var lista_dec vars_lista PUNTCOM mas_vars','vars',8,'p_vars_estatutos','ProyectoFinal_Yacc.py',171),
  ('vars_lista -> COMA ID actualiza_id crea_var lista_dec vars_lista','vars_lista',6,'p_vars_estatutos','ProyectoFinal_Yacc.py',172),
  ('vars_lista -> <empty>','vars_lista',0,'p_vars_estatutos','ProyectoFinal_Yacc.py',173),
  ('mas_vars -> vars','mas_vars',1,'p_vars_estatutos','ProyectoFinal_Yacc.py',174),
  ('mas_vars -> <empty>','mas_vars',0,'p_vars_estatutos','ProyectoFinal_Yacc.py',175),
  ('funcs -> func funcs','funcs',2,'p_vars_estatutos','ProyectoFinal_Yacc.py',176),
  ('funcs -> <empty>','funcs',0,'p_vars_estatutos','ProyectoFinal_Yacc.py',177),
  ('func -> tipo ID actualiza_id crea_func PARIZQ pars PARDER bloque_func','func',8,'p_vars_estatutos','ProyectoFinal_Yacc.py',178),
  ('func -> VOID tipo_void ID actualiza_id crea_func PARIZQ pars PARDER bloque_func','func',9,'p_vars_estatutos','ProyectoFinal_Yacc.py',179),
  ('var_func -> VOID tipo_void ID actualiza_id crea_func PARIZQ pars PARDER bloque_func funcs','var_func',10,'p_vars_estatutos','ProyectoFinal_Yacc.py',180),
  ('returns -> expresion PUNTCOM','returns',2,'p_returns','ProyectoFinal_Yacc.py',183),
  ('returns -> PUNTCOM','returns',1,'p_returns','ProyectoFinal_Yacc.py',184),
  ('pars -> tipo ID actualiza_id crea_var gen_dir par','pars',6,'p_pars','ProyectoFinal_Yacc.py',192),
  ('pars -> <empty>','pars',0,'p_pars','ProyectoFinal_Yacc.py',193),
  ('par -> COMA tipo ID actualiza_id crea_var gen_dir par','par',7,'p_par','ProyectoFinal_Yacc.py',199),
  ('par -> <empty>','par',0,'p_par','ProyectoFinal_Yacc.py',200),
  ('gen_dir -> <empty>','gen_dir',0,'p_gen_dir','ProyectoFinal_Yacc.py',206),
  ('tipo_void -> <empty>','tipo_void',0,'p_tipo_void','ProyectoFinal_Yacc.py',212),
  ('crea_func -> <empty>','crea_func',0,'p_crea_func','ProyectoFinal_Yacc.py',217),
  ('push_oper -> <empty>','push_oper',0,'p_push_oper','ProyectoFinal_Yacc.py',231),
  ('pop_or -> <empty>','pop_or',0,'p_pop_or','ProyectoFinal_Yacc.py',264),
  ('pop_and -> <empty>','pop_and',0,'p_pop_and','ProyectoFinal_Yacc.py',268),
  ('pop_rel_e -> <empty>','pop_rel_e',0,'p_pop_rel_e','ProyectoFinal_Yacc.py',272),
  ('pop_suma_resta -> <empty>','pop_suma_resta',0,'p_pop_suma_resta','ProyectoFinal_Yacc.py',276),
  ('pop_mult_div -> <empty>','pop_mult_div',0,'p_pop_mult_div','ProyectoFinal_Yacc.py',280),
  ('expresion -> expr or_expr','expresion',2,'p_expresion','ProyectoFinal_Yacc.py',284),
  ('or_expr -> OR push_oper expresion pop_or','or_expr',4,'p_expresion','ProyectoFinal_Yacc.py',285),
  ('or_expr -> <empty>','or_expr',0,'p_expresion','ProyectoFinal_Yacc.py',286),
  ('expr -> exp and_exp','expr',2,'p_expresion','ProyectoFinal_Yacc.py',287),
  ('and_exp -> AND push_oper expr pop_and','and_exp',4,'p_expresion','ProyectoFinal_Yacc.py',288),
  ('and_exp -> <empty>','and_exp',0,'p_expresion','ProyectoFinal_Yacc.py',289),
  ('exp -> e rel_e','exp',2,'p_expresion','ProyectoFinal_Yacc.py',290),
  ('rel_e -> DIF push_oper exp pop_rel_e','rel_e',4,'p_expresion','ProyectoFinal_Yacc.py',291),
  ('rel_e -> MENOR push_oper exp pop_rel_e','rel_e',4,'p_expresion','ProyectoFinal_Yacc.py',292),
  ('rel_e -> MAYOR push_oper exp pop_rel_e','rel_e',4,'p_expresion','ProyectoFinal_Yacc.py',293),
  ('rel_e -> MENIGUAL push_oper exp pop_rel_e','rel_e',4,'p_expresion','ProyectoFinal_Yacc.py',294),
  ('rel_e -> MAYIGUAL push_oper exp pop_rel_e','rel_e',4,'p_expresion','ProyectoFinal_Yacc.py',295),
  ('rel_e -> IGUAL push_oper exp pop_rel_e','rel_e',4,'p_expresion','ProyectoFinal_Yacc.py',296),
  ('rel_e -> <empty>','rel_e',0,'p_expresion','ProyectoFinal_Yacc.py',297),
  ('e -> termino suma_resta','e',2,'p_expresion','ProyectoFinal_Yacc.py',298),
  ('suma_resta -> SUMA push_oper e pop_suma_resta','suma_resta',4,'p_expresion','ProyectoFinal_Yacc.py',299),
  ('suma_resta -> RESTA push_oper e pop_suma_resta','suma_resta',4,'p_expresion','ProyectoFinal_Yacc.py',300),
  ('suma_resta -> <empty>','suma_resta',0,'p_expresion','ProyectoFinal_Yacc.py',301),
  ('termino -> factor mult_div','termino',2,'p_expresion','ProyectoFinal_Yacc.py',302),
  ('mult_div -> MULT push_oper termino pop_mult_div','mult_div',4,'p_expresion','ProyectoFinal_Yacc.py',303),
  ('mult_div -> DIV push_oper termino pop_mult_div','mult_div',4,'p_expresion','ProyectoFinal_Yacc.py',304),
  ('mult_div -> MOD push_oper termino pop_mult_div','mult_div',4,'p_expresion','ProyectoFinal_Yacc.py',305),
  ('mult_div -> <empty>','mult_div',0,'p_expresion','ProyectoFinal_Yacc.py',306),
  ('factor -> PARIZQ push_paren e PARDER pop_paren','factor',5,'p_factor','ProyectoFinal_Yacc.py',309),
  ('factor -> var','factor',1,'p_factor','ProyectoFinal_Yacc.py',310),
  ('factor -> RESTA neg_push var neg_pop','factor',4,'p_factor','ProyectoFinal_Yacc.py',311),
  ('neg_push -> <empty>','neg_push',0,'p_neg_push','ProyectoFinal_Yacc.py',315),
  ('neg_pop -> <empty>','neg_pop',0,'p_neg_pop','ProyectoFinal_Yacc.py',320),
  ('var -> ID actualiza_id var_func_call','var',3,'p_var','ProyectoFinal_Yacc.py',325),
  ('var -> CTE_I','var',1,'p_var_int','ProyectoFinal_Yacc.py',328),
  ('var -> CTE_F','var',1,'p_var_float','ProyectoFinal_Yacc.py',339),
  ('var -> error','var',1,'p_var_error','ProyectoFinal_Yacc.py',350),
  ('push_dim -> <empty>','push_dim',0,'p_push_dim','ProyectoFinal_Yacc.py',355),
  ('pop_dim -> <empty>','pop_dim',0,'p_pop_dim','ProyectoFinal_Yacc.py',361),
  ('lista -> CORIZQ push_dim expresion CORDER matriz','lista',5,'p_lista','ProyectoFinal_Yacc.py',367),
  ('lista -> <empty>','lista',0,'p_lista','ProyectoFinal_Yacc.py',368),
  ('matriz -> CORIZQ expresion CORDER pop_dim','matriz',4,'p_matriz','ProyectoFinal_Yacc.py',452),
  ('matriz -> pop_dim','matriz',1,'p_matriz','ProyectoFinal_Yacc.py',453),
  ('var_func_call -> lista','var_func_call',1,'p_var_func_call','ProyectoFinal_Yacc.py',489),
  ('push_paren -> <empty>','push_paren',0,'p_push_paren','ProyectoFinal_Yacc.py',492),
  ('pop_paren -> <empty>','pop_paren',0,'p_pop_paren','ProyectoFinal_Yacc.py',497),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','ProyectoFinal_Yacc.py',505),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','ProyectoFinal_Yacc.py',506),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','ProyectoFinal_Yacc.py',507),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','ProyectoFinal_Yacc.py',508),
  ('estatuto -> instruccion','estatuto',1,'p_estatuto','ProyectoFinal_Yacc.py',509),
  ('estatuto -> func_call PUNTCOM','estatuto',2,'p_estatuto','ProyectoFinal_Yacc.py',510),
  ('bloque -> BRAIZQ estatutos BRADER','bloque',3,'p_estatuto','ProyectoFinal_Yacc.py',511),
  ('func_call -> ID actualiza_id actualiza_func PARIZQ args gen_era PARDER gen_gosub','func_call',8,'p_func_call','ProyectoFinal_Yacc.py',514),
  ('var_func_call -> PARIZQ actualiza_func args gen_era PARDER gen_gosub','var_func_call',6,'p_func_call','ProyectoFinal_Yacc.py',515),
  ('actualiza_func -> <empty>','actualiza_func',0,'p_actualiza_func','ProyectoFinal_Yacc.py',518),
  ('gen_era -> <empty>','gen_era',0,'p_gen_era','ProyectoFinal_Yacc.py',528),
  ('gen_gosub -> <empty>','gen_gosub',0,'p_gen_gosub','ProyectoFinal_Yacc.py',542),
  ('args -> expresion asig_par arg','args',3,'p_args','ProyectoFinal_Yacc.py',563),
  ('args -> <empty>','args',0,'p_args','ProyectoFinal_Yacc.py',564),
  ('arg -> COMA args','arg',2,'p_args','ProyectoFinal_Yacc.py',565),
  ('arg -> <empty>','arg',0,'p_args','ProyectoFinal_Yacc.py',566),
  ('asig_par -> <empty>','asig_par',0,'p_asig_par','ProyectoFinal_Yacc.py',569),
  ('asignacion -> ID actualiza_id lista ASIG exp_input PUNTCOM','asignacion',6,'p_asignacion','ProyectoFinal_Yacc.py',592),
  ('exp_input -> expresion','exp_input',1,'p_exp_input','ProyectoFinal_Yacc.py',608),
  ('exp_input -> INPUT PARIZQ PARDER','exp_input',3,'p_exp_input','ProyectoFinal_Yacc.py',609),
  ('condicion -> IF PARIZQ expresion fin_exp PARDER bloque else_bloque fin_cond','condicion',8,'p_condicion','ProyectoFinal_Yacc.py',612),
  ('else_bloque -> ELSE inicio_else bloque','else_bloque',3,'p_condicion','ProyectoFinal_Yacc.py',613),
  ('else_bloque -> <empty>','else_bloque',0,'p_condicion','ProyectoFinal_Yacc.py',614),
  ('fin_cond -> <empty>','fin_cond',0,'p_fin_cond','ProyectoFinal_Yacc.py',617),
  ('inicio_else -> <empty>','inicio_else',0,'p_inicio_else','ProyectoFinal_Yacc.py',623),
  ('fin_exp -> <empty>','fin_exp',0,'p_fin_exp_repeat','ProyectoFinal_Yacc.py',632),
  ('ciclo -> REPEAT push_cont PARIZQ expresion fin_exp PARDER bloque fin_repeat','ciclo',8,'p_ciclo','ProyectoFinal_Yacc.py',645),
  ('push_cont -> <empty>','push_cont',0,'p_push_cont','ProyectoFinal_Yacc.py',648),
  ('fin_repeat -> <empty>','fin_repeat',0,'p_fin_repeat','ProyectoFinal_Yacc.py',654),
  ('escritura -> PRINT PARIZQ arg_escritura PARDER PUNTCOM','escritura',5,'p_escritura','ProyectoFinal_Yacc.py',663),
  ('arg_escritura -> expresion fin_arg args_escritura','arg_escritura',3,'p_escritura','ProyectoFinal_Yacc.py',664),
  ('arg_escritura -> CTE_STR print_string args_escritura','arg_escritura',3,'p_escritura','ProyectoFinal_Yacc.py',665),
  ('args_escritura -> COMA arg_escritura','args_escritura',2,'p_escritura','ProyectoFinal_Yacc.py',666),
  ('args_escritura -> <empty>','args_escritura',0,'p_escritura','ProyectoFinal_Yacc.py',667),
  ('fin_arg -> <empty>','fin_arg',0,'p_fin_arg','ProyectoFinal_Yacc.py',670),
  ('print_string -> <empty>','print_string',0,'p_print_string','ProyectoFinal_Yacc.py',677),
  ('tipo -> INT actualiza_tipo','tipo',2,'p_tipo','ProyectoFinal_Yacc.py',682),
  ('tipo -> FLOAT actualiza_tipo','tipo',2,'p_tipo','ProyectoFinal_Yacc.py',683),
  ('actualiza_tipo -> <empty>','actualiza_tipo',0,'p_actualiza_tipo','ProyectoFinal_Yacc.py',687),
  ('instruccion -> FORWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM','instruccion',7,'p_instruccion','ProyectoFinal_Yacc.py',692),
  ('instruccion -> BACKWARD actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM','instruccion',7,'p_instruccion','ProyectoFinal_Yacc.py',693),
  ('instruccion -> LEFT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM','instruccion',7,'p_instruccion','ProyectoFinal_Yacc.py',694),
  ('instruccion -> RIGHT actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM','instruccion',7,'p_instruccion','ProyectoFinal_Yacc.py',695),
  ('instruccion -> TURN actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM','instruccion',7,'p_instruccion','ProyectoFinal_Yacc.py',696),
  ('instruccion -> SIZE actualiza_instr PARIZQ expresion PARDER fin_instr1 PUNTCOM','instruccion',7,'p_instruccion','ProyectoFinal_Yacc.py',697),
  ('instruccion -> CIRCLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM','instruccion',8,'p_instruccion','ProyectoFinal_Yacc.py',698),
  ('instruccion -> TRIANGLE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM','instruccion',8,'p_instruccion','ProyectoFinal_Yacc.py',699),
  ('instruccion -> SQUARE actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM','instruccion',8,'p_instruccion','ProyectoFinal_Yacc.py',700),
  ('instruccion -> NGON actualiza_instr PARIZQ expresion PARDER fin_instr1 transform PUNTCOM','instruccion',8,'p_instruccion','ProyectoFinal_Yacc.py',701),
  ('instruccion -> ARC actualiza_instr PARIZQ expresion PARDER fin_instr1 trans PUNTCOM','instruccion',8,'p_instruccion','ProyectoFinal_Yacc.py',702),
  ('instruccion -> UP actualiza_instr PARIZQ PARDER fin_instr PUNTCOM','instruccion',6,'p_instruccion','ProyectoFinal_Yacc.py',703),
  ('instruccion -> DOWN actualiza_instr PARIZQ PARDER fin_instr PUNTCOM','instruccion',6,'p_instruccion','ProyectoFinal_Yacc.py',704),
  ('instruccion -> COLOR PARIZQ expresion COMA expresion COMA expresion PARDER fin_color PUNTCOM','instruccion',10,'p_instruccion','ProyectoFinal_Yacc.py',705),
  ('transform -> fill trans','transform',2,'p_instruccion','ProyectoFinal_Yacc.py',706),
  ('transform -> <empty>','transform',0,'p_instruccion','ProyectoFinal_Yacc.py',707),
  ('fill -> PUNTO FILL actualiza_instr PARIZQ PARDER fin_instr','fill',6,'p_instruccion','ProyectoFinal_Yacc.py',708),
  ('trans -> PUNTO altera trans','trans',3,'p_instruccion','ProyectoFinal_Yacc.py',709),
  ('trans -> <empty>','trans',0,'p_instruccion','ProyectoFinal_Yacc.py',710),
  ('altera -> ROTATE actualiza_instr PARIZQ expresion PARDER fin_instr1','altera',6,'p_instruccion','ProyectoFinal_Yacc.py',711),
  ('altera -> STRETCH actualiza_instr PARIZQ expresion PARDER fin_instr1','altera',6,'p_instruccion','ProyectoFinal_Yacc.py',712),
  ('actualiza_instr -> <empty>','actualiza_instr',0,'p_actualiza_instr','ProyectoFinal_Yacc.py',715),
  ('fin_instr -> <empty>','fin_instr',0,'p_fin_instr','ProyectoFinal_Yacc.py',720),
  ('fin_instr1 -> <empty>','fin_instr1',0,'p_fin_instr1','ProyectoFinal_Yacc.py',726),
  ('fin_instr2 -> <empty>','fin_instr2',0,'p_fin_instr2','ProyectoFinal_Yacc.py',734),
  ('fin_color -> <empty>','fin_color',0,'p_fin_color','ProyectoFinal_Yacc.py',743),
]
