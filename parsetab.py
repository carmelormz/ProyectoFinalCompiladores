
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftSUMARESTAleftMULTDIVAND ARC ASIG BACKGROUND BACKWARD BRADER BRAIZQ CANVAS CIRCLE COLOR COMA CORDER CORIZQ CTE_F CTE_I CTE_STR DIF DIV DOWN ELSE FILL FLOAT FORWARD HEIGHT ID IF IGUAL IMPORT INPUT INT LEFT MAIN MAYIGUAL MAYOR MENIGUAL MENOR MODULE MULT NGON OR PARDER PARIZQ PRINT PUNTCOM PUNTO REPEAT RESTA RETURN RIGHT ROTATE SIZE SQUARE STRETCH SUMA TRIANGLE TURN UP VOID WIDTHprograma : MODULE ID creaDirFunc PUNTCOM ajustes var_func tipo_main MAIN actualiza_id crea_func bloque_funccreaDirFunc : ajustes : CANVAS BRAIZQ WIDTH CTE_I PUNTCOM HEIGHT CTE_I PUNTCOM BACKGROUND CTE_F COMA CTE_F COMA CTE_F PUNTCOM BRADER\n               | IMPORT CTE_STRvar_func : tipo ID actualiza_id var_o_func\n                | VOID tipo_void ID actualiza_id crea_func PARIZQ pars PARDER bloque_func funcs\n                | actualiza_id : var_o_func : PARIZQ crea_func pars PARDER bloque_func funcs\n                  | crea_var lista vars_lista PUNTCOM var_funccrea_var : bloque_func : BRAIZQ vars_estatutos RETURN returns BRADERvars_estatutos : vars estatutos\n                      | estatutosestatutos : estatuto estatutos\n                 | returns : expresion PUNTCOM\n               | PUNTCOM vars : tipo ID actualiza_id crea_var lista vars_lista PUNTCOM mas_varsvars_lista : COMA ID actualiza_id crea_var lista vars_lista\n                  | mas_vars : vars\n                | funcs : func funcs\n             | func : tipo ID actualiza_id crea_func PARIZQ pars PARDER bloque_func\n            | VOID tipo_void ID actualiza_id crea_func PARIZQ pars PARDER bloque_functipo_void : tipo_main : crea_func : push_oper : pop_or : pop_and : pop_rel_e : pop_suma_resta : pop_mult_div : expresion : expr pop_or or_expror_expr : OR push_oper expresion\n               | expr : exp pop_and and_expand_exp : AND push_oper expr\n               | exp : e pop_rel_e rel_erel_e : DIF push_oper exp\n             | MENOR push_oper exp\n             | MAYOR push_oper  exp\n             | MENIGUAL push_oper exp\n             | MAYIGUAL push_oper exp\n             | IGUAL push_oper exp\n             |e : termino pop_suma_resta suma_restasuma_resta : SUMA push_oper e\n                  | RESTA push_oper e\n                  | termino : factor pop_mult_div mult_divmult_div : MULT push_oper termino\n                | DIV push_oper termino\n                | factor : PARIZQ push_paren e PARDER pop_paren\n              | var\n              | SUMA var\n              | RESTA varpush_paren : pop_paren : estatuto : asignacion\n                | condicion\n                | escritura\n                | ciclo\n                | instruccion\n                | func_call PUNTCOMfunc_call : ID PARIZQ args PARDERasignacion : ID actualiza_id lista ASIG exp_input PUNTCOMasignacion : errorexp_input : expresion\n                 | INPUT PARIZQ PARDERcondicion : IF PARIZQ expresion PARDER bloque else_bloqueelse_bloque : ELSE bloque\n                   | escritura : PRINT PARIZQ arg_escritura PARDER PUNTCOMarg_escritura : expresion args_escritura\n                     | CTE_STR args_escrituraargs_escritura : COMA arg_escritura\n                      | ciclo : REPEAT push_cont PARIZQ expresion fin_exp_repeat PARDER bloque fin_repeatpush_cont : fin_exp_repeat : fin_repeat : tipo : INT actualiza_tipo\n            | FLOAT actualiza_tipoactualiza_tipo : lista : CORIZQ expresion CORDER matriz\n             | matriz : CORIZQ expresion CORDER\n              | var : ID actualiza_id var_func_callvar : CTE_Ivar : CTE_Fvar_func_call : PARIZQ args PARDER\n                     | listaargs : expresion arg\n            | arg : COMA expresion arg\n           |  bloque : BRAIZQ estatutos BRADER pars : tipo ID actualiza_id crea_var lista par\n            | par : COMA tipo ID actualiza_id crea_var lista par\n           | instruccion : FORWARD PARIZQ expresion PARDER PUNTCOM\n                   | BACKWARD PARIZQ expresion PARDER PUNTCOM\n                   | LEFT PARIZQ expresion PARDER PUNTCOM\n                   | RIGHT PARIZQ expresion PARDER PUNTCOM\n                   | TURN PARIZQ expresion PARDER PUNTCOM\n                   | SIZE PARIZQ expresion PARDER PUNTCOM\n                   | CIRCLE PARIZQ expresion PARDER transform PUNTCOM\n                   | TRIANGLE PARIZQ expresion PARDER transform PUNTCOM\n                   | SQUARE PARIZQ expresion PARDER transform PUNTCOM\n                   | NGON PARIZQ expresion COMA expresion PARDER transform PUNTCOM\n                   | ARC PARIZQ expresion COMA expresion PARDER transform PUNTCOM\n                   | UP PARIZQ PARDER PUNTCOM\n                   | DOWN PARIZQ PARDER PUNTCOM\n                   | COLOR PARIZQ expresion COMA expresion COMA expresion PARDER PUNTCOMtransform : PUNTO altera transform\n                 | altera : ROTATE PARIZQ expresion PARDER\n              | STRETCH PARIZQ expresion PARDER\n              | FILL PARIZQ PARDER'
    
_lr_action_items = {'MODULE':([0,],[2,]),'$end':([1,38,207,],[0,-1,-12,]),'ID':([2,10,11,12,13,18,19,20,35,39,41,43,50,52,53,60,62,64,65,66,67,68,69,71,99,105,109,111,112,113,115,116,117,118,119,120,121,122,123,124,125,128,133,136,138,140,141,142,143,144,145,147,148,150,151,154,169,186,187,191,192,193,194,195,196,197,198,199,200,201,202,210,213,217,229,230,231,232,233,236,261,262,263,266,267,268,269,270,271,286,289,293,298,299,302,305,307,309,310,311,313,314,323,324,325,329,330,338,],[3,17,-28,-90,-90,24,-88,-89,54,63,90,92,-63,54,54,63,107,63,-65,-66,-67,-68,-69,-73,54,54,54,-70,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,54,54,235,-28,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-120,-121,54,280,-78,63,-79,-109,-110,-111,-112,-113,-114,-72,-76,-115,-116,-117,54,321,-23,-77,-104,-87,54,54,-19,-22,-84,-118,-119,-122,]),'PUNTCOM':([3,4,17,23,25,29,34,42,45,46,47,48,49,51,54,55,56,58,70,92,93,94,95,96,97,98,100,101,102,105,107,132,134,135,137,139,146,149,153,155,159,161,181,182,189,203,209,211,215,220,221,222,223,224,225,226,227,228,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,256,257,258,272,274,275,283,285,294,300,301,308,312,316,317,322,328,331,336,337,],[-2,5,-8,-11,31,-92,-21,91,-32,-33,-34,-35,-36,-60,-8,-96,-97,104,111,-8,-94,-39,-42,-50,-54,-58,-61,-62,-92,160,-8,-11,-91,-37,-40,-43,-51,-55,-95,-99,208,-11,231,232,-92,-64,-92,-71,263,266,267,268,269,270,271,-124,-124,-124,-21,-93,-38,-41,-44,-45,-46,-47,-48,-49,-52,-53,-56,-57,-59,-98,-21,286,-74,293,298,299,-20,307,-124,-124,-124,-75,-123,329,330,335,-127,338,-125,-126,]),'CANVAS':([5,],[7,]),'IMPORT':([5,],[8,]),'VOID':([6,15,91,129,185,205,207,342,343,346,],[11,-4,11,187,187,187,-12,-3,-26,-27,]),'MAIN':([6,9,15,16,27,91,129,131,184,185,205,207,234,254,342,343,346,],[-7,-29,-4,22,-5,-7,-25,-10,-9,-25,-25,-12,-24,-6,-3,-26,-27,]),'INT':([6,15,28,33,39,57,91,129,185,205,207,282,307,319,333,342,343,346,],[12,-4,-30,12,12,12,12,12,12,12,-12,12,12,12,12,-3,-26,-27,]),'FLOAT':([6,15,28,33,39,57,91,129,185,205,207,282,307,319,333,342,343,346,],[13,-4,-30,13,13,13,13,13,13,13,-12,13,13,13,13,-3,-26,-27,]),'BRAIZQ':([7,22,26,32,89,156,214,290,292,339,344,],[14,-8,-30,39,39,39,262,262,262,39,39,]),'CTE_STR':([8,113,217,],[15,168,168,]),'WIDTH':([14,],[21,]),'PARIZQ':([17,23,24,30,35,36,50,54,63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,99,102,105,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,128,133,136,138,140,141,142,143,144,145,147,148,150,151,154,169,191,192,193,194,195,196,197,198,199,200,201,202,210,213,217,229,230,233,235,259,279,280,295,296,297,302,303,304,313,314,320,],[-8,28,-8,-30,50,57,-63,-8,109,112,113,-85,115,116,117,118,119,120,121,122,123,124,125,126,127,128,50,154,50,50,50,50,169,50,50,50,50,50,50,50,50,50,50,50,50,50,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-8,287,-30,-8,313,314,315,50,319,-30,50,50,333,]),'CORIZQ':([17,23,29,54,63,90,92,93,102,107,108,130,132,161,188,189,209,321,334,341,],[-8,-11,35,-8,-8,-8,-8,133,35,-8,35,-11,-11,-11,35,35,35,-8,-11,35,]),'COMA':([17,23,29,34,45,46,47,48,49,51,54,55,56,90,92,93,94,95,96,97,98,100,101,102,107,130,132,134,135,137,139,146,149,153,155,161,164,167,168,179,180,183,188,189,203,206,209,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,256,260,278,284,321,334,341,345,],[-8,-11,-92,43,-32,-33,-34,-35,-36,-60,-8,-96,-97,-8,-8,-94,-39,-42,-50,-54,-58,-61,-62,-92,-8,-11,-11,-91,-37,-40,-43,-51,-55,-95,-99,-11,213,217,217,229,230,233,-92,-92,-64,255,-92,282,43,-93,-38,-41,-44,-45,-46,-47,-48,-49,-52,-53,-56,-57,-59,-98,43,213,302,306,-8,-11,-92,282,]),'CTE_I':([21,35,37,50,52,53,99,105,109,112,113,115,116,117,118,119,120,121,122,123,124,125,128,133,136,138,140,141,142,143,144,145,147,148,150,151,154,169,191,192,193,194,195,196,197,198,199,200,201,202,210,213,217,229,230,233,302,313,314,],[25,55,58,-63,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'PARDER':([28,33,40,45,46,47,48,49,51,54,55,56,57,90,93,94,95,96,97,98,100,101,102,103,109,126,127,130,134,135,137,139,146,149,152,153,154,155,163,164,165,166,167,168,170,171,172,173,174,175,176,177,178,188,203,204,212,216,218,219,237,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,260,264,265,276,277,281,287,288,315,318,319,321,326,327,332,333,334,340,341,345,347,],[-30,-106,89,-32,-33,-34,-35,-36,-60,-8,-96,-97,-106,-8,-94,-39,-42,-50,-54,-58,-61,-62,-92,156,-101,181,182,-11,-91,-37,-40,-43,-51,-55,203,-95,-101,-99,211,-103,214,215,-83,-83,220,221,222,223,224,225,226,227,228,-92,-64,253,-100,-80,-81,-86,-108,-93,-38,-41,-44,-45,-46,-47,-48,-49,-52,-53,-56,-57,-59,-98,-103,-82,292,300,301,-105,308,-102,328,331,-106,-8,336,337,339,-106,-11,344,-92,-108,-107,]),'HEIGHT':([31,],[37,]),'SUMA':([35,48,49,50,51,54,55,56,93,97,98,99,100,101,102,105,109,112,113,115,116,117,118,119,120,121,122,123,124,125,128,133,134,136,138,140,141,142,143,144,145,147,148,149,150,151,153,154,155,169,191,192,193,194,195,196,197,198,199,200,201,202,203,210,213,217,229,230,233,239,250,251,252,253,302,313,314,],[52,-35,-36,-63,-60,-8,-96,-97,-94,147,-58,52,-61,-62,-92,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-91,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-55,-31,-31,-95,52,-99,52,52,52,52,52,52,52,52,52,52,52,52,52,-64,52,52,52,52,52,52,-93,-56,-57,-59,-98,52,52,52,]),'RESTA':([35,48,49,50,51,54,55,56,93,97,98,99,100,101,102,105,109,112,113,115,116,117,118,119,120,121,122,123,124,125,128,133,134,136,138,140,141,142,143,144,145,147,148,149,150,151,153,154,155,169,191,192,193,194,195,196,197,198,199,200,201,202,203,210,213,217,229,230,233,239,250,251,252,253,302,313,314,],[53,-35,-36,-63,-60,-8,-96,-97,-94,148,-58,53,-61,-62,-92,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-91,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-55,-31,-31,-95,53,-99,53,53,53,53,53,53,53,53,53,53,53,53,53,-64,53,53,53,53,53,53,-93,-56,-57,-59,-98,53,53,53,]),'CTE_F':([35,50,52,53,99,105,109,112,113,115,116,117,118,119,120,121,122,123,124,125,128,133,136,138,140,141,142,143,144,145,147,148,150,151,154,157,169,191,192,193,194,195,196,197,198,199,200,201,202,210,213,217,229,230,233,255,302,306,313,314,],[56,-63,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,56,206,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,284,56,322,56,56,]),'RETURN':([39,59,60,61,64,65,66,67,68,69,71,106,110,111,231,232,261,263,266,267,268,269,270,271,286,289,293,298,299,307,309,310,311,323,324,325,329,330,338,],[-16,105,-16,-14,-16,-65,-66,-67,-68,-69,-73,-13,-15,-70,-120,-121,-78,-79,-109,-110,-111,-112,-113,-114,-72,-76,-115,-116,-117,-23,-77,-104,-87,-19,-22,-84,-118,-119,-122,]),'error':([39,60,64,65,66,67,68,69,71,111,231,232,261,262,263,266,267,268,269,270,271,286,289,293,298,299,307,309,310,311,323,324,325,329,330,338,],[71,71,71,-65,-66,-67,-68,-69,-73,-70,-120,-121,-78,71,-79,-109,-110,-111,-112,-113,-114,-72,-76,-115,-116,-117,-23,-77,-104,-87,-19,-22,-84,-118,-119,-122,]),'IF':([39,60,64,65,66,67,68,69,71,111,231,232,261,262,263,266,267,268,269,270,271,286,289,293,298,299,307,309,310,311,323,324,325,329,330,338,],[72,72,72,-65,-66,-67,-68,-69,-73,-70,-120,-121,-78,72,-79,-109,-110,-111,-112,-113,-114,-72,-76,-115,-116,-117,-23,-77,-104,-87,-19,-22,-84,-118,-119,-122,]),'PRINT':([39,60,64,65,66,67,68,69,71,111,231,232,261,262,263,266,267,268,269,270,271,286,289,293,298,299,307,309,310,311,323,324,325,329,330,338,],[73,73,73,-65,-66,-67,-68,-69,-73,-70,-120,-121,-78,73,-79,-109,-110,-111,-112,-113,-114,-72,-76,-115,-116,-117,-23,-77,-104,-87,-19,-22,-84,-118,-119,-122,]),'REPEAT':([39,60,64,65,66,67,68,69,71,111,231,232,261,262,263,266,267,268,269,270,271,286,289,293,298,299,307,309,310,311,323,324,325,329,330,338,],[74,74,74,-65,-66,-67,-68,-69,-73,-70,-120,-121,-78,74,-79,-109,-110,-111,-112,-113,-114,-72,-76,-115,-116,-117,-23,-77,-104,-87,-19,-22,-84,-118,-119,-122,]),'FORWARD':([39,60,64,65,66,67,68,69,71,111,231,232,261,262,263,266,267,268,269,270,271,286,289,293,298,299,307,309,310,311,323,324,325,329,330,338,],[75,75,75,-65,-66,-67,-68,-69,-73,-70,-120,-121,-78,75,-79,-109,-110,-111,-112,-113,-114,-72,-76,-115,-116,-117,-23,-77,-104,-87,-19,-22,-84,-118,-119,-122,]),'BACKWARD':([39,60,64,65,66,67,68,69,71,111,231,232,261,262,263,266,267,268,269,270,271,286,289,293,298,299,307,309,310,311,323,324,325,329,330,338,],[76,76,76,-65,-66,-67,-68,-69,-73,-70,-120,-121,-78,76,-79,-109,-110,-111,-112,-113,-114,-72,-76,-115,-116,-117,-23,-77,-104,-87,-19,-22,-84,-118,-119,-122,]),'LEFT':([39,60,64,65,66,67,68,69,71,111,231,232,261,262,263,266,267,268,269,270,271,286,289,293,298,299,307,309,310,311,323,324,325,329,330,338,],[77,77,77,-65,-66,-67,-68,-69,-73,-70,-120,-121,-78,77,-79,-109,-110,-111,-112,-113,-114,-72,-76,-115,-116,-117,-23,-77,-104,-87,-19,-22,-84,-118,-119,-122,]),'RIGHT':([39,60,64,65,66,67,68,69,71,111,231,232,261,262,263,266,267,268,269,270,271,286,289,293,298,299,307,309,310,311,323,324,325,329,330,338,],[78,78,78,-65,-66,-67,-68,-69,-73,-70,-120,-121,-78,78,-79,-109,-110,-111,-112,-113,-114,-72,-76,-115,-116,-117,-23,-77,-104,-87,-19,-22,-84,-118,-119,-122,]),'TURN':([39,60,64,65,66,67,68,69,71,111,231,232,261,262,263,266,267,268,269,270,271,286,289,293,298,299,307,309,310,311,323,324,325,329,330,338,],[79,79,79,-65,-66,-67,-68,-69,-73,-70,-120,-121,-78,79,-79,-109,-110,-111,-112,-113,-114,-72,-76,-115,-116,-117,-23,-77,-104,-87,-19,-22,-84,-118,-119,-122,]),'SIZE':([39,60,64,65,66,67,68,69,71,111,231,232,261,262,263,266,267,268,269,270,271,286,289,293,298,299,307,309,310,311,323,324,325,329,330,338,],[80,80,80,-65,-66,-67,-68,-69,-73,-70,-120,-121,-78,80,-79,-109,-110,-111,-112,-113,-114,-72,-76,-115,-116,-117,-23,-77,-104,-87,-19,-22,-84,-118,-119,-122,]),'CIRCLE':([39,60,64,65,66,67,68,69,71,111,231,232,261,262,263,266,267,268,269,270,271,286,289,293,298,299,307,309,310,311,323,324,325,329,330,338,],[81,81,81,-65,-66,-67,-68,-69,-73,-70,-120,-121,-78,81,-79,-109,-110,-111,-112,-113,-114,-72,-76,-115,-116,-117,-23,-77,-104,-87,-19,-22,-84,-118,-119,-122,]),'TRIANGLE':([39,60,64,65,66,67,68,69,71,111,231,232,261,262,263,266,267,268,269,270,271,286,289,293,298,299,307,309,310,311,323,324,325,329,330,338,],[82,82,82,-65,-66,-67,-68,-69,-73,-70,-120,-121,-78,82,-79,-109,-110,-111,-112,-113,-114,-72,-76,-115,-116,-117,-23,-77,-104,-87,-19,-22,-84,-118,-119,-122,]),'SQUARE':([39,60,64,65,66,67,68,69,71,111,231,232,261,262,263,266,267,268,269,270,271,286,289,293,298,299,307,309,310,311,323,324,325,329,330,338,],[83,83,83,-65,-66,-67,-68,-69,-73,-70,-120,-121,-78,83,-79,-109,-110,-111,-112,-113,-114,-72,-76,-115,-116,-117,-23,-77,-104,-87,-19,-22,-84,-118,-119,-122,]),'NGON':([39,60,64,65,66,67,68,69,71,111,231,232,261,262,263,266,267,268,269,270,271,286,289,293,298,299,307,309,310,311,323,324,325,329,330,338,],[84,84,84,-65,-66,-67,-68,-69,-73,-70,-120,-121,-78,84,-79,-109,-110,-111,-112,-113,-114,-72,-76,-115,-116,-117,-23,-77,-104,-87,-19,-22,-84,-118,-119,-122,]),'ARC':([39,60,64,65,66,67,68,69,71,111,231,232,261,262,263,266,267,268,269,270,271,286,289,293,298,299,307,309,310,311,323,324,325,329,330,338,],[85,85,85,-65,-66,-67,-68,-69,-73,-70,-120,-121,-78,85,-79,-109,-110,-111,-112,-113,-114,-72,-76,-115,-116,-117,-23,-77,-104,-87,-19,-22,-84,-118,-119,-122,]),'UP':([39,60,64,65,66,67,68,69,71,111,231,232,261,262,263,266,267,268,269,270,271,286,289,293,298,299,307,309,310,311,323,324,325,329,330,338,],[86,86,86,-65,-66,-67,-68,-69,-73,-70,-120,-121,-78,86,-79,-109,-110,-111,-112,-113,-114,-72,-76,-115,-116,-117,-23,-77,-104,-87,-19,-22,-84,-118,-119,-122,]),'DOWN':([39,60,64,65,66,67,68,69,71,111,231,232,261,262,263,266,267,268,269,270,271,286,289,293,298,299,307,309,310,311,323,324,325,329,330,338,],[87,87,87,-65,-66,-67,-68,-69,-73,-70,-120,-121,-78,87,-79,-109,-110,-111,-112,-113,-114,-72,-76,-115,-116,-117,-23,-77,-104,-87,-19,-22,-84,-118,-119,-122,]),'COLOR':([39,60,64,65,66,67,68,69,71,111,231,232,261,262,263,266,267,268,269,270,271,286,289,293,298,299,307,309,310,311,323,324,325,329,330,338,],[88,88,88,-65,-66,-67,-68,-69,-73,-70,-120,-121,-78,88,-79,-109,-110,-111,-112,-113,-114,-72,-76,-115,-116,-117,-23,-77,-104,-87,-19,-22,-84,-118,-119,-122,]),'CORDER':([44,45,46,47,48,49,51,54,55,56,93,94,95,96,97,98,100,101,102,134,135,137,139,146,149,153,155,190,203,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,],[93,-32,-33,-34,-35,-36,-60,-8,-96,-97,-94,-39,-42,-50,-54,-58,-61,-62,-92,-91,-37,-40,-43,-51,-55,-95,-99,239,-64,-93,-38,-41,-44,-45,-46,-47,-48,-49,-52,-53,-56,-57,-59,-98,]),'OR':([45,46,47,48,49,51,54,55,56,93,94,95,96,97,98,100,101,102,134,137,139,146,149,153,155,203,239,241,242,243,244,245,246,247,248,249,250,251,252,253,],[-32,-33,-34,-35,-36,-60,-8,-96,-97,-94,136,-42,-50,-54,-58,-61,-62,-92,-91,-40,-43,-51,-55,-95,-99,-64,-93,-41,-44,-45,-46,-47,-48,-49,-52,-53,-56,-57,-59,-98,]),'AND':([46,47,48,49,51,54,55,56,93,95,96,97,98,100,101,102,134,139,146,149,153,155,203,239,242,243,244,245,246,247,248,249,250,251,252,253,],[-33,-34,-35,-36,-60,-8,-96,-97,-94,138,-50,-54,-58,-61,-62,-92,-91,-43,-51,-55,-95,-99,-64,-93,-44,-45,-46,-47,-48,-49,-52,-53,-56,-57,-59,-98,]),'DIF':([47,48,49,51,54,55,56,93,96,97,98,100,101,102,134,146,149,153,155,203,239,248,249,250,251,252,253,],[-34,-35,-36,-60,-8,-96,-97,-94,140,-54,-58,-61,-62,-92,-91,-51,-55,-95,-99,-64,-93,-52,-53,-56,-57,-59,-98,]),'MENOR':([47,48,49,51,54,55,56,93,96,97,98,100,101,102,134,146,149,153,155,203,239,248,249,250,251,252,253,],[-34,-35,-36,-60,-8,-96,-97,-94,141,-54,-58,-61,-62,-92,-91,-51,-55,-95,-99,-64,-93,-52,-53,-56,-57,-59,-98,]),'MAYOR':([47,48,49,51,54,55,56,93,96,97,98,100,101,102,134,146,149,153,155,203,239,248,249,250,251,252,253,],[-34,-35,-36,-60,-8,-96,-97,-94,142,-54,-58,-61,-62,-92,-91,-51,-55,-95,-99,-64,-93,-52,-53,-56,-57,-59,-98,]),'MENIGUAL':([47,48,49,51,54,55,56,93,96,97,98,100,101,102,134,146,149,153,155,203,239,248,249,250,251,252,253,],[-34,-35,-36,-60,-8,-96,-97,-94,143,-54,-58,-61,-62,-92,-91,-51,-55,-95,-99,-64,-93,-52,-53,-56,-57,-59,-98,]),'MAYIGUAL':([47,48,49,51,54,55,56,93,96,97,98,100,101,102,134,146,149,153,155,203,239,248,249,250,251,252,253,],[-34,-35,-36,-60,-8,-96,-97,-94,144,-54,-58,-61,-62,-92,-91,-51,-55,-95,-99,-64,-93,-52,-53,-56,-57,-59,-98,]),'IGUAL':([47,48,49,51,54,55,56,93,96,97,98,100,101,102,134,146,149,153,155,203,239,248,249,250,251,252,253,],[-34,-35,-36,-60,-8,-96,-97,-94,145,-54,-58,-61,-62,-92,-91,-51,-55,-95,-99,-64,-93,-52,-53,-56,-57,-59,-98,]),'MULT':([49,51,54,55,56,93,98,100,101,102,134,153,155,203,239,252,253,],[-36,-60,-8,-96,-97,-94,150,-61,-62,-92,-91,-95,-99,-64,-93,-59,-98,]),'DIV':([49,51,54,55,56,93,98,100,101,102,134,153,155,203,239,252,253,],[-36,-60,-8,-96,-97,-94,151,-61,-62,-92,-91,-95,-99,-64,-93,-59,-98,]),'ASIG':([63,93,108,134,162,239,],[-8,-94,-92,-91,210,-93,]),'BRADER':([64,65,66,67,68,69,71,110,111,158,160,208,231,232,261,262,263,266,267,268,269,270,271,286,289,291,293,298,299,309,310,311,325,329,330,335,338,],[-16,-65,-66,-67,-68,-69,-73,-15,-70,207,-18,-17,-120,-121,-78,-16,-79,-109,-110,-111,-112,-113,-114,-72,-76,310,-115,-116,-117,-77,-104,-87,-84,-118,-119,342,-122,]),'BACKGROUND':([104,],[157,]),'INPUT':([210,],[259,]),'PUNTO':([226,227,228,294,300,301,328,336,337,],[273,273,273,273,273,273,-127,-125,-126,]),'ELSE':([261,310,],[290,-104,]),'ROTATE':([273,],[295,]),'STRETCH':([273,],[296,]),'FILL':([273,],[297,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'creaDirFunc':([3,],[4,]),'ajustes':([5,],[6,]),'var_func':([6,91,],[9,131,]),'tipo':([6,33,39,57,91,129,185,205,282,307,319,333,],[10,41,62,41,10,186,186,186,305,62,41,41,]),'tipo_main':([9,],[16,]),'tipo_void':([11,187,],[18,236,]),'actualiza_tipo':([12,13,],[19,20,]),'actualiza_id':([17,22,24,54,63,90,92,107,235,280,321,],[23,26,30,102,108,130,132,161,279,304,334,]),'var_o_func':([23,],[27,]),'crea_var':([23,130,132,161,334,],[29,188,189,209,341,]),'crea_func':([26,28,30,279,304,],[32,33,36,303,320,]),'lista':([29,102,108,188,189,209,341,],[34,155,162,237,238,256,345,]),'bloque_func':([32,89,156,339,344,],[38,129,205,343,346,]),'pars':([33,57,319,333,],[40,103,332,340,]),'vars_lista':([34,238,256,],[42,283,285,]),'expresion':([35,105,109,112,113,115,116,117,118,119,120,121,122,123,124,125,128,133,154,169,191,210,213,217,229,230,233,302,313,314,],[44,159,164,165,167,170,171,172,173,174,175,176,177,178,179,180,183,190,164,219,240,258,260,167,276,277,278,318,326,327,]),'expr':([35,105,109,112,113,115,116,117,118,119,120,121,122,123,124,125,128,133,154,169,191,192,210,213,217,229,230,233,302,313,314,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,241,45,45,45,45,45,45,45,45,45,]),'exp':([35,105,109,112,113,115,116,117,118,119,120,121,122,123,124,125,128,133,154,169,191,192,193,194,195,196,197,198,210,213,217,229,230,233,302,313,314,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,242,243,244,245,246,247,46,46,46,46,46,46,46,46,46,]),'e':([35,99,105,109,112,113,115,116,117,118,119,120,121,122,123,124,125,128,133,154,169,191,192,193,194,195,196,197,198,199,200,210,213,217,229,230,233,302,313,314,],[47,152,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,248,249,47,47,47,47,47,47,47,47,47,]),'termino':([35,99,105,109,112,113,115,116,117,118,119,120,121,122,123,124,125,128,133,154,169,191,192,193,194,195,196,197,198,199,200,201,202,210,213,217,229,230,233,302,313,314,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,250,251,48,48,48,48,48,48,48,48,48,]),'factor':([35,99,105,109,112,113,115,116,117,118,119,120,121,122,123,124,125,128,133,154,169,191,192,193,194,195,196,197,198,199,200,201,202,210,213,217,229,230,233,302,313,314,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'var':([35,52,53,99,105,109,112,113,115,116,117,118,119,120,121,122,123,124,125,128,133,154,169,191,192,193,194,195,196,197,198,199,200,201,202,210,213,217,229,230,233,302,313,314,],[51,100,101,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'vars_estatutos':([39,],[59,]),'vars':([39,307,],[60,324,]),'estatutos':([39,60,64,262,],[61,106,110,291,]),'estatuto':([39,60,64,262,],[64,64,64,64,]),'asignacion':([39,60,64,262,],[65,65,65,65,]),'condicion':([39,60,64,262,],[66,66,66,66,]),'escritura':([39,60,64,262,],[67,67,67,67,]),'ciclo':([39,60,64,262,],[68,68,68,68,]),'instruccion':([39,60,64,262,],[69,69,69,69,]),'func_call':([39,60,64,262,],[70,70,70,70,]),'pop_or':([45,],[94,]),'pop_and':([46,],[95,]),'pop_rel_e':([47,],[96,]),'pop_suma_resta':([48,],[97,]),'pop_mult_div':([49,],[98,]),'push_paren':([50,],[99,]),'push_cont':([74,],[114,]),'matriz':([93,],[134,]),'or_expr':([94,],[135,]),'and_exp':([95,],[137,]),'rel_e':([96,],[139,]),'suma_resta':([97,],[146,]),'mult_div':([98,],[149,]),'var_func_call':([102,],[153,]),'returns':([105,],[158,]),'args':([109,154,],[163,204,]),'arg_escritura':([113,217,],[166,264,]),'funcs':([129,185,205,],[184,234,254,]),'func':([129,185,205,],[185,185,185,]),'push_oper':([136,138,140,141,142,143,144,145,147,148,150,151,],[191,192,193,194,195,196,197,198,199,200,201,202,]),'arg':([164,260,],[212,288,]),'args_escritura':([167,168,],[216,218,]),'pop_paren':([203,],[252,]),'exp_input':([210,],[257,]),'bloque':([214,290,292,],[261,309,311,]),'fin_exp_repeat':([219,],[265,]),'transform':([226,227,228,294,300,301,],[272,274,275,312,316,317,]),'par':([237,345,],[281,347,]),'else_bloque':([261,],[289,]),'altera':([273,],[294,]),'mas_vars':([307,],[323,]),'fin_repeat':([311,],[325,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> MODULE ID creaDirFunc PUNTCOM ajustes var_func tipo_main MAIN actualiza_id crea_func bloque_func','programa',11,'p_programa','ProyectoFinal_Yacc.py',32),
  ('creaDirFunc -> <empty>','creaDirFunc',0,'p_creaDirFunc','ProyectoFinal_Yacc.py',35),
  ('ajustes -> CANVAS BRAIZQ WIDTH CTE_I PUNTCOM HEIGHT CTE_I PUNTCOM BACKGROUND CTE_F COMA CTE_F COMA CTE_F PUNTCOM BRADER','ajustes',16,'p_ajustes','ProyectoFinal_Yacc.py',44),
  ('ajustes -> IMPORT CTE_STR','ajustes',2,'p_ajustes','ProyectoFinal_Yacc.py',45),
  ('var_func -> tipo ID actualiza_id var_o_func','var_func',4,'p_var_func','ProyectoFinal_Yacc.py',48),
  ('var_func -> VOID tipo_void ID actualiza_id crea_func PARIZQ pars PARDER bloque_func funcs','var_func',10,'p_var_func','ProyectoFinal_Yacc.py',49),
  ('var_func -> <empty>','var_func',0,'p_var_func','ProyectoFinal_Yacc.py',50),
  ('actualiza_id -> <empty>','actualiza_id',0,'p_actualiza_id','ProyectoFinal_Yacc.py',53),
  ('var_o_func -> PARIZQ crea_func pars PARDER bloque_func funcs','var_o_func',6,'p_var_o_func','ProyectoFinal_Yacc.py',58),
  ('var_o_func -> crea_var lista vars_lista PUNTCOM var_func','var_o_func',5,'p_var_o_func','ProyectoFinal_Yacc.py',59),
  ('crea_var -> <empty>','crea_var',0,'p_crea_var','ProyectoFinal_Yacc.py',62),
  ('bloque_func -> BRAIZQ vars_estatutos RETURN returns BRADER','bloque_func',5,'p_bloque_func','ProyectoFinal_Yacc.py',71),
  ('vars_estatutos -> vars estatutos','vars_estatutos',2,'p_vars_estatutos','ProyectoFinal_Yacc.py',76),
  ('vars_estatutos -> estatutos','vars_estatutos',1,'p_vars_estatutos','ProyectoFinal_Yacc.py',77),
  ('estatutos -> estatuto estatutos','estatutos',2,'p_estatutos','ProyectoFinal_Yacc.py',80),
  ('estatutos -> <empty>','estatutos',0,'p_estatutos','ProyectoFinal_Yacc.py',81),
  ('returns -> expresion PUNTCOM','returns',2,'p_returns','ProyectoFinal_Yacc.py',84),
  ('returns -> PUNTCOM','returns',1,'p_returns','ProyectoFinal_Yacc.py',85),
  ('vars -> tipo ID actualiza_id crea_var lista vars_lista PUNTCOM mas_vars','vars',8,'p_vars','ProyectoFinal_Yacc.py',88),
  ('vars_lista -> COMA ID actualiza_id crea_var lista vars_lista','vars_lista',6,'p_vars_lista','ProyectoFinal_Yacc.py',91),
  ('vars_lista -> <empty>','vars_lista',0,'p_vars_lista','ProyectoFinal_Yacc.py',92),
  ('mas_vars -> vars','mas_vars',1,'p_mas_vars','ProyectoFinal_Yacc.py',94),
  ('mas_vars -> <empty>','mas_vars',0,'p_mas_vars','ProyectoFinal_Yacc.py',95),
  ('funcs -> func funcs','funcs',2,'p_funcs','ProyectoFinal_Yacc.py',97),
  ('funcs -> <empty>','funcs',0,'p_funcs','ProyectoFinal_Yacc.py',98),
  ('func -> tipo ID actualiza_id crea_func PARIZQ pars PARDER bloque_func','func',8,'p_func','ProyectoFinal_Yacc.py',101),
  ('func -> VOID tipo_void ID actualiza_id crea_func PARIZQ pars PARDER bloque_func','func',9,'p_func','ProyectoFinal_Yacc.py',102),
  ('tipo_void -> <empty>','tipo_void',0,'p_tipo_void','ProyectoFinal_Yacc.py',105),
  ('tipo_main -> <empty>','tipo_main',0,'p_tipo_main','ProyectoFinal_Yacc.py',110),
  ('crea_func -> <empty>','crea_func',0,'p_crea_func','ProyectoFinal_Yacc.py',115),
  ('push_oper -> <empty>','push_oper',0,'p_push_oper','ProyectoFinal_Yacc.py',126),
  ('pop_or -> <empty>','pop_or',0,'p_pop_or','ProyectoFinal_Yacc.py',153),
  ('pop_and -> <empty>','pop_and',0,'p_pop_and','ProyectoFinal_Yacc.py',157),
  ('pop_rel_e -> <empty>','pop_rel_e',0,'p_pop_rel_e','ProyectoFinal_Yacc.py',161),
  ('pop_suma_resta -> <empty>','pop_suma_resta',0,'p_pop_suma_resta','ProyectoFinal_Yacc.py',165),
  ('pop_mult_div -> <empty>','pop_mult_div',0,'p_pop_mult_div','ProyectoFinal_Yacc.py',169),
  ('expresion -> expr pop_or or_expr','expresion',3,'p_expresion','ProyectoFinal_Yacc.py',173),
  ('or_expr -> OR push_oper expresion','or_expr',3,'p_or_expr','ProyectoFinal_Yacc.py',176),
  ('or_expr -> <empty>','or_expr',0,'p_or_expr','ProyectoFinal_Yacc.py',177),
  ('expr -> exp pop_and and_exp','expr',3,'p_expr','ProyectoFinal_Yacc.py',180),
  ('and_exp -> AND push_oper expr','and_exp',3,'p_and_exp','ProyectoFinal_Yacc.py',183),
  ('and_exp -> <empty>','and_exp',0,'p_and_exp','ProyectoFinal_Yacc.py',184),
  ('exp -> e pop_rel_e rel_e','exp',3,'p_exp','ProyectoFinal_Yacc.py',187),
  ('rel_e -> DIF push_oper exp','rel_e',3,'p_rel_e','ProyectoFinal_Yacc.py',190),
  ('rel_e -> MENOR push_oper exp','rel_e',3,'p_rel_e','ProyectoFinal_Yacc.py',191),
  ('rel_e -> MAYOR push_oper exp','rel_e',3,'p_rel_e','ProyectoFinal_Yacc.py',192),
  ('rel_e -> MENIGUAL push_oper exp','rel_e',3,'p_rel_e','ProyectoFinal_Yacc.py',193),
  ('rel_e -> MAYIGUAL push_oper exp','rel_e',3,'p_rel_e','ProyectoFinal_Yacc.py',194),
  ('rel_e -> IGUAL push_oper exp','rel_e',3,'p_rel_e','ProyectoFinal_Yacc.py',195),
  ('rel_e -> <empty>','rel_e',0,'p_rel_e','ProyectoFinal_Yacc.py',196),
  ('e -> termino pop_suma_resta suma_resta','e',3,'p_e','ProyectoFinal_Yacc.py',199),
  ('suma_resta -> SUMA push_oper e','suma_resta',3,'p_suma_resta','ProyectoFinal_Yacc.py',202),
  ('suma_resta -> RESTA push_oper e','suma_resta',3,'p_suma_resta','ProyectoFinal_Yacc.py',203),
  ('suma_resta -> <empty>','suma_resta',0,'p_suma_resta','ProyectoFinal_Yacc.py',204),
  ('termino -> factor pop_mult_div mult_div','termino',3,'p_termino','ProyectoFinal_Yacc.py',207),
  ('mult_div -> MULT push_oper termino','mult_div',3,'p_mult','ProyectoFinal_Yacc.py',211),
  ('mult_div -> DIV push_oper termino','mult_div',3,'p_mult','ProyectoFinal_Yacc.py',212),
  ('mult_div -> <empty>','mult_div',0,'p_mult','ProyectoFinal_Yacc.py',213),
  ('factor -> PARIZQ push_paren e PARDER pop_paren','factor',5,'p_factor','ProyectoFinal_Yacc.py',216),
  ('factor -> var','factor',1,'p_factor','ProyectoFinal_Yacc.py',217),
  ('factor -> SUMA var','factor',2,'p_factor','ProyectoFinal_Yacc.py',218),
  ('factor -> RESTA var','factor',2,'p_factor','ProyectoFinal_Yacc.py',219),
  ('push_paren -> <empty>','push_paren',0,'p_push_paren','ProyectoFinal_Yacc.py',222),
  ('pop_paren -> <empty>','pop_paren',0,'p_pop_paren','ProyectoFinal_Yacc.py',227),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','ProyectoFinal_Yacc.py',234),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','ProyectoFinal_Yacc.py',235),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','ProyectoFinal_Yacc.py',236),
  ('estatuto -> ciclo','estatuto',1,'p_estatuto','ProyectoFinal_Yacc.py',237),
  ('estatuto -> instruccion','estatuto',1,'p_estatuto','ProyectoFinal_Yacc.py',238),
  ('estatuto -> func_call PUNTCOM','estatuto',2,'p_estatuto','ProyectoFinal_Yacc.py',239),
  ('func_call -> ID PARIZQ args PARDER','func_call',4,'p_func_call','ProyectoFinal_Yacc.py',242),
  ('asignacion -> ID actualiza_id lista ASIG exp_input PUNTCOM','asignacion',6,'p_asignacion','ProyectoFinal_Yacc.py',246),
  ('asignacion -> error','asignacion',1,'p_asignacion_error','ProyectoFinal_Yacc.py',257),
  ('exp_input -> expresion','exp_input',1,'p_exp_input','ProyectoFinal_Yacc.py',261),
  ('exp_input -> INPUT PARIZQ PARDER','exp_input',3,'p_exp_input','ProyectoFinal_Yacc.py',262),
  ('condicion -> IF PARIZQ expresion PARDER bloque else_bloque','condicion',6,'p_condicion','ProyectoFinal_Yacc.py',265),
  ('else_bloque -> ELSE bloque','else_bloque',2,'p_else_bloque','ProyectoFinal_Yacc.py',268),
  ('else_bloque -> <empty>','else_bloque',0,'p_else_bloque','ProyectoFinal_Yacc.py',269),
  ('escritura -> PRINT PARIZQ arg_escritura PARDER PUNTCOM','escritura',5,'p_escritura','ProyectoFinal_Yacc.py',271),
  ('arg_escritura -> expresion args_escritura','arg_escritura',2,'p_arg_escritura','ProyectoFinal_Yacc.py',274),
  ('arg_escritura -> CTE_STR args_escritura','arg_escritura',2,'p_arg_escritura','ProyectoFinal_Yacc.py',275),
  ('args_escritura -> COMA arg_escritura','args_escritura',2,'p_args_escritura','ProyectoFinal_Yacc.py',278),
  ('args_escritura -> <empty>','args_escritura',0,'p_args_escritura','ProyectoFinal_Yacc.py',279),
  ('ciclo -> REPEAT push_cont PARIZQ expresion fin_exp_repeat PARDER bloque fin_repeat','ciclo',8,'p_ciclo','ProyectoFinal_Yacc.py',282),
  ('push_cont -> <empty>','push_cont',0,'p_push_cont','ProyectoFinal_Yacc.py',285),
  ('fin_exp_repeat -> <empty>','fin_exp_repeat',0,'p_fin_exp_repeat','ProyectoFinal_Yacc.py',290),
  ('fin_repeat -> <empty>','fin_repeat',0,'p_fin_repeat','ProyectoFinal_Yacc.py',302),
  ('tipo -> INT actualiza_tipo','tipo',2,'p_tipo','ProyectoFinal_Yacc.py',311),
  ('tipo -> FLOAT actualiza_tipo','tipo',2,'p_tipo','ProyectoFinal_Yacc.py',312),
  ('actualiza_tipo -> <empty>','actualiza_tipo',0,'p_actualiza_tipo','ProyectoFinal_Yacc.py',315),
  ('lista -> CORIZQ expresion CORDER matriz','lista',4,'p_lista','ProyectoFinal_Yacc.py',320),
  ('lista -> <empty>','lista',0,'p_lista','ProyectoFinal_Yacc.py',321),
  ('matriz -> CORIZQ expresion CORDER','matriz',3,'p_matriz','ProyectoFinal_Yacc.py',329),
  ('matriz -> <empty>','matriz',0,'p_matriz','ProyectoFinal_Yacc.py',330),
  ('var -> ID actualiza_id var_func_call','var',3,'p_var','ProyectoFinal_Yacc.py',338),
  ('var -> CTE_I','var',1,'p_var_int','ProyectoFinal_Yacc.py',341),
  ('var -> CTE_F','var',1,'p_var_float','ProyectoFinal_Yacc.py',346),
  ('var_func_call -> PARIZQ args PARDER','var_func_call',3,'p_var_func_call','ProyectoFinal_Yacc.py',351),
  ('var_func_call -> lista','var_func_call',1,'p_var_func_call','ProyectoFinal_Yacc.py',352),
  ('args -> expresion arg','args',2,'p_args','ProyectoFinal_Yacc.py',387),
  ('args -> <empty>','args',0,'p_args','ProyectoFinal_Yacc.py',388),
  ('arg -> COMA expresion arg','arg',3,'p_arg','ProyectoFinal_Yacc.py',394),
  ('arg -> <empty>','arg',0,'p_arg','ProyectoFinal_Yacc.py',395),
  ('bloque -> BRAIZQ estatutos BRADER','bloque',3,'p_bloque','ProyectoFinal_Yacc.py',401),
  ('pars -> tipo ID actualiza_id crea_var lista par','pars',6,'p_pars','ProyectoFinal_Yacc.py',404),
  ('pars -> <empty>','pars',0,'p_pars','ProyectoFinal_Yacc.py',405),
  ('par -> COMA tipo ID actualiza_id crea_var lista par','par',7,'p_par','ProyectoFinal_Yacc.py',410),
  ('par -> <empty>','par',0,'p_par','ProyectoFinal_Yacc.py',411),
  ('instruccion -> FORWARD PARIZQ expresion PARDER PUNTCOM','instruccion',5,'p_instruccion','ProyectoFinal_Yacc.py',416),
  ('instruccion -> BACKWARD PARIZQ expresion PARDER PUNTCOM','instruccion',5,'p_instruccion','ProyectoFinal_Yacc.py',417),
  ('instruccion -> LEFT PARIZQ expresion PARDER PUNTCOM','instruccion',5,'p_instruccion','ProyectoFinal_Yacc.py',418),
  ('instruccion -> RIGHT PARIZQ expresion PARDER PUNTCOM','instruccion',5,'p_instruccion','ProyectoFinal_Yacc.py',419),
  ('instruccion -> TURN PARIZQ expresion PARDER PUNTCOM','instruccion',5,'p_instruccion','ProyectoFinal_Yacc.py',420),
  ('instruccion -> SIZE PARIZQ expresion PARDER PUNTCOM','instruccion',5,'p_instruccion','ProyectoFinal_Yacc.py',421),
  ('instruccion -> CIRCLE PARIZQ expresion PARDER transform PUNTCOM','instruccion',6,'p_instruccion','ProyectoFinal_Yacc.py',422),
  ('instruccion -> TRIANGLE PARIZQ expresion PARDER transform PUNTCOM','instruccion',6,'p_instruccion','ProyectoFinal_Yacc.py',423),
  ('instruccion -> SQUARE PARIZQ expresion PARDER transform PUNTCOM','instruccion',6,'p_instruccion','ProyectoFinal_Yacc.py',424),
  ('instruccion -> NGON PARIZQ expresion COMA expresion PARDER transform PUNTCOM','instruccion',8,'p_instruccion','ProyectoFinal_Yacc.py',425),
  ('instruccion -> ARC PARIZQ expresion COMA expresion PARDER transform PUNTCOM','instruccion',8,'p_instruccion','ProyectoFinal_Yacc.py',426),
  ('instruccion -> UP PARIZQ PARDER PUNTCOM','instruccion',4,'p_instruccion','ProyectoFinal_Yacc.py',427),
  ('instruccion -> DOWN PARIZQ PARDER PUNTCOM','instruccion',4,'p_instruccion','ProyectoFinal_Yacc.py',428),
  ('instruccion -> COLOR PARIZQ expresion COMA expresion COMA expresion PARDER PUNTCOM','instruccion',9,'p_instruccion','ProyectoFinal_Yacc.py',429),
  ('transform -> PUNTO altera transform','transform',3,'p_transform','ProyectoFinal_Yacc.py',432),
  ('transform -> <empty>','transform',0,'p_transform','ProyectoFinal_Yacc.py',433),
  ('altera -> ROTATE PARIZQ expresion PARDER','altera',4,'p_altera','ProyectoFinal_Yacc.py',436),
  ('altera -> STRETCH PARIZQ expresion PARDER','altera',4,'p_altera','ProyectoFinal_Yacc.py',437),
  ('altera -> FILL PARIZQ PARDER','altera',3,'p_altera','ProyectoFinal_Yacc.py',438),
]
